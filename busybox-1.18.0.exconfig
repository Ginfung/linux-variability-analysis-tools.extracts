config HAVE_DOT_CONFIG boolean {
 default [y] if []
<<<>>>
}
menu "Busybox Settings" {
<<<>>>
 menu "General Configuration" {
 <<<>>>
  config DESKTOP boolean {
   prompt "Enable options for full-blown desktop systems" if []
   default [y] if []
  <<<Enable options and features which are not essential.
Select this only if you plan to use busybox on full-blown
desktop machine with common Linux distro, not on an embedded box.
>>>
  }
  config EXTRA_COMPAT boolean {
   prompt "Provide compatible behavior for rare corner cases (bigger code)" if []
   default [n] if []
  <<<This option makes grep, sed etc handle rare corner cases
(embedded NUL bytes and such). This makes code bigger and uses
some GNU extensions in libc. You probably only need this option
if you plan to run busybox on desktop.
>>>
  }
  config INCLUDE_SUSv2 boolean {
   prompt "Enable obsolete features removed before SUSv3" if []
   default [y] if []
  <<<This option will enable backwards compatibility with SuSv2,
specifically, old-style numeric options ('command -1 <file>')
will be supported in head, tail, and fold. (Note: should
affect renice too.)
>>>
  }
  config USE_PORTABLE_CODE boolean {
   prompt "Avoid using GCC-specific code constructs" if []
   default [n] if []
  <<<Use this option if you are trying to compile busybox with
compiler other than gcc.
If you do use gcc, this option may needlessly increase code size.
>>>
  }
  config PLATFORM_LINUX boolean {
   prompt "Enable Linux-specific applets and features" if []
   default [y] if []
  <<<For the most part, busybox requires only POSIX compatibility
from the target system, but some applets and features use
Linux-specific interfaces.

Answering 'N' here will disable such applets and hide the
corresponding configuration options.
>>>
  }
  choice boolean {
   prompt "Buffer allocation policy" if []
   default [FEATURE_BUFFERS_USE_MALLOC] if []
  <<<There are 3 ways BusyBox can handle buffer allocations:
- Use malloc. This costs code size for the call to xmalloc.
- Put them on stack. For some very small machines with limited stack
  space, this can be deadly. For most folks, this works just fine.
- Put them in BSS. This works beautifully for computers with a real
  MMU (and OS support), but wastes runtime RAM for uCLinux. This
  behavior was the only one available for BusyBox versions 0.48 and
  earlier.
>>>
   config FEATURE_BUFFERS_USE_MALLOC boolean {
    prompt "Allocate with Malloc" if [<choice>]
   <<<>>>
   }
   config FEATURE_BUFFERS_GO_ON_STACK boolean {
    prompt "Allocate on the Stack" if [<choice>]
   <<<>>>
   }
   config FEATURE_BUFFERS_GO_IN_BSS boolean {
    prompt "Allocate in the .bss section" if [<choice>]
   <<<>>>
   }
  }
  config SHOW_USAGE boolean {
   prompt "Show terse applet usage messages" if []
   default [y] if []
  <<<All BusyBox applets will show help messages when invoked with
wrong arguments. You can turn off printing these terse usage
messages if you say no here.
This will save you up to 7k.
>>>
   config FEATURE_VERBOSE_USAGE boolean {
    prompt "Show verbose applet usage messages" if [SHOW_USAGE]
    default [y] if [SHOW_USAGE]
   <<<All BusyBox applets will show more verbose help messages when
busybox is invoked with --help. This will add a lot of text to the
busybox binary. In the default configuration, this will add about
13k, but it can add much more depending on your configuration.
>>>
   }
   config FEATURE_COMPRESS_USAGE boolean {
    prompt "Store applet usage messages in compressed form" if [SHOW_USAGE]
    default [y] if [SHOW_USAGE]
   <<<Store usage messages in compressed form, uncompress them on-the-fly
when <applet> --help is called.

If you have a really tiny busybox with few applets enabled (and
bunzip2 isn't one of them), the overhead of the decompressor might
be noticeable. Also, if you run executables directly from ROM
and have very little memory, this might not be a win. Otherwise,
you probably want this.
>>>
   }
  }
  config FEATURE_INSTALLER boolean {
   prompt "Support --install [-s] to install applet links at runtime" if []
   default [y] if []
  <<<Enable 'busybox --install [-s]' support. This will allow you to use
busybox at runtime to create hard links or symlinks for all the
applets that are compiled into busybox.
>>>
   config INSTALL_NO_USR boolean {
    prompt "Don't use /usr" if [FEATURE_INSTALLER]
    default [n] if [FEATURE_INSTALLER]
   <<<Disable use of /usr. busybox --install will install applets
only to /bin and /sbin, never to /usr/bin or /usr/sbin.
>>>
   }
  }
  config LOCALE_SUPPORT boolean {
   prompt "Enable locale support (system needs locale for this to work)" if []
   default [n] if []
  <<<Enable this if your system has locale support and you would like
busybox to support locale settings.
>>>
  }
  config UNICODE_SUPPORT boolean {
   prompt "Support Unicode" if []
   default [y] if []
  <<<This makes various applets aware that one byte is not
one character on screen.

Busybox aims to eventually work correctly with Unicode displays.
Any older encodings are not guaranteed to work.
Probably by the time when busybox will be fully Unicode-clean,
other encodings will be mainly of historic interest.
>>>
   config UNICODE_USING_LOCALE boolean {
    prompt "Use libc routines for Unicode (else uses internal ones)" if [UNICODE_SUPPORT && LOCALE_SUPPORT]
    default [n] if [UNICODE_SUPPORT && LOCALE_SUPPORT]
   <<<With this option on, Unicode support is implemented using libc
routines. Otherwise, internal implementation is used.
Internal implementation is smaller.
>>>
   }
   config FEATURE_CHECK_UNICODE_IN_ENV boolean {
    prompt "Check $LANG environment variable" if [UNICODE_SUPPORT && !UNICODE_USING_LOCALE]
    default [n] if [UNICODE_SUPPORT && !UNICODE_USING_LOCALE]
   <<<With this option on, Unicode support is activated
only if LANG variable has the value of the form "xxxx.utf8"

Otherwise, Unicode support will be always enabled and active.
>>>
   }
   config SUBST_WCHAR integer {
    prompt "Character code to substitute unprintable characters with" if [UNICODE_SUPPORT]
    default [63] if [UNICODE_SUPPORT]
   <<<Typical values are 63 for '?' (works with any output device),
30 for ASCII substitute control code,
65533 (0xfffd) for Unicode replacement character.
>>>
   }
   config LAST_SUPPORTED_WCHAR integer {
    prompt "Range of supported Unicode characters" if [UNICODE_SUPPORT]
    default [767] if [UNICODE_SUPPORT]
   <<<Any character with Unicode value bigger than this is assumed
to be non-printable on output device. Many applets replace
such chars with substitution character.

The idea is that many valid printable Unicode chars are
nevertheless are not displayed correctly. Think about
combining charachers, double-wide hieroglyphs, obscure
characters in dozens of ancient scripts...
Many terminals, terminal emulators, xterms etc will fail
to handle them correctly. Choose the smallest value
which suits your needs.

Typical values are:
126 - ASCII only
767 (0x2ff) - there are no combining chars in [0..767] range
              (the range includes Latin 1, Latin Ext. A and B),
              code is ~700 bytes smaller for this case.
4351 (0x10ff) - there are no double-wide chars in [0..4351] range,
              code is ~300 bytes smaller for this case.
12799 (0x31ff) - nearly all non-ideographic characters are
              available in [0..12799] range, including
              East Asian scripts like katakana, hiragana, hangul,
              bopomofo...
0 - off, any valid printable Unicode character will be printed.
>>>
   }
   config UNICODE_COMBINING_WCHARS boolean {
    prompt "Allow zero-width Unicode characters on output" if [UNICODE_SUPPORT]
    default [n] if [UNICODE_SUPPORT]
   <<<With this option off, any Unicode char with width of 0
is substituted on output.
>>>
   }
   config UNICODE_WIDE_WCHARS boolean {
    prompt "Allow wide Unicode characters on output" if [UNICODE_SUPPORT]
    default [n] if [UNICODE_SUPPORT]
   <<<With this option off, any Unicode char with width > 1
is substituted on output.
>>>
   }
   config UNICODE_BIDI_SUPPORT boolean {
    prompt "Bidirectional character-aware line input" if [UNICODE_SUPPORT && !UNICODE_USING_LOCALE]
    default [n] if [UNICODE_SUPPORT && !UNICODE_USING_LOCALE]
   <<<With this option on, right-to-left Unicode characters
are treated differently on input (e.g. cursor movement).
>>>
    config UNICODE_NEUTRAL_TABLE boolean {
     prompt "In bidi input, support non-ASCII neutral chars too" if [UNICODE_BIDI_SUPPORT]
     default [n] if [UNICODE_BIDI_SUPPORT]
    <<<In most cases it's enough to treat only ASCII non-letters
(i.e. punctuation, numbers and space) as characters
with neutral directionality.
With this option on, more extensive (and bigger) table
of neutral chars will be used.
>>>
    }
   }
   config UNICODE_PRESERVE_BROKEN boolean {
    prompt "Make it possible to enter sequences of chars which are not Unicode" if [UNICODE_SUPPORT]
    default [n] if [UNICODE_SUPPORT]
   <<<With this option on, invalid UTF-8 bytes are not substituted
with the selected substitution character.
For example, this means that entering 'l', 's', ' ', 0xff, [Enter]
at shell prompt will list file named 0xff (single char name
with char value 255), not file named '?'.
>>>
   }
  }
  config LONG_OPTS boolean {
   prompt "Support for --long-options" if []
   default [y] if []
  <<<Enable this if you want busybox applets to use the gnu --long-option
style, in addition to single character -a -b -c style options.
>>>
  }
  config FEATURE_DEVPTS boolean {
   prompt "Use the devpts filesystem for Unix98 PTYs" if []
   default [y] if []
  <<<Enable if you want BusyBox to use Unix98 PTY support. If enabled,
busybox will use /dev/ptmx for the master side of the pseudoterminal
and /dev/pts/<number> for the slave side. Otherwise, BSD style
/dev/ttyp<number> will be used. To use this option, you should have
devpts mounted.
>>>
  }
  config FEATURE_CLEAN_UP boolean {
   prompt "Clean up all memory before exiting (usually not needed)" if []
   default [n] if []
  <<<As a size optimization, busybox normally exits without explicitly
freeing dynamically allocated memory or closing files. This saves
space since the OS will clean up for us, but it can confuse debuggers
like valgrind, which report tons of memory and resource leaks.

Don't enable this unless you have a really good reason to clean
things up manually.
>>>
  }
  config FEATURE_WTMP boolean {
   prompt "Support wtmp file" if []
   default [y] if []
   select FEATURE_UTMP if []
  <<<The file /var/run/wtmp is used to track when users have logged into
and logged out of the system.
With this option on, certain applets (getty, login, telnetd etc)
will append new entries there.
"last" applet requires this option.
>>>
  }
  config FEATURE_UTMP boolean {
   prompt "Support utmp file" if []
   default [y] if []
  <<<The file /var/run/utmp is used to track who is currently logged in.
With this option on, certain applets (getty, login, telnetd etc)
will create and delete entries there.
"who" applet requires this option.
>>>
  }
  config FEATURE_PIDFILE boolean {
   prompt "Support writing pidfiles" if []
   default [y] if []
  <<<This option makes some applets (e.g. crond, syslogd, inetd) write
a pidfile in /var/run. Some applications rely on them.
>>>
  }
  config FEATURE_SUID boolean {
   prompt "Support for SUID/SGID handling" if []
   default [y] if []
  <<<With this option you can install the busybox binary belonging
to root with the suid bit set, enabling some applets to perform
root-level operations even when run by ordinary users
(for example, mounting of user mounts in fstab needs this).

Busybox will automatically drop priviledges for applets
that don't need root access.

If you are really paranoid and don't want to do this, build two
busybox binaries with different applets in them (and the appropriate
symlinks pointing to each binary), and only set the suid bit on the
one that needs it.

The applets currently marked to need the suid bit are:

crontab, dnsd, findfs, ipcrm, ipcs, login, passwd, ping, su,
traceroute, vlock.
>>>
   config FEATURE_SUID_CONFIG boolean {
    prompt "Runtime SUID/SGID configuration via /etc/busybox.conf" if [FEATURE_SUID]
    default [y] if [FEATURE_SUID]
   <<<Allow the SUID / SGID state of an applet to be determined at runtime
by checking /etc/busybox.conf. (This is sort of a poor man's sudo.)
The format of this file is as follows:

<applet> = [Ssx-][Ssx-][x-] (<username>|<uid>).(<groupname>|<gid>)

An example might help:

[SUID]
su = ssx root.0 # applet su can be run by anyone and runs with
                # euid=0/egid=0
su = ssx        # exactly the same

mount = sx- root.disk # applet mount can be run by root and members
                      # of group disk and runs with euid=0

cp = --- # disable applet cp for everyone

The file has to be owned by user root, group root and has to be
writeable only by root:
      (chown 0.0 /etc/busybox.conf; chmod 600 /etc/busybox.conf)
The busybox executable has to be owned by user root, group
root and has to be setuid root for this to work:
      (chown 0.0 /bin/busybox; chmod 4755 /bin/busybox)

Robert 'sandman' Griebl has more information here:
<url: http://www.softforge.de/bb/suid.html >.
>>>
    config FEATURE_SUID_CONFIG_QUIET boolean {
     prompt "Suppress warning message if /etc/busybox.conf is not readable" if [FEATURE_SUID_CONFIG]
     default [y] if [FEATURE_SUID_CONFIG]
    <<</etc/busybox.conf should be readable by the user needing the SUID,
check this option to avoid users to be notified about missing
permissions.
>>>
    }
   }
  }
  config SELINUX boolean {
   prompt "Support NSA Security Enhanced Linux" if [PLATFORM_LINUX]
   default [n] if [PLATFORM_LINUX]
  <<<Enable support for SELinux in applets ls, ps, and id. Also provide
the option of compiling in SELinux applets.

If you do not have a complete SELinux userland installed, this stuff
will not compile. Go visit
      http://www.nsa.gov/selinux/index.html
to download the necessary stuff to allow busybox to compile with
this option enabled. Specifially, libselinux 1.28 or better is
directly required by busybox. If the installation is located in a
non-standard directory, provide it by invoking make as follows:
      CFLAGS=-I<libselinux-include-path> \
      LDFLAGS=-L<libselinux-lib-path> \
      make

Most people will leave this set to 'N'.
>>>
  }
  config FEATURE_PREFER_APPLETS boolean {
   prompt "exec prefers applets" if []
   default [n] if []
  <<<This is an experimental option which directs applets about to
call 'exec' to try and find an applicable busybox applet before
searching the PATH. This is typically done by exec'ing
/proc/self/exe.
This may affect shell, find -exec, xargs and similar applets.
They will use applets even if /bin/<applet> -> busybox link
is missing (or is not a link to busybox). However, this causes
problems in chroot jails without mounted /proc and with ps/top
(command name can be shown as 'exe' for applets started this way).
>>>
  }
  config BUSYBOX_EXEC_PATH string {
   prompt "Path to BusyBox executable" if []
   default ["/proc/self/exe"] if []
  <<<When Busybox applets need to run other busybox applets, BusyBox
sometimes needs to exec() itself. When the /proc filesystem is
mounted, /proc/self/exe always points to the currently running
executable. If you haven't got /proc, set this to wherever you
want to run BusyBox from.
>>>
  }
  config FEATURE_SYSLOG boolean {
   default [n] if []
  <<<>>>
  }
  config FEATURE_HAVE_RPC boolean {
   default [n] if []
  <<<>>>
  }
 }
 menu "Build Options" {
 <<<>>>
  config STATIC boolean {
   prompt "Build BusyBox as a static binary (no shared libs)" if []
   default [n] if []
  <<<If you want to build a static BusyBox binary, which does not
use or require any shared libraries, then enable this option.
This can cause BusyBox to be considerably larger, so you should
leave this option false unless you have a good reason (i.e.
your target platform does not support shared libraries, or
you are building an initrd which doesn't need anything but
BusyBox, etc).

Most people will leave this set to 'N'.
>>>
   config PIE boolean {
    prompt "Build BusyBox as a position independent executable" if [!STATIC]
    default [n] if [!STATIC]
   <<<(TODO: what is it and why/when is it useful?)
Most people will leave this set to 'N'.
>>>
   }
  }
  config NOMMU boolean {
   prompt "Force NOMMU build" if []
   default [n] if []
  <<<Busybox tries to detect whether architecture it is being
built against supports MMU or not. If this detection fails,
or if you want to build NOMMU version of busybox for testing,
you may force NOMMU build here.

Most people will leave this set to 'N'.
>>>
  }
  config BUILD_LIBBUSYBOX boolean {
   prompt "Build shared libbusybox" if [!FEATURE_PREFER_APPLETS && !PIE && !STATIC]
   default [n] if [!FEATURE_PREFER_APPLETS && !PIE && !STATIC]
  <<<Build a shared library libbusybox.so.N.N.N which contains all
busybox code.

This feature allows every applet to be built as a tiny
separate executable. Enabling it for "one big busybox binary"
approach serves no purpose and increases code size.
You should almost certainly say "no" to this.
>>>
   config FEATURE_INDIVIDUAL boolean {
    prompt "Produce a binary for each applet, linked against libbusybox" if [BUILD_LIBBUSYBOX]
    default [y] if [BUILD_LIBBUSYBOX]
   <<<If your CPU architecture doesn't allow for sharing text/rodata
sections of running binaries, but allows for runtime dynamic
libraries, this option will allow you to reduce memory footprint
when you have many different applets running at once.

If your CPU architecture allows for sharing text/rodata,
having single binary is more optimal.

Each applet will be a tiny program, dynamically linked
against libbusybox.so.N.N.N.

You need to have a working dynamic linker.
>>>
   }
   config FEATURE_SHARED_BUSYBOX boolean {
    prompt "Produce additional busybox binary linked against libbusybox" if [BUILD_LIBBUSYBOX]
    default [y] if [BUILD_LIBBUSYBOX]
   <<<Build busybox, dynamically linked against libbusybox.so.N.N.N.

You need to have a working dynamic linker.
>>>
   }
  }
  config LFS boolean {
   prompt "Build with Large File Support (for accessing files > 2 GB)" if []
   default [y] if []
   select FDISK_SUPPORT_LARGE_DISKS if []
  <<<If you want to build BusyBox with large file support, then enable
this option. This will have no effect if your kernel or your C
library lacks large file support for large files. Some of the
programs that can benefit from large file support include dd, gzip,
cp, mount, tar, and many others. If you want to access files larger
than 2 Gigabytes, enable this option. Otherwise, leave it set to 'N'.
>>>
  }
  config CROSS_COMPILER_PREFIX string {
   prompt "Cross Compiler prefix" if []
   default [""] if []
  <<<If you want to build BusyBox with a cross compiler, then you
will need to set this to the cross-compiler prefix, for example,
"i386-uclibc-".

Note that CROSS_COMPILE environment variable or
"make CROSS_COMPILE=xxx ..." will override this selection.

Native builds leave this empty.
>>>
  }
  config EXTRA_CFLAGS string {
   prompt "Additional CFLAGS" if []
   default [""] if []
  <<<Additional CFLAGS to pass to the compiler verbatim.
>>>
  }
 }
 menu "Debugging Options" {
 <<<>>>
  config DEBUG boolean {
   prompt "Build BusyBox with extra Debugging symbols" if []
   default [n] if []
  <<<Say Y here if you wish to examine BusyBox internals while applets are
running. This increases the size of the binary considerably, and
should only be used when doing development. If you are doing
development and want to debug BusyBox, answer Y.

Most people should answer N.
>>>
   config DEBUG_PESSIMIZE boolean {
    prompt "Disable compiler optimizations" if [DEBUG]
    default [n] if [DEBUG]
   <<<The compiler's optimization of source code can eliminate and reorder
code, resulting in an executable that's hard to understand when
stepping through it with a debugger. This switches it off, resulting
in a much bigger executable that more closely matches the source
code.
>>>
   }
  }
  config WERROR boolean {
   prompt "Abort compilation on any warning" if []
   default [n] if []
  <<<Selecting this will add -Werror to gcc command line.

Most people should answer N.
>>>
  }
  choice boolean {
   prompt "Additional debugging library" if []
   default [NO_DEBUG_LIB] if []
  <<<Using an additional debugging library will make BusyBox become
considerable larger and will cause it to run more slowly. You
should always leave this option disabled for production use.

dmalloc support:
----------------
This enables compiling with dmalloc ( http://dmalloc.com/ )
which is an excellent public domain mem leak and malloc problem
detector. To enable dmalloc, before running busybox you will
want to properly set your environment, for example:
  export DMALLOC_OPTIONS=debug=0x34f47d83,inter=100,log=logfile
The 'debug=' value is generated using the following command
  dmalloc -p log-stats -p log-non-free -p log-bad-space \
     -p log-elapsed-time -p check-fence -p check-heap \
     -p check-lists -p check-blank -p check-funcs -p realloc-copy \
     -p allow-free-null

Electric-fence support:
-----------------------
This enables compiling with Electric-fence support. Electric
fence is another very useful malloc debugging library which uses
your computer's virtual memory hardware to detect illegal memory
accesses. This support will make BusyBox be considerable larger
and run slower, so you should leave this option disabled unless
you are hunting a hard to find memory problem.

>>>
   config NO_DEBUG_LIB boolean {
    prompt "None" if [<choice>]
   <<<>>>
   }
   config DMALLOC boolean {
    prompt "Dmalloc" if [<choice>]
   <<<>>>
   }
   config EFENCE boolean {
    prompt "Electric-fence" if [<choice>]
   <<<>>>
   }
  }
 }
 menu "Installation Options ("make install" behavior)" {
 <<<>>>
  choice boolean {
   prompt "What kind of applet links to install" if []
   default [INSTALL_APPLET_SYMLINKS] if []
  <<<Choose what kind of links to applets are created by "make install".
>>>
   config INSTALL_APPLET_SYMLINKS boolean {
    prompt "as soft-links" if [<choice>]
   <<<Install applets as soft-links to the busybox binary. This needs some
free inodes on the filesystem, but might help with filesystem
generators that can't cope with hard-links.
>>>
   }
   config INSTALL_APPLET_HARDLINKS boolean {
    prompt "as hard-links" if [<choice>]
   <<<Install applets as hard-links to the busybox binary. This might
count on a filesystem with few inodes.
>>>
   }
   config INSTALL_APPLET_SCRIPT_WRAPPERS boolean {
    prompt "as script wrappers" if [<choice>]
   <<<Install applets as script wrappers that call the busybox binary.
>>>
   }
   config INSTALL_APPLET_DONT boolean {
    prompt "not installed" if [<choice> && (FEATURE_INSTALLER || FEATURE_SH_STANDALONE || FEATURE_PREFER_APPLETS)]
   <<<Do not install applet links. Useful when you plan to use
busybox --install for installing links, or plan to use
a standalone shell and thus don't need applet links.
>>>
   }
  }
  choice boolean {
   prompt "/bin/sh applet link" if [INSTALL_APPLET_SCRIPT_WRAPPERS]
   default [INSTALL_SH_APPLET_SYMLINK] if [INSTALL_APPLET_SCRIPT_WRAPPERS]
  <<<Choose how you install /bin/sh applet link.
>>>
   config INSTALL_SH_APPLET_SYMLINK boolean {
    prompt "as soft-link" if [<choice>]
   <<<Install /bin/sh applet as soft-link to the busybox binary.
>>>
   }
   config INSTALL_SH_APPLET_HARDLINK boolean {
    prompt "as hard-link" if [<choice>]
   <<<Install /bin/sh applet as hard-link to the busybox binary.
>>>
   }
   config INSTALL_SH_APPLET_SCRIPT_WRAPPER boolean {
    prompt "as script wrapper" if [<choice>]
   <<<Install /bin/sh applet as script wrapper that calls
the busybox binary.
>>>
   }
  }
  config PREFIX string {
   prompt "BusyBox installation prefix" if []
   default ["./_install"] if []
  <<<Define your directory to install BusyBox files/subdirs in.
>>>
  }
 }
 menu "Busybox Library Tuning" {
 <<<>>>
  config PASSWORD_MINLEN integer {
   prompt "Minimum password length" if []
   default [6] if []
   range [5 32] if []
  <<<Minimum allowable password length.
>>>
  }
  config MD5_SIZE_VS_SPEED integer {
   prompt "MD5: Trade bytes for speed (0:fast, 3:slow)" if []
   default [2] if []
   range [0 3] if []
  <<<Trade binary size versus speed for the md5sum algorithm.
Approximate values running uClibc and hashing
linux-2.4.4.tar.bz2 were:
                  user times (sec)  text size (386)
0 (fastest)         1.1                6144
1                   1.4                5392
2                   3.0                5088
3 (smallest)        5.1                4912
>>>
  }
  config FEATURE_FAST_TOP boolean {
   prompt "Faster /proc scanning code (+100 bytes)" if []
   default [y] if []
  <<<This option makes top (and ps) ~20% faster (or 20% less CPU hungry),
but code size is slightly bigger.
>>>
  }
  config FEATURE_ETC_NETWORKS boolean {
   prompt "Support for /etc/networks" if []
   default [n] if []
  <<<Enable support for network names in /etc/networks. This is
a rarely used feature which allows you to use names
instead of IP/mask pairs in route command.
>>>
  }
  config FEATURE_USE_TERMIOS boolean {
   prompt "Use termios to manipulate the screen" if [MORE || TOP || POWERTOP]
   default [y] if [MORE || TOP || POWERTOP]
  <<<This option allows utilities such as 'more' and 'top' to determine
the size of the screen. If you leave this disabled, your utilities
that display things on the screen will be especially primitive and
will be unable to determine the current screen size, and will be
unable to move the cursor.
>>>
  }
  config FEATURE_EDITING boolean {
   prompt "Command line editing" if []
   default [y] if []
  <<<Enable line editing (mainly for shell command line).
>>>
   config FEATURE_EDITING_MAX_LEN integer {
    prompt "Maximum length of input" if [FEATURE_EDITING]
    range [128 8192] if [FEATURE_EDITING]
    default [1024] if [FEATURE_EDITING]
   <<<Line editing code uses on-stack buffers for storage.
You may want to decrease this parameter if your target machine
benefits from smaller stack usage.
>>>
   }
   config FEATURE_EDITING_VI boolean {
    prompt "vi-style line editing commands" if [FEATURE_EDITING]
    default [n] if [FEATURE_EDITING]
   <<<Enable vi-style line editing. In shells, this mode can be
turned on and off with "set -o vi" and "set +o vi".
>>>
   }
   config FEATURE_EDITING_HISTORY integer {
    prompt "History size" if [FEATURE_EDITING]
    range [0 99999] if [FEATURE_EDITING]
    default [255] if [FEATURE_EDITING]
   <<<Specify command history size.
>>>
   }
   config FEATURE_EDITING_SAVEHISTORY boolean {
    prompt "History saving" if [FEATURE_EDITING]
    default [y] if [FEATURE_EDITING]
   <<<Enable history saving in shells.
>>>
   }
   config FEATURE_TAB_COMPLETION boolean {
    prompt "Tab completion" if [FEATURE_EDITING]
    default [y] if [FEATURE_EDITING]
   <<<Enable tab completion.
>>>
    config FEATURE_USERNAME_COMPLETION boolean {
     prompt "Username completion" if [FEATURE_TAB_COMPLETION]
     default [n] if [FEATURE_TAB_COMPLETION]
    <<<Enable username completion.
>>>
    }
   }
   config FEATURE_EDITING_FANCY_PROMPT boolean {
    prompt "Fancy shell prompts" if [FEATURE_EDITING]
    default [y] if [FEATURE_EDITING]
   <<<Setting this option allows for prompts to use things like \w and
\$ and escape codes.
>>>
   }
   config FEATURE_EDITING_ASK_TERMINAL boolean {
    prompt "Query cursor position from terminal" if [FEATURE_EDITING]
    default [n] if [FEATURE_EDITING]
   <<<Allow usage of "ESC [ 6 n" sequence. Terminal answers back with
current cursor position. This information is used to make line
editing more robust in some cases.
If you are not sure whether your terminals respond to this code
correctly, or want to save on code size (about 400 bytes),
then do not turn this option on.
>>>
   }
  }
  config FEATURE_NON_POSIX_CP boolean {
   prompt "Non-POSIX, but safer, copying to special nodes" if []
   default [y] if []
  <<<With this option, "cp file symlink" will delete symlink
and create a regular file. This does not conform to POSIX,
but prevents a symlink attack.
Similarly, "cp file device" will not send file's data
to the device.
>>>
  }
  config FEATURE_VERBOSE_CP_MESSAGE boolean {
   prompt "Give more precise messages when copy fails (cp, mv etc)" if []
   default [n] if []
  <<<Error messages with this feature enabled:
  $ cp file /does_not_exist/file
  cp: cannot create '/does_not_exist/file': Path does not exist
  $ cp file /vmlinuz/file
  cp: cannot stat '/vmlinuz/file': Path has non-directory component
If this feature is not enabled, they will be, respectively:
  cp: cannot create '/does_not_exist/file': No such file or directory
  cp: cannot stat '/vmlinuz/file': Not a directory
This will cost you ~60 bytes.
>>>
  }
  config FEATURE_COPYBUF_KB integer {
   prompt "Copy buffer size, in kilobytes" if []
   range [1 1024] if []
   default [4] if []
  <<<Size of buffer used by cp, mv, install etc.
Buffers which are 4 kb or less will be allocated on stack.
Bigger buffers will be allocated with mmap, with fallback to 4 kb
stack buffer if mmap fails.
>>>
  }
  config MONOTONIC_SYSCALL boolean {
   prompt "Use clock_gettime(CLOCK_MONOTONIC) syscall" if [PLATFORM_LINUX]
   default [n] if [PLATFORM_LINUX]
  <<<Use clock_gettime(CLOCK_MONOTONIC) syscall for measuring
time intervals (time, ping, traceroute etc need this).
Probably requires Linux 2.6+. If not selected, gettimeofday
will be used instead (which gives wrong results if date/time
is reset).
>>>
  }
  config IOCTL_HEX2STR_ERROR boolean {
   prompt "Use ioctl names rather than hex values in error messages" if []
   default [y] if []
  <<<Use ioctl names rather than hex values in error messages
(e.g. VT_DISALLOCATE rather than 0x5608). If disabled this
saves about 1400 bytes.
>>>
  }
  config FEATURE_HWIB boolean {
   prompt "Support infiniband HW" if []
   default [y] if []
  <<<Support for printing infiniband addresses in
network applets.
>>>
  }
 }
}
<<<>>>
}
menu "Archival Utilities" {
<<<>>>
 config FEATURE_SEAMLESS_XZ boolean {
  prompt "Make tar, rpm, modprobe etc understand .xz data" if []
  default [y] if []
 <<<Make tar, rpm, modprobe etc understand .xz data.
>>>
 }
 config FEATURE_SEAMLESS_LZMA boolean {
  prompt "Make tar, rpm, modprobe etc understand .lzma data" if []
  default [y] if []
 <<<Make tar, rpm, modprobe etc understand .lzma data.
>>>
 }
 config FEATURE_SEAMLESS_BZ2 boolean {
  prompt "Make tar, rpm, modprobe etc understand .bz2 data" if []
  default [y] if []
 <<<Make tar, rpm, modprobe etc understand .bz2 data.
>>>
 }
 config FEATURE_SEAMLESS_GZ boolean {
  prompt "Make tar, rpm, modprobe etc understand .gz data" if []
  default [y] if []
 <<<Make tar, rpm, modprobe etc understand .gz data.
>>>
 }
 config FEATURE_SEAMLESS_Z boolean {
  prompt "Make tar and gunzip understand .Z data" if []
  default [n] if []
 <<<Make tar and gunzip understand .Z data.
>>>
 }
 config AR boolean {
  prompt "ar" if []
  default [n] if []
 <<<ar is an archival utility program used to create, modify, and
extract contents from archives. An archive is a single file holding
a collection of other files in a structure that makes it possible to
retrieve the original individual files (called archive members).
The original files' contents, mode (permissions), timestamp, owner,
and group are preserved in the archive, and can be restored on
extraction.

The stored filename is limited to 15 characters. (for more information
see long filename support).
ar has 60 bytes of overheads for every stored file.

This implementation of ar can extract archives, it cannot create or
modify them.
On an x86 system, the ar applet adds about 1K.

Unless you have a specific application which requires ar, you should
probably say N here.
>>>
  config FEATURE_AR_LONG_FILENAMES boolean {
   prompt "Support for long filenames (not needed for debs)" if [AR]
   default [y] if [AR]
  <<<By default the ar format can only store the first 15 characters
of the filename, this option removes that limitation.
It supports the GNU ar long filename method which moves multiple long
filenames into a the data section of a new ar entry.
>>>
  }
  config FEATURE_AR_CREATE boolean {
   prompt "Support archive creation" if [AR]
   default [y] if [AR]
  <<<This enables archive creation (-c and -r) with busybox ar.
>>>
  }
 }
 config BUNZIP2 boolean {
  prompt "bunzip2" if []
  default [y] if []
 <<<bunzip2 is a compression utility using the Burrows-Wheeler block
sorting text compression algorithm, and Huffman coding. Compression
is generally considerably better than that achieved by more
conventional LZ77/LZ78-based compressors, and approaches the
performance of the PPM family of statistical compressors.

Unless you have a specific application which requires bunzip2, you
should probably say N here.
>>>
 }
 config BZIP2 boolean {
  prompt "bzip2" if []
  default [y] if []
 <<<bzip2 is a compression utility using the Burrows-Wheeler block
sorting text compression algorithm, and Huffman coding. Compression
is generally considerably better than that achieved by more
conventional LZ77/LZ78-based compressors, and approaches the
performance of the PPM family of statistical compressors.

Unless you have a specific application which requires bzip2, you
should probably say N here.
>>>
 }
 config CPIO boolean {
  prompt "cpio" if []
  default [y] if []
 <<<cpio is an archival utility program used to create, modify, and
extract contents from archives.
cpio has 110 bytes of overheads for every stored file.

This implementation of cpio can extract cpio archives created in the
"newc" or "crc" format, it cannot create or modify them.

Unless you have a specific application which requires cpio, you
should probably say N here.
>>>
  config FEATURE_CPIO_O boolean {
   prompt "Support for archive creation" if [CPIO]
   default [y] if [CPIO]
  <<<This implementation of cpio can create cpio archives in the "newc"
format only.
>>>
   config FEATURE_CPIO_P boolean {
    prompt "Support for passthrough mode" if [FEATURE_CPIO_O]
    default [y] if [FEATURE_CPIO_O]
   <<<Passthrough mode. Rarely used.
>>>
   }
  }
 }
 config DPKG boolean {
  prompt "dpkg" if []
  default [n] if []
  select FEATURE_SEAMLESS_GZ if []
 <<<dpkg is a medium-level tool to install, build, remove and manage
Debian packages.

This implementation of dpkg has a number of limitations,
you should use the official dpkg if possible.
>>>
 }
 config DPKG_DEB boolean {
  prompt "dpkg_deb" if []
  default [n] if []
  select FEATURE_SEAMLESS_GZ if []
 <<<dpkg-deb unpacks and provides information about Debian archives.

This implementation of dpkg-deb cannot pack archives.

Unless you have a specific application which requires dpkg-deb,
say N here.
>>>
  config FEATURE_DPKG_DEB_EXTRACT_ONLY boolean {
   prompt "Extract only (-x)" if [DPKG_DEB]
   default [n] if [DPKG_DEB]
  <<<This reduces dpkg-deb to the equivalent of
"ar -p <deb> data.tar.gz | tar -zx". However it saves space as none
of the extra dpkg-deb, ar or tar options are needed, they are linked
to internally.
>>>
  }
 }
 config GUNZIP boolean {
  prompt "gunzip" if []
  default [y] if []
 <<<gunzip is used to decompress archives created by gzip.
You can use the `-t' option to test the integrity of
an archive, without decompressing it.
>>>
 }
 config GZIP boolean {
  prompt "gzip" if []
  default [y] if []
 <<<gzip is used to compress files.
It's probably the most widely used UNIX compression program.
>>>
  config FEATURE_GZIP_LONG_OPTIONS boolean {
   prompt "Enable long options" if [GZIP && LONG_OPTS]
   default [y] if [GZIP && LONG_OPTS]
  <<<Enable use of long options, increases size by about 106 Bytes
>>>
  }
 }
 config LZOP boolean {
  prompt "lzop" if []
  default [y] if []
 <<<Lzop compression/decompresion.
>>>
  config LZOP_COMPR_HIGH boolean {
   prompt "lzop compression levels 7,8,9 (not very useful)" if [LZOP]
   default [n] if [LZOP]
  <<<High levels (7,8,9) of lzop compression. These levels
are actually slower than gzip at equivalent compression ratios
and take up 3.2K of code.
>>>
  }
 }
 config RPM2CPIO boolean {
  prompt "rpm2cpio" if []
  default [y] if []
 <<<Converts a RPM file into a CPIO archive.
>>>
 }
 config RPM boolean {
  prompt "rpm" if []
  default [y] if []
 <<<Mini RPM applet - queries and extracts RPM packages.
>>>
 }
 config TAR boolean {
  prompt "tar" if []
  default [y] if []
 <<<tar is an archiving program. It's commonly used with gzip to
create compressed archives. It's probably the most widely used
UNIX archive program.
>>>
  config FEATURE_TAR_CREATE boolean {
   prompt "Enable archive creation" if [TAR]
   default [y] if [TAR]
  <<<If you enable this option you'll be able to create
tar archives using the `-c' option.
>>>
  }
  config FEATURE_TAR_AUTODETECT boolean {
   prompt "Autodetect compressed tarballs" if [TAR && (FEATURE_SEAMLESS_Z || FEATURE_SEAMLESS_GZ || FEATURE_SEAMLESS_BZ2 || FEATURE_SEAMLESS_LZMA || FEATURE_SEAMLESS_XZ)]
   default [y] if [TAR && (FEATURE_SEAMLESS_Z || FEATURE_SEAMLESS_GZ || FEATURE_SEAMLESS_BZ2 || FEATURE_SEAMLESS_LZMA || FEATURE_SEAMLESS_XZ)]
  <<<With this option tar can automatically detect compressed
tarballs. Currently it works only on files (not pipes etc).
>>>
  }
  config FEATURE_TAR_FROM boolean {
   prompt "Enable -X (exclude from) and -T (include from) options)" if [TAR]
   default [y] if [TAR]
  <<<If you enable this option you'll be able to specify
a list of files to include or exclude from an archive.
>>>
  }
  config FEATURE_TAR_OLDGNU_COMPATIBILITY boolean {
   prompt "Support for old tar header format" if [TAR || DPKG]
   default [y] if [TAR || DPKG]
  <<<This option is required to unpack archives created in
the old GNU format; help to kill this old format by
repacking your ancient archives with the new format.
>>>
  }
  config FEATURE_TAR_OLDSUN_COMPATIBILITY boolean {
   prompt "Enable untarring of tarballs with checksums produced by buggy Sun tar" if [TAR || DPKG]
   default [y] if [TAR || DPKG]
  <<<This option is required to unpack archives created by some old
version of Sun's tar (it was calculating checksum using signed
arithmetic). It is said to be fixed in newer Sun tar, but "old"
tarballs still exist.
>>>
  }
  config FEATURE_TAR_GNU_EXTENSIONS boolean {
   prompt "Support for GNU tar extensions (long filenames)" if [TAR || DPKG]
   default [y] if [TAR || DPKG]
  <<<With this option busybox supports GNU long filenames and
linknames.
>>>
  }
  config FEATURE_TAR_LONG_OPTIONS boolean {
   prompt "Enable long options" if [TAR && LONG_OPTS]
   default [y] if [TAR && LONG_OPTS]
  <<<Enable use of long options, increases size by about 400 Bytes
>>>
   config FEATURE_TAR_TO_COMMAND boolean {
    prompt "Support for writing to an external program" if [TAR && FEATURE_TAR_LONG_OPTIONS]
    default [y] if [TAR && FEATURE_TAR_LONG_OPTIONS]
   <<<If you enable this option you'll be able to instruct tar to send
the contents of each extracted file to the standard input of an
external program.
>>>
   }
  }
  config FEATURE_TAR_UNAME_GNAME boolean {
   prompt "Enable use of user and group names" if [TAR]
   default [y] if [TAR]
  <<<Enables use of user and group names in tar. This affects contents
listings (-t) and preserving permissions when unpacking (-p).
+200 bytes.
>>>
  }
  config FEATURE_TAR_NOPRESERVE_TIME boolean {
   prompt "Enable -m (do not preserve time) option" if [TAR]
   default [y] if [TAR]
  <<<With this option busybox supports GNU tar -m
(do not preserve time) option.
>>>
  }
  config FEATURE_TAR_SELINUX boolean {
   prompt "Support for extracting SELinux labels" if [TAR && SELINUX]
   default [n] if [TAR && SELINUX]
  <<<With this option busybox supports restoring SELinux labels
when extracting files from tar archives.
>>>
  }
 }
 config UNCOMPRESS boolean {
  prompt "uncompress" if []
  default [n] if []
 <<<uncompress is used to decompress archives created by compress.
Not much used anymore, replaced by gzip/gunzip.
>>>
 }
 config UNLZMA boolean {
  prompt "unlzma" if []
  default [y] if []
 <<<unlzma is a compression utility using the Lempel-Ziv-Markov chain
compression algorithm, and range coding. Compression
is generally considerably better than that achieved by the bzip2
compressors.

The BusyBox unlzma applet is limited to de-compression only.
On an x86 system, this applet adds about 4K.

Unless you have a specific application which requires unlzma, you
should probably say N here.
>>>
  config FEATURE_LZMA_FAST boolean {
   prompt "Optimize unlzma for speed" if [UNLZMA]
   default [y] if [UNLZMA]
  <<<This option reduces decompression time by about 25% at the cost of
a 1K bigger binary.
>>>
  }
  config LZMA boolean {
   prompt "Provide lzma alias which supports only unpacking" if [UNLZMA]
   default [y] if [UNLZMA]
  <<<Enable this option if you want commands like "lzma -d" to work.
IOW: you'll get lzma applet, but it will always require -d option.
>>>
  }
 }
 config UNXZ boolean {
  prompt "unxz" if []
  default [y] if []
 <<<unxz is a unlzma successor.
>>>
  config XZ boolean {
   prompt "Provide xz alias which supports only unpacking" if [UNXZ]
   default [y] if [UNXZ]
  <<<Enable this option if you want commands like "xz -d" to work.
IOW: you'll get xz applet, but it will always require -d option.
>>>
  }
 }
 config UNZIP boolean {
  prompt "unzip" if []
  default [y] if []
 <<<unzip will list or extract files from a ZIP archive,
commonly found on DOS/WIN systems. The default behavior
(with no options) is to extract the archive into the
current directory. Use the `-d' option to extract to a
directory of your choice.
>>>
 }
}
menu "Coreutils" {
<<<>>>
 config BASENAME boolean {
  prompt "basename" if []
  default [y] if []
 <<<basename is used to strip the directory and suffix from filenames,
leaving just the filename itself. Enable this option if you wish
to enable the 'basename' utility.>>>
 }
 config CAT boolean {
  prompt "cat" if []
  default [y] if []
 <<<cat is used to concatenate files and print them to the standard
output. Enable this option if you wish to enable the 'cat' utility.>>>
 }
 config DATE boolean {
  prompt "date" if []
  default [y] if []
 <<<date is used to set the system date or display the
current time in the given format.
>>>
  config FEATURE_DATE_ISOFMT boolean {
   prompt "Enable ISO date format output (-I)" if [DATE]
   default [y] if [DATE]
  <<<Enable option (-I) to output an ISO-8601 compliant
date/time string.
>>>
  }
  config FEATURE_DATE_NANO boolean {
   prompt "Support %[num]N nanosecond format specifier" if [DATE && PLATFORM_LINUX]
   default [n] if [DATE && PLATFORM_LINUX]
  <<<Support %[num]N format specifier. Adds ~250 bytes of code.
>>>
  }
  config FEATURE_DATE_COMPAT boolean {
   prompt "Support weird 'date MMDDhhmm[[YY]YY][.ss]' format" if [DATE]
   default [y] if [DATE]
  <<<System time can be set by 'date -s DATE' and simply 'date DATE',
but formats of DATE string are different. 'date DATE' accepts
a rather weird MMDDhhmm[[YY]YY][.ss] format with completely
unnatural placement of year between minutes and seconds.
date -s (and other commands like touch -d) use more sensible
formats (for one, ISO format YYYY-MM-DD hh:mm:ss.ssssss).

With this option off, 'date DATE' is 'date -s DATE' support
the same format. With it on, 'date DATE' additionally supports
MMDDhhmm[[YY]YY][.ss] format.>>>
  }
 }
 config TEST boolean {
  prompt "test" if []
  default [y] if []
 <<<test is used to check file types and compare values,
returning an appropriate exit code. The bash shell
has test built in, ash can build it in optionally.
>>>
  config FEATURE_TEST_64 boolean {
   prompt "Extend test to 64 bit" if [TEST || ASH_BUILTIN_TEST || HUSH]
   default [y] if [TEST || ASH_BUILTIN_TEST || HUSH]
  <<<Enable 64-bit support in test.>>>
  }
 }
 config TR boolean {
  prompt "tr" if []
  default [y] if []
 <<<tr is used to squeeze, and/or delete characters from standard
input, writing to standard output.
>>>
  config FEATURE_TR_CLASSES boolean {
   prompt "Enable character classes (such as [:upper:])" if [TR]
   default [y] if [TR]
  <<<Enable character classes, enabling commands such as:
tr [:upper:] [:lower:] to convert input into lowercase.
>>>
  }
  config FEATURE_TR_EQUIV boolean {
   prompt "Enable equivalence classes" if [TR]
   default [y] if [TR]
  <<<Enable equivalence classes, which essentially add the enclosed
character to the current set. For instance, tr [=a=] xyz would
replace all instances of 'a' with 'xyz'. This option is mainly
useful for cases when no other way of expressing a character
is possible.>>>
  }
 }
 config BASE64 boolean {
  prompt "base64" if []
  default [y] if []
 <<<Base64 encode and decode
>>>
 }
 config CAL boolean {
  prompt "cal" if []
  default [y] if []
 <<<cal is used to display a monthly calender.
>>>
 }
 config CATV boolean {
  prompt "catv" if []
  default [y] if []
 <<<Display nonprinting characters as escape sequences (like some
implementations' cat -v option).
>>>
 }
 config CHGRP boolean {
  prompt "chgrp" if []
  default [y] if []
 <<<chgrp is used to change the group ownership of files.
>>>
 }
 config CHMOD boolean {
  prompt "chmod" if []
  default [y] if []
 <<<chmod is used to change the access permission of files.
>>>
 }
 config CHOWN boolean {
  prompt "chown" if []
  default [y] if []
 <<<chown is used to change the user and/or group ownership
of files.
>>>
  config FEATURE_CHOWN_LONG_OPTIONS boolean {
   prompt "Enable long options" if [CHOWN && LONG_OPTS]
   default [y] if [CHOWN && LONG_OPTS]
  <<<Enable use of long options
>>>
  }
 }
 config CHROOT boolean {
  prompt "chroot" if []
  default [y] if []
 <<<chroot is used to change the root directory and run a command.
The default command is `/bin/sh'.
>>>
 }
 config CKSUM boolean {
  prompt "cksum" if []
  default [y] if []
 <<<cksum is used to calculate the CRC32 checksum of a file.
>>>
 }
 config COMM boolean {
  prompt "comm" if []
  default [y] if []
 <<<comm is used to compare two files line by line and return
a three-column output.
>>>
 }
 config CP boolean {
  prompt "cp" if []
  default [y] if []
 <<<cp is used to copy files and directories.
>>>
  config FEATURE_CP_LONG_OPTIONS boolean {
   prompt "Enable long options for cp" if [CP && LONG_OPTS]
   default [y] if [CP && LONG_OPTS]
  <<<Enable long options for cp.
Also add support for --parents option.
>>>
  }
 }
 config CUT boolean {
  prompt "cut" if []
  default [y] if []
 <<<cut is used to print selected parts of lines from
each file to stdout.
>>>
 }
 config DD boolean {
  prompt "dd" if []
  default [y] if []
 <<<dd copies a file (from standard input to standard output,
by default) using specific input and output blocksizes,
while optionally performing conversions on it.
>>>
  config FEATURE_DD_SIGNAL_HANDLING boolean {
   prompt "Enable DD signal handling for status reporting" if [DD]
   default [y] if [DD]
  <<<Sending a SIGUSR1 signal to a running `dd' process makes it
print to standard error the number of records read and written
so far, then to resume copying.

$ dd if=/dev/zero of=/dev/null&
$ pid=$! kill -USR1 $pid; sleep 1; kill $pid
10899206+0 records in
10899206+0 records out
>>>
   config FEATURE_DD_THIRD_STATUS_LINE boolean {
    prompt "Enable the third status line upon signal" if [DD && FEATURE_DD_SIGNAL_HANDLING]
    default [y] if [DD && FEATURE_DD_SIGNAL_HANDLING]
   <<<Displays a coreutils-like third status line with transferred bytes,
elapsed time and speed.
>>>
   }
  }
  config FEATURE_DD_IBS_OBS boolean {
   prompt "Enable ibs, obs and conv options" if [DD]
   default [y] if [DD]
  <<<Enables support for writing a certain number of bytes in and out,
at a time, and performing conversions on the data stream.
>>>
  }
 }
 config DF boolean {
  prompt "df" if []
  default [y] if []
 <<<df reports the amount of disk space used and available
on filesystems.
>>>
  config FEATURE_DF_FANCY boolean {
   prompt "Enable -a, -i, -B" if [DF]
   default [y] if [DF]
  <<<This option enables -a, -i and -B.

  -a Show all filesystems
  -i Inodes
  -B <SIZE> Blocksize
>>>
  }
 }
 config DIRNAME boolean {
  prompt "dirname" if []
  default [y] if []
 <<<dirname is used to strip a non-directory suffix from
a file name.
>>>
 }
 config DOS2UNIX boolean {
  prompt "dos2unix/unix2dos" if []
  default [y] if []
 <<<dos2unix is used to convert a text file from DOS format to
UNIX format, and vice versa.
>>>
  config UNIX2DOS boolean {
   default [y] if [DOS2UNIX]
  <<<unix2dos is used to convert a text file from UNIX format to
DOS format, and vice versa.
>>>
  }
 }
 config DU boolean {
  prompt "du (default blocksize of 512 bytes)" if []
  default [y] if []
 <<<du is used to report the amount of disk space used
for specified files.
>>>
  config FEATURE_DU_DEFAULT_BLOCKSIZE_1K boolean {
   prompt "Use a default blocksize of 1024 bytes (1K)" if [DU]
   default [y] if [DU]
  <<<Use a blocksize of (1K) instead of the default 512b.
>>>
  }
 }
 config ECHO boolean {
  prompt "echo (basic SuSv3 version taking no options)" if []
  default [y] if []
 <<<echo is used to print a specified string to stdout.
>>>
  config FEATURE_FANCY_ECHO boolean {
   prompt "Enable echo options (-n and -e)" if [ECHO || ASH_BUILTIN_ECHO || HUSH]
   default [y] if [ECHO || ASH_BUILTIN_ECHO || HUSH]
  <<<This adds options (-n and -e) to echo.
>>>
  }
 }
 config ENV boolean {
  prompt "env" if []
  default [y] if []
 <<<env is used to set an environment variable and run
a command; without options it displays the current
environment.
>>>
  config FEATURE_ENV_LONG_OPTIONS boolean {
   prompt "Enable long options" if [ENV && LONG_OPTS]
   default [y] if [ENV && LONG_OPTS]
  <<<Support long options for the env applet.
>>>
  }
 }
 config EXPAND boolean {
  prompt "expand" if []
  default [y] if []
 <<<By default, convert all tabs to spaces.
>>>
  config FEATURE_EXPAND_LONG_OPTIONS boolean {
   prompt "Enable long options" if [EXPAND && LONG_OPTS]
   default [y] if [EXPAND && LONG_OPTS]
  <<<Support long options for the expand applet.
>>>
  }
 }
 config EXPR boolean {
  prompt "expr" if []
  default [y] if []
 <<<expr is used to calculate numbers and print the result
to standard output.
>>>
  config EXPR_MATH_SUPPORT_64 boolean {
   prompt "Extend Posix numbers support to 64 bit" if [EXPR]
   default [y] if [EXPR]
  <<<Enable 64-bit math support in the expr applet. This will make
the applet slightly larger, but will allow computation with very
large numbers.
>>>
  }
 }
 config FALSE boolean {
  prompt "false" if []
  default [y] if []
 <<<false returns an exit code of FALSE (1).
>>>
 }
 config FOLD boolean {
  prompt "fold" if []
  default [y] if []
 <<<Wrap text to fit a specific width.
>>>
 }
 config FSYNC boolean {
  prompt "fsync" if []
  default [y] if []
 <<<fsync is used to flush file-related cached blocks to disk.
>>>
 }
 config HEAD boolean {
  prompt "head" if []
  default [y] if []
 <<<head is used to print the first specified number of lines
from files.
>>>
  config FEATURE_FANCY_HEAD boolean {
   prompt "Enable head options (-c, -q, and -v)" if [HEAD]
   default [y] if [HEAD]
  <<<This enables the head options (-c, -q, and -v).
>>>
  }
 }
 config HOSTID boolean {
  prompt "hostid" if []
  default [y] if []
 <<<hostid prints the numeric identifier (in hexadecimal) for
the current host.
>>>
 }
 config ID boolean {
  prompt "id" if []
  default [y] if []
 <<<id displays the current user and group ID names.
>>>
 }
 config INSTALL boolean {
  prompt "install" if []
  default [y] if []
 <<<Copy files and set attributes.
>>>
  config FEATURE_INSTALL_LONG_OPTIONS boolean {
   prompt "Enable long options" if [INSTALL && LONG_OPTS]
   default [y] if [INSTALL && LONG_OPTS]
  <<<Support long options for the install applet.
>>>
  }
 }
 config LENGTH boolean {
  prompt "length" if []
  default [y] if []
 <<<length is used to print out the length of a specified string.
>>>
 }
 config LN boolean {
  prompt "ln" if []
  default [y] if []
 <<<ln is used to create hard or soft links between files.
>>>
 }
 config LOGNAME boolean {
  prompt "logname" if []
  default [y] if []
 <<<logname is used to print the current user's login name.
>>>
 }
 config LS boolean {
  prompt "ls" if []
  default [y] if []
 <<<ls is used to list the contents of directories.
>>>
  config FEATURE_LS_FILETYPES boolean {
   prompt "Enable filetyping options (-p and -F)" if [LS]
   default [y] if [LS]
  <<<Enable the ls options (-p and -F).
>>>
  }
  config FEATURE_LS_FOLLOWLINKS boolean {
   prompt "Enable symlinks dereferencing (-L)" if [LS]
   default [y] if [LS]
  <<<Enable the ls option (-L).
>>>
  }
  config FEATURE_LS_RECURSIVE boolean {
   prompt "Enable recursion (-R)" if [LS]
   default [y] if [LS]
  <<<Enable the ls option (-R).
>>>
  }
  config FEATURE_LS_SORTFILES boolean {
   prompt "Sort the file names" if [LS]
   default [y] if [LS]
  <<<Allow ls to sort file names alphabetically.
>>>
  }
  config FEATURE_LS_TIMESTAMPS boolean {
   prompt "Show file timestamps" if [LS]
   default [y] if [LS]
  <<<Allow ls to display timestamps for files.
>>>
  }
  config FEATURE_LS_USERNAME boolean {
   prompt "Show username/groupnames" if [LS]
   default [y] if [LS]
  <<<Allow ls to display username/groupname for files.
>>>
  }
  config FEATURE_LS_COLOR boolean {
   prompt "Allow use of color to identify file types" if [LS && LONG_OPTS]
   default [y] if [LS && LONG_OPTS]
  <<<This enables the --color option to ls.
>>>
   config FEATURE_LS_COLOR_IS_DEFAULT boolean {
    prompt "Produce colored ls output by default" if [FEATURE_LS_COLOR]
    default [y] if [FEATURE_LS_COLOR]
   <<<Saying yes here will turn coloring on by default,
even if no "--color" option is given to the ls command.
This is not recommended, since the colors are not
configurable, and the output may not be legible on
many output screens.
>>>
   }
  }
 }
 config MD5SUM boolean {
  prompt "md5sum" if []
  default [y] if []
 <<<md5sum is used to print or check MD5 checksums.
>>>
 }
 config MKDIR boolean {
  prompt "mkdir" if []
  default [y] if []
 <<<mkdir is used to create directories with the specified names.
>>>
  config FEATURE_MKDIR_LONG_OPTIONS boolean {
   prompt "Enable long options" if [MKDIR && LONG_OPTS]
   default [y] if [MKDIR && LONG_OPTS]
  <<<Support long options for the mkdir applet.
>>>
  }
 }
 config MKFIFO boolean {
  prompt "mkfifo" if []
  default [y] if []
 <<<mkfifo is used to create FIFOs (named pipes).
The `mknod' program can also create FIFOs.
>>>
 }
 config MKNOD boolean {
  prompt "mknod" if []
  default [y] if []
 <<<mknod is used to create FIFOs or block/character special
files with the specified names.
>>>
 }
 config MV boolean {
  prompt "mv" if []
  default [y] if []
 <<<mv is used to move or rename files or directories.
>>>
  config FEATURE_MV_LONG_OPTIONS boolean {
   prompt "Enable long options" if [MV && LONG_OPTS]
   default [y] if [MV && LONG_OPTS]
  <<<Support long options for the mv applet.
>>>
  }
 }
 config NICE boolean {
  prompt "nice" if []
  default [y] if []
 <<<nice runs a program with modified scheduling priority.
>>>
 }
 config NOHUP boolean {
  prompt "nohup" if []
  default [y] if []
 <<<run a command immune to hangups, with output to a non-tty.
>>>
 }
 config OD boolean {
  prompt "od" if []
  default [y] if []
 <<<od is used to dump binary files in octal and other formats.
>>>
 }
 config PRINTENV boolean {
  prompt "printenv" if []
  default [y] if []
 <<<printenv is used to print all or part of environment.
>>>
 }
 config PRINTF boolean {
  prompt "printf" if []
  default [y] if []
 <<<printf is used to format and print specified strings.
It's similar to `echo' except it has more options.
>>>
 }
 config PWD boolean {
  prompt "pwd" if []
  default [y] if []
 <<<pwd is used to print the current directory.
>>>
 }
 config READLINK boolean {
  prompt "readlink" if []
  default [y] if []
 <<<This program reads a symbolic link and returns the name
of the file it points to
>>>
  config FEATURE_READLINK_FOLLOW boolean {
   prompt "Enable canonicalization by following all symlinks (-f)" if [READLINK]
   default [y] if [READLINK]
  <<<Enable the readlink option (-f).
>>>
  }
 }
 config REALPATH boolean {
  prompt "realpath" if []
  default [y] if []
 <<<Return the canonicalized absolute pathname.
This isn't provided by GNU shellutils, but where else does it belong.
>>>
 }
 config RM boolean {
  prompt "rm" if []
  default [y] if []
 <<<rm is used to remove files or directories.
>>>
 }
 config RMDIR boolean {
  prompt "rmdir" if []
  default [y] if []
 <<<rmdir is used to remove empty directories.
>>>
  config FEATURE_RMDIR_LONG_OPTIONS boolean {
   prompt "Enable long options" if [RMDIR && LONG_OPTS]
   default [y] if [RMDIR && LONG_OPTS]
  <<<Support long options for the rmdir applet, including
--ignore-fail-on-non-empty for compatibility with GNU rmdir.
>>>
  }
 }
 config SEQ boolean {
  prompt "seq" if []
  default [y] if []
 <<<print a sequence of numbers
>>>
 }
 config SHA1SUM boolean {
  prompt "sha1sum" if []
  default [y] if []
 <<<Compute and check SHA1 message digest
>>>
 }
 config SHA256SUM boolean {
  prompt "sha256sum" if []
  default [y] if []
 <<<Compute and check SHA256 message digest
>>>
 }
 config SHA512SUM boolean {
  prompt "sha512sum" if []
  default [y] if []
 <<<Compute and check SHA512 message digest
>>>
 }
 config SLEEP boolean {
  prompt "sleep" if []
  default [y] if []
 <<<sleep is used to pause for a specified number of seconds.
It comes in 3 versions:
- small: takes one integer parameter
- fancy: takes multiple integer arguments with suffixes:
  sleep 1d 2h 3m 15s
- fancy with fractional numbers:
  sleep 2.3s 4.5h sleeps for 16202.3 seconds
Last one is "the most compatible" with coreutils sleep,
but it adds around 1k of code.
>>>
  config FEATURE_FANCY_SLEEP boolean {
   prompt "Enable multiple arguments and s/m/h/d suffixes" if [SLEEP]
   default [y] if [SLEEP]
  <<<Allow sleep to pause for specified minutes, hours, and days.
>>>
   config FEATURE_FLOAT_SLEEP boolean {
    prompt "Enable fractional arguments" if [FEATURE_FANCY_SLEEP]
    default [y] if [FEATURE_FANCY_SLEEP]
   <<<Allow for fractional numeric parameters.
>>>
   }
  }
 }
 config SORT boolean {
  prompt "sort" if []
  default [y] if []
 <<<sort is used to sort lines of text in specified files.
>>>
  config FEATURE_SORT_BIG boolean {
   prompt "Full SuSv3 compliant sort (support -ktcsbdfiozgM)" if [SORT]
   default [y] if [SORT]
  <<<Without this, sort only supports -r, -u, and an integer version
of -n. Selecting this adds sort keys, floating point support, and
more. This adds a little over 3k to a nonstatic build on x86.

The SuSv3 sort standard is available at:
http://www.opengroup.org/onlinepubs/007904975/utilities/sort.html
>>>
  }
 }
 config SPLIT boolean {
  prompt "split" if []
  default [y] if []
 <<<split a file into pieces.
>>>
  config FEATURE_SPLIT_FANCY boolean {
   prompt "Fancy extensions" if [SPLIT]
   default [y] if [SPLIT]
  <<<Add support for features not required by SUSv3.
Supports additional suffixes 'b' for 512 bytes,
'g' for 1GiB for the -b option.
>>>
  }
 }
 config STAT boolean {
  prompt "stat" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<display file or filesystem status.
>>>
  config FEATURE_STAT_FORMAT boolean {
   prompt "Enable custom formats (-c)" if [STAT]
   default [y] if [STAT]
  <<<Without this, stat will not support the '-c format' option where
users can pass a custom format string for output. This adds about
7k to a nonstatic build on amd64.
>>>
  }
 }
 config STTY boolean {
  prompt "stty" if []
  default [y] if []
 <<<stty is used to change and print terminal line settings.
>>>
 }
 config SUM boolean {
  prompt "sum" if []
  default [y] if []
 <<<checksum and count the blocks in a file
>>>
 }
 config SYNC boolean {
  prompt "sync" if []
  default [y] if []
 <<<sync is used to flush filesystem buffers.
>>>
 }
 config TAC boolean {
  prompt "tac" if []
  default [y] if []
 <<<tac is used to concatenate and print files in reverse.
>>>
 }
 config TAIL boolean {
  prompt "tail" if []
  default [y] if []
 <<<tail is used to print the last specified number of lines
from files.
>>>
  config FEATURE_FANCY_TAIL boolean {
   prompt "Enable extra tail options (-q, -s, -v, and -F)" if [TAIL]
   default [y] if [TAIL]
  <<<The options (-q, -s, and -v) are provided by GNU tail, but
are not specific in the SUSv3 standard.

  -q      Never output headers giving file names
  -s SEC  Wait SEC seconds between reads with -f
  -v      Always output headers giving file names
>>>
  }
 }
 config TEE boolean {
  prompt "tee" if []
  default [y] if []
 <<<tee is used to read from standard input and write
to standard output and files.
>>>
  config FEATURE_TEE_USE_BLOCK_IO boolean {
   prompt "Enable block I/O (larger/faster) instead of byte I/O" if [TEE]
   default [y] if [TEE]
  <<<Enable this option for a faster tee, at expense of size.
>>>
  }
 }
 config TOUCH boolean {
  prompt "touch" if []
  default [y] if []
 <<<touch is used to create or change the access and/or
modification timestamp of specified files.
>>>
 }
 config TRUE boolean {
  prompt "true" if []
  default [y] if []
 <<<true returns an exit code of TRUE (0).
>>>
 }
 config TTY boolean {
  prompt "tty" if []
  default [y] if []
 <<<tty is used to print the name of the current terminal to
standard output.
>>>
 }
 config UNAME boolean {
  prompt "uname" if []
  default [y] if []
 <<<uname is used to print system information.
>>>
 }
 config UNEXPAND boolean {
  prompt "unexpand" if []
  default [y] if []
 <<<By default, convert only leading sequences of blanks to tabs.
>>>
  config FEATURE_UNEXPAND_LONG_OPTIONS boolean {
   prompt "Enable long options" if [UNEXPAND && LONG_OPTS]
   default [y] if [UNEXPAND && LONG_OPTS]
  <<<Support long options for the unexpand applet.
>>>
  }
 }
 config UNIQ boolean {
  prompt "uniq" if []
  default [y] if []
 <<<uniq is used to remove duplicate lines from a sorted file.
>>>
 }
 config USLEEP boolean {
  prompt "usleep" if []
  default [y] if []
 <<<usleep is used to pause for a specified number of microseconds.
>>>
 }
 config UUDECODE boolean {
  prompt "uudecode" if []
  default [y] if []
 <<<uudecode is used to decode a uuencoded file.
>>>
 }
 config UUENCODE boolean {
  prompt "uuencode" if []
  default [y] if []
 <<<uuencode is used to uuencode a file.
>>>
 }
 config WC boolean {
  prompt "wc" if []
  default [y] if []
 <<<wc is used to print the number of bytes, words, and lines,
in specified files.
>>>
  config FEATURE_WC_LARGE boolean {
   prompt "Support very large files in wc" if [WC]
   default [y] if [WC]
  <<<Use "unsigned long long" in wc for counter variables.
>>>
  }
 }
 config WHO boolean {
  prompt "who" if [FEATURE_UTMP]
  default [y] if [FEATURE_UTMP]
 <<<who is used to show who is logged on.
>>>
 }
 config WHOAMI boolean {
  prompt "whoami" if []
  default [y] if []
 <<<whoami is used to print the username of the current
user id (same as id -un).
>>>
 }
 config YES boolean {
  prompt "yes" if []
  default [y] if []
 <<<yes is used to repeatedly output a specific string, or
the default string `y'.
>>>
 }
 config FEATURE_PRESERVE_HARDLINKS boolean {
  prompt "Preserve hard links" if [CP || MV]
  default [y] if [CP || MV]
 <<<Allow cp and mv to preserve hard links.
>>>
 }
 config FEATURE_AUTOWIDTH boolean {
  prompt "Calculate terminal & column widths" if [LS || MORE || TELNET]
  default [y] if [LS || MORE || TELNET]
 <<<This option allows utilities such as 'ls', 'more' and 'telnet'
to determine the width of the screen, which can allow them to
display additional text or avoid wrapping text onto the next line.
If you leave this disabled, your utilities will be especially
primitive and will be unable to determine the current screen width.
>>>
 }
 config FEATURE_HUMAN_READABLE boolean {
  prompt "Support for human readable output (example 13k, 23M, 235G)" if [DF || DU || LS]
  default [y] if [DF || DU || LS]
 <<<Allow df, du, and ls to have human readable output.
>>>
 }
 config FEATURE_MD5_SHA1_SUM_CHECK boolean {
  prompt "Enable -c, -s and -w options" if [MD5SUM || SHA1SUM || SHA256SUM || SHA512SUM]
  default [y] if [MD5SUM || SHA1SUM || SHA256SUM || SHA512SUM]
 <<<Enabling the -c options allows files to be checked
against pre-calculated hash values.

-s and -w are useful options when verifying checksums.
>>>
 }
}
menu "Console Utilities" {
<<<>>>
 config CHVT boolean {
  prompt "chvt" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<This program is used to change to another terminal.
Example: chvt 4 (change to terminal /dev/tty4)
>>>
 }
 config FGCONSOLE boolean {
  prompt "fgconsole" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<This program prints active (foreground) console number.
>>>
 }
 config CLEAR boolean {
  prompt "clear" if []
  default [y] if []
 <<<This program clears the terminal screen.
>>>
 }
 config DEALLOCVT boolean {
  prompt "deallocvt" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<This program deallocates unused virtual consoles.
>>>
 }
 config DUMPKMAP boolean {
  prompt "dumpkmap" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<This program dumps the kernel's keyboard translation table to
stdout, in binary format. You can then use loadkmap to load it.
>>>
 }
 config KBD_MODE boolean {
  prompt "kbd_mode" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<This program reports and sets keyboard mode.
>>>
 }
 config LOADFONT boolean {
  prompt "loadfont" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<This program loads a console font from standard input.
>>>
 }
 config LOADKMAP boolean {
  prompt "loadkmap" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<This program loads a keyboard translation table from
standard input.
>>>
 }
 config OPENVT boolean {
  prompt "openvt" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<This program is used to start a command on an unused
virtual terminal.
>>>
 }
 config RESET boolean {
  prompt "reset" if []
  default [y] if []
 <<<This program is used to reset the terminal screen, if it
gets messed up.
>>>
 }
 config RESIZE boolean {
  prompt "resize" if []
  default [y] if []
 <<<This program is used to (re)set the width and height of your current
terminal.
>>>
  config FEATURE_RESIZE_PRINT boolean {
   prompt "Print environment variables" if [RESIZE]
   default [y] if [RESIZE]
  <<<Prints the newly set size (number of columns and rows) of
the terminal.
E.g.:
COLUMNS=80;LINES=44;export COLUMNS LINES;
>>>
  }
 }
 config SETCONSOLE boolean {
  prompt "setconsole" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<This program redirects the system console to another device,
like the current tty while logged in via telnet.
>>>
  config FEATURE_SETCONSOLE_LONG_OPTIONS boolean {
   prompt "Enable long options" if [SETCONSOLE && LONG_OPTS]
   default [y] if [SETCONSOLE && LONG_OPTS]
  <<<Support long options for the setconsole applet.
>>>
  }
 }
 config SETFONT boolean {
  prompt "setfont" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Allows to load console screen map. Useful for i18n.
>>>
  config FEATURE_SETFONT_TEXTUAL_MAP boolean {
   prompt "Support reading textual screen maps" if [SETFONT]
   default [y] if [SETFONT]
  <<<Support reading textual screen maps.
>>>
  }
  config DEFAULT_SETFONT_DIR string {
   prompt "Default directory for console-tools files" if [SETFONT]
   default [""] if [SETFONT]
  <<<Directory to use if setfont's params are simple filenames
(not /path/to/file or ./file). Default is "" (no default directory).
>>>
  }
 }
 config SETKEYCODES boolean {
  prompt "setkeycodes" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<This program loads entries into the kernel's scancode-to-keycode
map, allowing unusual keyboards to generate usable keycodes.
>>>
 }
 config SETLOGCONS boolean {
  prompt "setlogcons" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<This program redirects the output console of kernel messages.
>>>
 }
 config SHOWKEY boolean {
  prompt "showkey" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Shows keys pressed.
>>>
 }
 config FEATURE_LOADFONT_PSF2 boolean {
  prompt "Support for PSF2 console fonts" if [LOADFONT || SETFONT]
  default [y] if [LOADFONT || SETFONT]
 <<<Support PSF2 console fonts.
>>>
 }
 config FEATURE_LOADFONT_RAW boolean {
  prompt "Support for old (raw) console fonts" if [LOADFONT || SETFONT]
  default [y] if [LOADFONT || SETFONT]
 <<<Support old (raw) console fonts.
>>>
 }
}
menu "Debian Utilities" {
<<<>>>
 config MKTEMP boolean {
  prompt "mktemp" if []
  default [y] if []
 <<<mktemp is used to create unique temporary files
>>>
 }
 config PIPE_PROGRESS boolean {
  prompt "pipe_progress" if []
  default [y] if []
 <<<Display a dot to indicate pipe activity.
>>>
 }
 config RUN_PARTS boolean {
  prompt "run-parts" if []
  default [y] if []
 <<<run-parts is a utility designed to run all the scripts in a directory.

It is useful to set up a directory like cron.daily, where you need to
execute all the scripts in that directory.

In this implementation of run-parts some features (such as report
mode) are not implemented.

Unless you know that run-parts is used in some of your scripts
you can safely say N here.
>>>
  config FEATURE_RUN_PARTS_LONG_OPTIONS boolean {
   prompt "Enable long options" if [RUN_PARTS && LONG_OPTS]
   default [y] if [RUN_PARTS && LONG_OPTS]
  <<<Support long options for the run-parts applet.
>>>
  }
  config FEATURE_RUN_PARTS_FANCY boolean {
   prompt "Support additional arguments" if [RUN_PARTS]
   default [y] if [RUN_PARTS]
  <<<Support additional options:
-l --list print the names of the all matching files (not
          limited to executables), but don't actually run them.
>>>
  }
 }
 config START_STOP_DAEMON boolean {
  prompt "start-stop-daemon" if []
  default [y] if []
 <<<start-stop-daemon is used to control the creation and
termination of system-level processes, usually the ones
started during the startup of the system.
>>>
  config FEATURE_START_STOP_DAEMON_FANCY boolean {
   prompt "Support additional arguments" if [START_STOP_DAEMON]
   default [y] if [START_STOP_DAEMON]
  <<<Support additional arguments.
-o|--oknodo ignored since we exit with 0 anyway
-v|--verbose
-N|--nicelevel N
>>>
  }
  config FEATURE_START_STOP_DAEMON_LONG_OPTIONS boolean {
   prompt "Enable long options" if [START_STOP_DAEMON && LONG_OPTS]
   default [y] if [START_STOP_DAEMON && LONG_OPTS]
  <<<Support long options for the start-stop-daemon applet.
>>>
  }
 }
 config WHICH boolean {
  prompt "which" if []
  default [y] if []
 <<<which is used to find programs in your PATH and
print out their pathnames.
>>>
 }
}
menu "Editors" {
<<<>>>
 config PATCH boolean {
  prompt "patch" if []
  default [y] if []
 <<<Apply a unified diff formatted patch.
>>>
 }
 config AWK boolean {
  prompt "awk" if []
  default [y] if []
 <<<Awk is used as a pattern scanning and processing language. This is
the BusyBox implementation of that programming language.
>>>
  config FEATURE_AWK_LIBM boolean {
   prompt "Enable math functions (requires libm)" if [AWK]
   default [y] if [AWK]
  <<<Enable math functions of the Awk programming language.
NOTE: This will require libm to be present for linking.
>>>
  }
 }
 config CMP boolean {
  prompt "cmp" if []
  default [y] if []
 <<<cmp is used to compare two files and returns the result
to standard output.
>>>
 }
 config DIFF boolean {
  prompt "diff" if []
  default [y] if []
 <<<diff compares two files or directories and outputs the
differences between them in a form that can be given to
the patch command.
>>>
  config FEATURE_DIFF_LONG_OPTIONS boolean {
   prompt "Enable long options" if [DIFF && LONG_OPTS]
   default [y] if [DIFF && LONG_OPTS]
  <<<Enable use of long options.
>>>
  }
  config FEATURE_DIFF_DIR boolean {
   prompt "Enable directory support" if [DIFF]
   default [y] if [DIFF]
  <<<This option enables support for directory and subdirectory
comparison.
>>>
  }
 }
 config ED boolean {
  prompt "ed" if []
  default [y] if []
 <<<The original 1970's Unix text editor, from the days of teletypes.
Small, simple, evil. Part of SUSv3. If you're not already using
this, you don't need it.
>>>
 }
 config SED boolean {
  prompt "sed" if []
  default [y] if []
 <<<sed is used to perform text transformations on a file
or input from a pipeline.
>>>
 }
 config VI boolean {
  prompt "vi" if []
  default [y] if []
 <<<'vi' is a text editor. More specifically, it is the One True
text editor <grin>. It does, however, have a rather steep
learning curve. If you are not already comfortable with 'vi'
you may wish to use something else.
>>>
  config FEATURE_VI_MAX_LEN integer {
   prompt "Maximum screen width in vi" if [VI]
   range [256 16384] if [VI]
   default [4096] if [VI]
  <<<Contrary to what you may think, this is not eating much.
Make it smaller than 4k only if you are very limited on memory.
>>>
  }
  config FEATURE_VI_8BIT boolean {
   prompt "Allow vi to display 8-bit chars (otherwise shows dots)" if [VI]
   default [n] if [VI]
  <<<If your terminal can display characters with high bit set,
you may want to enable this. Note: vi is not Unicode-capable.
If your terminal combines several 8-bit bytes into one character
(as in Unicode mode), this will not work properly.
>>>
  }
  config FEATURE_VI_COLON boolean {
   prompt "Enable \":\" colon commands (no \"ex\" mode)" if [VI]
   default [y] if [VI]
  <<<Enable a limited set of colon commands for vi. This does not
provide an "ex" mode.
>>>
  }
  config FEATURE_VI_YANKMARK boolean {
   prompt "Enable yank/put commands and mark cmds" if [VI]
   default [y] if [VI]
  <<<This will enable you to use yank and put, as well as mark in
busybox vi.
>>>
  }
  config FEATURE_VI_SEARCH boolean {
   prompt "Enable search and replace cmds" if [VI]
   default [y] if [VI]
  <<<Select this if you wish to be able to do search and replace in
busybox vi.
>>>
  }
  config FEATURE_VI_USE_SIGNALS boolean {
   prompt "Catch signals" if [VI]
   default [y] if [VI]
  <<<Selecting this option will make busybox vi signal aware. This will
make busybox vi support SIGWINCH to deal with Window Changes, catch
Ctrl-Z and Ctrl-C and alarms.
>>>
  }
  config FEATURE_VI_DOT_CMD boolean {
   prompt "Remember previous cmd and \".\" cmd" if [VI]
   default [y] if [VI]
  <<<Make busybox vi remember the last command and be able to repeat it.
>>>
  }
  config FEATURE_VI_READONLY boolean {
   prompt "Enable -R option and \"view\" mode" if [VI]
   default [y] if [VI]
  <<<Enable the read-only command line option, which allows the user to
open a file in read-only mode.
>>>
  }
  config FEATURE_VI_SETOPTS boolean {
   prompt "Enable set-able options, ai ic showmatch" if [VI]
   default [y] if [VI]
  <<<Enable the editor to set some (ai, ic, showmatch) options.
>>>
  }
  config FEATURE_VI_SET boolean {
   prompt "Support for :set" if [VI]
   default [y] if [VI]
  <<<Support for ":set".
>>>
  }
  config FEATURE_VI_WIN_RESIZE boolean {
   prompt "Handle window resize" if [VI]
   default [y] if [VI]
  <<<Make busybox vi behave nicely with terminals that get resized.
>>>
  }
  config FEATURE_VI_ASK_TERMINAL boolean {
   prompt "Use 'tell me cursor position' ESC sequence to measure window" if [VI]
   default [y] if [VI]
  <<<If terminal size can't be retrieved and $LINES/$COLUMNS are not set,
this option makes vi perform a last-ditch effort to find it:
vi positions cursor to 999,999 and asks terminal to report real
cursor position using "ESC [ 6 n" escape sequence, then reads stdin.

This is not clean but helps a lot on serial lines and such.
>>>
  }
  config FEATURE_VI_OPTIMIZE_CURSOR boolean {
   prompt "Optimize cursor movement" if [VI]
   default [y] if [VI]
  <<<This will make the cursor movement faster, but requires more memory
and it makes the applet a tiny bit larger.
>>>
  }
  config FEATURE_ALLOW_EXEC boolean {
   prompt "Allow vi and awk to execute shell commands" if [VI || AWK]
   default [y] if [VI || AWK]
  <<<Enables vi and awk features which allows user to execute
shell commands (using system() C call).
>>>
  }
 }
}
menu "Finding Utilities" {
<<<>>>
 config FIND boolean {
  prompt "find" if []
  default [y] if []
 <<<find is used to search your system to find specified files.
>>>
  config FEATURE_FIND_PRINT0 boolean {
   prompt "Enable -print0: NUL-terminated output" if [FIND]
   default [y] if [FIND]
  <<<Causes output names to be separated by a NUL character
rather than a newline. This allows names that contain
newlines and other whitespace to be more easily
interpreted by other programs.
>>>
  }
  config FEATURE_FIND_MTIME boolean {
   prompt "Enable -mtime: modified time matching" if [FIND]
   default [y] if [FIND]
  <<<Allow searching based on the modification time of
files, in days.
>>>
  }
  config FEATURE_FIND_MMIN boolean {
   prompt "Enable -mmin: modified time matching by minutes" if [FIND]
   default [y] if [FIND]
  <<<Allow searching based on the modification time of
files, in minutes.
>>>
  }
  config FEATURE_FIND_PERM boolean {
   prompt "Enable -perm: permissions matching" if [FIND]
   default [y] if [FIND]
  <<<Enable searching based on file permissions.
>>>
  }
  config FEATURE_FIND_TYPE boolean {
   prompt "Enable -type: file type matching (file/dir/link/...)" if [FIND]
   default [y] if [FIND]
  <<<Enable searching based on file type (file,
directory, socket, device, etc.).
>>>
  }
  config FEATURE_FIND_XDEV boolean {
   prompt "Enable -xdev: 'stay in filesystem'" if [FIND]
   default [y] if [FIND]
  <<<This option allows find to restrict searches to a single filesystem.
>>>
  }
  config FEATURE_FIND_MAXDEPTH boolean {
   prompt "Enable -maxdepth N" if [FIND]
   default [y] if [FIND]
  <<<This option enables -maxdepth N option.
>>>
  }
  config FEATURE_FIND_NEWER boolean {
   prompt "Enable -newer: compare file modification times" if [FIND]
   default [y] if [FIND]
  <<<Support the 'find -newer' option for finding any files which have
a modified time that is more recent than the specified FILE.
>>>
  }
  config FEATURE_FIND_INUM boolean {
   prompt "Enable -inum: inode number matching" if [FIND]
   default [y] if [FIND]
  <<<Support the 'find -inum' option for searching by inode number.
>>>
  }
  config FEATURE_FIND_EXEC boolean {
   prompt "Enable -exec: execute commands" if [FIND]
   default [y] if [FIND]
  <<<Support the 'find -exec' option for executing commands based upon
the files matched.
>>>
  }
  config FEATURE_FIND_USER boolean {
   prompt "Enable -user: username/uid matching" if [FIND]
   default [y] if [FIND]
  <<<Support the 'find -user' option for searching by username or uid.
>>>
  }
  config FEATURE_FIND_GROUP boolean {
   prompt "Enable -group: group/gid matching" if [FIND]
   default [y] if [FIND]
  <<<Support the 'find -group' option for searching by group name or gid.
>>>
  }
  config FEATURE_FIND_NOT boolean {
   prompt "Enable the 'not' (!) operator" if [FIND]
   default [y] if [FIND]
  <<<Support the '!' operator to invert the test results.
If 'Enable full-blown desktop' is enabled, then will also support
the non-POSIX notation '-not'.
>>>
  }
  config FEATURE_FIND_DEPTH boolean {
   prompt "Enable -depth" if [FIND]
   default [y] if [FIND]
  <<<Process each directory's contents before the directory itself.
>>>
  }
  config FEATURE_FIND_PAREN boolean {
   prompt "Enable parens in options" if [FIND]
   default [y] if [FIND]
  <<<Enable usage of parens '(' to specify logical order of arguments.
>>>
  }
  config FEATURE_FIND_SIZE boolean {
   prompt "Enable -size: file size matching" if [FIND]
   default [y] if [FIND]
  <<<Support the 'find -size' option for searching by file size.
>>>
  }
  config FEATURE_FIND_PRUNE boolean {
   prompt "Enable -prune: exclude subdirectories" if [FIND]
   default [y] if [FIND]
  <<<If the file is a directory, dont descend into it. Useful for
exclusion .svn and CVS directories.
>>>
  }
  config FEATURE_FIND_DELETE boolean {
   prompt "Enable -delete: delete files/dirs" if [FIND && FEATURE_FIND_DEPTH]
   default [y] if [FIND && FEATURE_FIND_DEPTH]
  <<<Support the 'find -delete' option for deleting files and directories.
WARNING: This option can do much harm if used wrong. Busybox will not
try to protect the user from doing stupid things. Use with care.
>>>
  }
  config FEATURE_FIND_PATH boolean {
   prompt "Enable -path: match pathname with shell pattern" if [FIND]
   default [y] if [FIND]
  <<<The -path option matches whole pathname instead of just filename.
>>>
  }
  config FEATURE_FIND_REGEX boolean {
   prompt "Enable -regex: match pathname with regex" if [FIND]
   default [y] if [FIND]
  <<<The -regex option matches whole pathname against regular expression.
>>>
  }
  config FEATURE_FIND_CONTEXT boolean {
   prompt "Enable -context: security context matching" if [FIND && SELINUX]
   default [n] if [FIND && SELINUX]
  <<<Support the 'find -context' option for matching security context.
>>>
  }
  config FEATURE_FIND_LINKS boolean {
   prompt "Enable -links: link count matching" if [FIND]
   default [y] if [FIND]
  <<<Support the 'find -links' option for matching number of links.>>>
  }
 }
 config GREP boolean {
  prompt "grep" if []
  default [y] if []
 <<<grep is used to search files for a specified pattern.
>>>
  config FEATURE_GREP_EGREP_ALIAS boolean {
   prompt "Enable extended regular expressions (egrep & grep -E)" if [GREP]
   default [y] if [GREP]
  <<<Enabled support for extended regular expressions. Extended
regular expressions allow for alternation (foo|bar), grouping,
and various repetition operators.
>>>
  }
  config FEATURE_GREP_FGREP_ALIAS boolean {
   prompt "Alias fgrep to grep -F" if [GREP]
   default [y] if [GREP]
  <<<fgrep sees the search pattern as a normal string rather than
regular expressions.
grep -F always works, this just creates the fgrep alias.
>>>
  }
  config FEATURE_GREP_CONTEXT boolean {
   prompt "Enable before and after context flags (-A, -B and -C)" if [GREP]
   default [y] if [GREP]
  <<<Print the specified number of leading (-B) and/or trailing (-A)
context surrounding our matching lines.
Print the specified number of context lines (-C).>>>
  }
 }
 config XARGS boolean {
  prompt "xargs" if []
  default [y] if []
 <<<xargs is used to execute a specified command for
every item from standard input.
>>>
  config FEATURE_XARGS_SUPPORT_CONFIRMATION boolean {
   prompt "Enable -p: prompt and confirmation" if [XARGS]
   default [y] if [XARGS]
  <<<Support -p: prompt the user whether to run each command
line and read a line from the terminal.
>>>
  }
  config FEATURE_XARGS_SUPPORT_QUOTES boolean {
   prompt "Enable single and double quotes and backslash" if [XARGS]
   default [y] if [XARGS]
  <<<Support quoting in the input.
>>>
  }
  config FEATURE_XARGS_SUPPORT_TERMOPT boolean {
   prompt "Enable -x: exit if -s or -n is exceeded" if [XARGS]
   default [y] if [XARGS]
  <<<Support -x: exit if the command size (see the -s or -n option)
is exceeded.
>>>
  }
  config FEATURE_XARGS_SUPPORT_ZERO_TERM boolean {
   prompt "Enable -0: NUL-terminated input" if [XARGS]
   default [y] if [XARGS]
  <<<Support -0: input items are terminated by a NUL character
instead of whitespace, and the quotes and backslash
are not special.
>>>
  }
 }
}
menu "Init Utilities" {
<<<>>>
 config BOOTCHARTD boolean {
  prompt "bootchartd" if []
  default [y] if []
 <<<bootchartd is commonly used to profile the boot process
for the purpose of speeding it up. In this case, it is started
by the kernel as the init process. This is configured by adding
the init=/sbin/bootchartd option to the kernel command line.

It can also be used to monitor the resource usage of a specific
application or the running system in general. In this case,
bootchartd is started interactively by running bootchartd start
and stopped using bootchartd stop.
>>>
  config FEATURE_BOOTCHARTD_BLOATED_HEADER boolean {
   prompt "Compatible, bloated header" if [BOOTCHARTD]
   default [y] if [BOOTCHARTD]
  <<<Create extended header file compatible with "big" bootchartd.
"Big" bootchartd is a shell script and it dumps some
"convenient" info int the header, such as:
  title = Boot chart for `hostname` (`date`)
  system.uname = `uname -srvm`
  system.release = `cat /etc/DISTRO-release`
  system.cpu = `grep '^model name' /proc/cpuinfo | head -1` ($cpucount)
  system.kernel.options = `cat /proc/cmdline`
This data is not mandatory for bootchart graph generation,
and is considered bloat. Nevertheless, this option
makes bootchartd applet to dump a subset of it.
>>>
  }
  config FEATURE_BOOTCHARTD_CONFIG_FILE boolean {
   prompt "Support bootchartd.conf" if [BOOTCHARTD]
   default [y] if [BOOTCHARTD]
  <<<Enable reading and parsing of $PWD/bootchartd.conf
and /etc/bootchartd.conf files.>>>
  }
 }
 config HALT boolean {
  prompt "poweroff, halt, and reboot" if []
  default [y] if []
 <<<Stop all processes and either halt, reboot, or power off the system.
>>>
  config FEATURE_CALL_TELINIT boolean {
   prompt "Call telinit on shutdown and reboot" if [HALT && !INIT]
   default [y] if [HALT && !INIT]
  <<<Call an external program (normally telinit) to facilitate
a switch to a proper runlevel.

This option is only available if you selected halt and friends,
but did not select init.
>>>
   config TELINIT_PATH string {
    prompt "Path to telinit executable" if [FEATURE_CALL_TELINIT]
    default ["/sbin/telinit"] if [FEATURE_CALL_TELINIT]
   <<<When busybox halt and friends have to call external telinit
to facilitate proper shutdown, this path is to be used when
locating telinit executable.>>>
   }
  }
 }
 config INIT boolean {
  prompt "init" if []
  default [y] if []
  select FEATURE_SYSLOG if []
 <<<init is the first program run when the system boots.
>>>
  config FEATURE_USE_INITTAB boolean {
   prompt "Support reading an inittab file" if [INIT]
   default [y] if [INIT]
  <<<Allow init to read an inittab file when the system boot.
>>>
   config FEATURE_KILL_REMOVED boolean {
    prompt "Support killing processes that have been removed from inittab" if [FEATURE_USE_INITTAB]
    default [n] if [FEATURE_USE_INITTAB]
   <<<When respawn entries are removed from inittab and a SIGHUP is
sent to init, this option will make init kill the processes
that have been removed.
>>>
    config FEATURE_KILL_DELAY integer {
     prompt "How long to wait between TERM and KILL (0 - send TERM only)" if [FEATURE_KILL_REMOVED]
     range [0 1024] if [FEATURE_KILL_REMOVED]
     default [0] if [FEATURE_KILL_REMOVED]
    <<<With nonzero setting, init sends TERM, forks, child waits N
seconds, sends KILL and exits. Setting it too high is unwise
(child will hang around for too long and could actually kill
the wrong process!)
>>>
    }
   }
  }
  config FEATURE_INIT_SCTTY boolean {
   prompt "Run commands with leading dash with controlling tty" if [INIT]
   default [y] if [INIT]
  <<<If this option is enabled, init will try to give a controlling
tty to any command which has leading hyphen (often it's "-/bin/sh").
More precisely, init will do "ioctl(STDIN_FILENO, TIOCSCTTY, 0)".
If device attached to STDIN_FILENO can be a ctty but is not yet
a ctty for other session, it will become this process' ctty.
This is not the traditional init behavour, but is often what you want
in an embedded system where the console is only accessed during
development or for maintenance.
NB: using cttyhack applet may work better.
>>>
  }
  config FEATURE_INIT_SYSLOG boolean {
   prompt "Enable init to write to syslog" if [INIT]
   default [y] if [INIT]
  <<<>>>
  }
  config FEATURE_EXTRA_QUIET boolean {
   prompt "Be _extra_ quiet on boot" if [INIT]
   default [y] if [INIT]
  <<<Prevent init from logging some messages to the console during boot.
>>>
  }
  config FEATURE_INIT_COREDUMPS boolean {
   prompt "Support dumping core for child processes (debugging only)" if [INIT]
   default [y] if [INIT]
  <<<If this option is enabled and the file /.init_enable_core
exists, then init will call setrlimit() to allow unlimited
core file sizes. If this option is disabled, processes
will not generate any core files.
>>>
  }
  config FEATURE_INITRD boolean {
   prompt "Support running init from within an initrd (not initramfs)" if [INIT]
   default [y] if [INIT]
  <<<Legacy support for running init under the old-style initrd. Allows
the name linuxrc to act as init, and it doesn't assume init is PID 1.

This does not apply to initramfs, which runs /init as PID 1 and
requires no special support.
>>>
  }
  config INIT_TERMINAL_TYPE string {
   prompt "Initial terminal type" if [INIT]
   default ["linux"] if [INIT]
  <<<This is the initial value set by init for the TERM environment
variable. This variable is used by programs which make use of
extended terminal capabilities.

Note that on Linux, init attempts to detect serial terminal and
sets TERM to "vt102" if one is found.>>>
  }
 }
 config MESG boolean {
  prompt "mesg" if []
  default [y] if []
 <<<Mesg controls access to your terminal by others. It is typically
used to allow or disallow other users to write to your terminal
>>>
 }
}
menu "Login/Password Management Utilities" {
<<<>>>
 config ADD_SHELL boolean {
  prompt "add-shell" if []
  default [y] if [DESKTOP]
 <<<Add shells to /etc/shells.
>>>
 }
 config REMOVE_SHELL boolean {
  prompt "remove-shell" if []
  default [y] if [DESKTOP]
 <<<Remove shells from /etc/shells.
>>>
 }
 config FEATURE_SHADOWPASSWDS boolean {
  prompt "Support for shadow passwords" if []
  default [y] if []
 <<<Build support for shadow password in /etc/shadow. This file is only
readable by root and thus the encrypted passwords are no longer
publicly readable.
>>>
 }
 config USE_BB_PWD_GRP boolean {
  prompt "Use internal password and group functions rather than system functions" if []
  default [y] if []
 <<<If you leave this disabled, busybox will use the system's password
and group functions. And if you are using the GNU C library
(glibc), you will then need to install the /etc/nsswitch.conf
configuration file and the required /lib/libnss_* libraries in
order for the password and group functions to work. This generally
makes your embedded system quite a bit larger.

Enabling this option will cause busybox to directly access the
system's /etc/password, /etc/group files (and your system will be
smaller, and I will get fewer emails asking about how glibc NSS
works). When this option is enabled, you will not be able to use
PAM to access remote LDAP password servers and whatnot. And if you
want hostname resolution to work with glibc, you still need the
/lib/libnss_* libraries.

If you need to use glibc's nsswitch.conf mechanism
(e.g. if user/group database is NOT stored in /etc/passwd etc),
you must NOT use this option.

If you enable this option, it will add about 1.5k.
>>>
  config USE_BB_SHADOW boolean {
   prompt "Use internal shadow password functions" if [USE_BB_PWD_GRP && FEATURE_SHADOWPASSWDS]
   default [y] if [USE_BB_PWD_GRP && FEATURE_SHADOWPASSWDS]
  <<<If you leave this disabled, busybox will use the system's shadow
password handling functions. And if you are using the GNU C library
(glibc), you will then need to install the /etc/nsswitch.conf
configuration file and the required /lib/libnss_* libraries in
order for the shadow password functions to work. This generally
makes your embedded system quite a bit larger.

Enabling this option will cause busybox to directly access the
system's /etc/shadow file when handling shadow passwords. This
makes your system smaller (and I will get fewer emails asking about
how glibc NSS works). When this option is enabled, you will not be
able to use PAM to access shadow passwords from remote LDAP
password servers and whatnot.
>>>
  }
 }
 config USE_BB_CRYPT boolean {
  prompt "Use internal crypt functions" if []
  default [y] if []
 <<<Busybox has internal DES and MD5 crypt functions.
They produce results which are identical to corresponding
standard C library functions.

If you leave this disabled, busybox will use the system's
crypt functions. Most C libraries use large (~70k)
static buffers there, and also combine them with more general
DES encryption/decryption.

For busybox, having large static buffers is undesirable,
especially on NOMMU machines. Busybox also doesn't need
DES encryption/decryption and can do with smaller code.

If you enable this option, it will add about 4.8k of code
if you are building dynamically linked executable.
In static build, it makes code _smaller_ by about 1.2k,
and likely many kilobytes less of bss.
>>>
  config USE_BB_CRYPT_SHA boolean {
   prompt "Enable SHA256/512 crypt functions" if [USE_BB_CRYPT]
   default [y] if [USE_BB_CRYPT]
  <<<Enable this if you have passwords starting with "$5$" or "$6$"
in your /etc/passwd or /etc/shadow files. These passwords
are hashed using SHA256 and SHA512 algorithms. Support for them
was added to glibc in 2008.
With this option off, login will fail password check for any
user which has password encrypted with these algorithms.
>>>
  }
 }
 config ADDUSER boolean {
  prompt "adduser" if []
  default [y] if []
 <<<Utility for creating a new user account.
>>>
  config FEATURE_ADDUSER_LONG_OPTIONS boolean {
   prompt "Enable long options" if [ADDUSER && LONG_OPTS]
   default [y] if [ADDUSER && LONG_OPTS]
  <<<Support long options for the adduser applet.
>>>
  }
  config FEATURE_CHECK_NAMES boolean {
   prompt "Enable sanity check on user/group names in adduser and addgroup" if [ADDUSER || ADDGROUP]
   default [n] if [ADDUSER || ADDGROUP]
  <<<Enable sanity check on user and group names in adduser and addgroup.
To avoid problems, the user or group name should consist only of
letters, digits, underscores, periods, at signs and dashes,
and not start with a dash (as defined by IEEE Std 1003.1-2001).
For compatibility with Samba machine accounts "$" is also supported
at the end of the user or group name.
>>>
  }
  config FIRST_SYSTEM_ID integer {
   prompt "First valid system uid or gid for adduser and addgroup" if [ADDUSER || ADDGROUP]
   range [0 64900] if [ADDUSER || ADDGROUP]
   default [100] if [ADDUSER || ADDGROUP]
  <<<First valid system uid or gid for adduser and addgroup
>>>
  }
  config LAST_SYSTEM_ID integer {
   prompt "Last valid system uid or gid for adduser and addgroup" if [ADDUSER || ADDGROUP]
   range [0 64900] if [ADDUSER || ADDGROUP]
   default [999] if [ADDUSER || ADDGROUP]
  <<<Last valid system uid or gid for adduser and addgroup
>>>
  }
 }
 config ADDGROUP boolean {
  prompt "addgroup" if []
  default [y] if []
 <<<Utility for creating a new group account.
>>>
  config FEATURE_ADDGROUP_LONG_OPTIONS boolean {
   prompt "Enable long options" if [ADDGROUP && LONG_OPTS]
   default [y] if [ADDGROUP && LONG_OPTS]
  <<<Support long options for the addgroup applet.
>>>
  }
  config FEATURE_ADDUSER_TO_GROUP boolean {
   prompt "Support for adding users to groups" if [ADDGROUP]
   default [y] if [ADDGROUP]
  <<<If  called  with two non-option arguments,
addgroup will add an existing user to an
existing group.
>>>
  }
 }
 config DELUSER boolean {
  prompt "deluser" if []
  default [y] if []
 <<<Utility for deleting a user account.
>>>
 }
 config DELGROUP boolean {
  prompt "delgroup" if []
  default [y] if []
 <<<Utility for deleting a group account.
>>>
  config FEATURE_DEL_USER_FROM_GROUP boolean {
   prompt "Support for removing users from groups" if [DELGROUP]
   default [y] if [DELGROUP]
  <<<If called with two non-option arguments, deluser
or delgroup will remove an user from a specified group.
>>>
  }
 }
 config GETTY boolean {
  prompt "getty" if []
  default [y] if []
  select FEATURE_SYSLOG if []
 <<<getty lets you log in on a tty, it is normally invoked by init.
>>>
 }
 config LOGIN boolean {
  prompt "login" if []
  default [y] if []
  select FEATURE_SUID if []
  select FEATURE_SYSLOG if []
 <<<login is used when signing onto a system.

Note that Busybox binary must be setuid root for this applet to
work properly.
>>>
  config PAM boolean {
   prompt "Support for PAM (Pluggable Authentication Modules)" if [LOGIN]
   default [n] if [LOGIN]
  <<<Use PAM in login(1) instead of direct access to password database.
>>>
  }
  config LOGIN_SCRIPTS boolean {
   prompt "Support for login scripts" if [LOGIN]
   default [y] if [LOGIN]
  <<<Enable this if you want login to execute $LOGIN_PRE_SUID_SCRIPT
just prior to switching from root to logged-in user.
>>>
  }
  config FEATURE_NOLOGIN boolean {
   prompt "Support for /etc/nologin" if [LOGIN]
   default [y] if [LOGIN]
  <<<The file /etc/nologin is used by (some versions of) login(1).
If it exists, non-root logins are prohibited.
>>>
  }
  config FEATURE_SECURETTY boolean {
   prompt "Support for /etc/securetty" if [LOGIN]
   default [y] if [LOGIN]
  <<<The file /etc/securetty is used by (some versions of) login(1).
The file contains the device names of tty lines (one per line,
without leading /dev/) on which root is allowed to login.
>>>
  }
 }
 config PASSWD boolean {
  prompt "passwd" if []
  default [y] if []
  select FEATURE_SUID if []
  select FEATURE_SYSLOG if []
 <<<passwd changes passwords for user and group accounts. A normal user
may only change the password for his/her own account, the super user
may change the password for any account. The administrator of a group
may change the password for the group.

Note that Busybox binary must be setuid root for this applet to
work properly.
>>>
  config FEATURE_PASSWD_WEAK_CHECK boolean {
   prompt "Check new passwords for weakness" if [PASSWD]
   default [y] if [PASSWD]
  <<<With this option passwd will refuse new passwords which are "weak".
>>>
  }
 }
 config CRYPTPW boolean {
  prompt "cryptpw" if []
  default [y] if []
 <<<Encrypts the given password with the crypt(3) libc function
using the given salt. Debian has this utility under mkpasswd
name. Busybox provides mkpasswd as an alias for cryptpw.
>>>
 }
 config CHPASSWD boolean {
  prompt "chpasswd" if []
  default [y] if []
 <<<Reads a file of user name and password pairs from standard input
and uses this information to update a group of existing users.
>>>
 }
 config SU boolean {
  prompt "su" if []
  default [y] if []
  select FEATURE_SUID if []
  select FEATURE_SYSLOG if []
 <<<su is used to become another user during a login session.
Invoked without a username, su defaults to becoming the super user.

Note that Busybox binary must be setuid root for this applet to
work properly.
>>>
  config FEATURE_SU_SYSLOG boolean {
   prompt "Enable su to write to syslog" if [SU]
   default [y] if [SU]
  <<<>>>
  }
  config FEATURE_SU_CHECKS_SHELLS boolean {
   prompt "Enable su to check user's shell to be listed in /etc/shells" if [SU]
   default [y] if [SU]
  <<<>>>
  }
 }
 config SULOGIN boolean {
  prompt "sulogin" if []
  default [y] if []
  select FEATURE_SYSLOG if []
 <<<sulogin is invoked when the system goes into single user
mode (this is done through an entry in inittab).
>>>
 }
 config VLOCK boolean {
  prompt "vlock" if []
  default [y] if []
  select FEATURE_SUID if []
 <<<Build the "vlock" applet which allows you to lock (virtual) terminals.

Note that Busybox binary must be setuid root for this applet to
work properly.
>>>
 }
}
menu "Linux Ext2 FS Progs" {
<<<>>>
 config CHATTR boolean {
  prompt "chattr" if []
  default [y] if []
 <<<chattr changes the file attributes on a second extended file system.
>>>
 }
 config FSCK boolean {
  prompt "fsck" if []
  default [y] if []
 <<<fsck is used to check and optionally repair one or more filesystems.
In actuality, fsck is simply a front-end for the various file system
checkers (fsck.fstype) available under Linux.
>>>
 }
 config LSATTR boolean {
  prompt "lsattr" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<lsattr lists the file attributes on a second extended file system.
>>>
 }
 config TUNE2FS boolean {
  prompt "tune2fs" if []
  default [n] if []
 <<<tune2fs allows the system administrator to adjust various tunable
filesystem parameters on Linux ext2/ext3 filesystems.
>>>
 }
}
menu "Linux Module Utilities" {
 depends on [PLATFORM_LINUX]
<<<>>>
 config MODINFO boolean {
  prompt "modinfo" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Show information about a Linux Kernel module
>>>
 }
 config MODPROBE_SMALL boolean {
  prompt "Simplified modutils" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Simplified modutils.

With this option modprobe does not require modules.dep file
and does not use /etc/modules.conf file.
It scans module files in /lib/modules/`uname -r` and
determines dependencies and module alias names on the fly.
This may make module loading slower, most notably
when one needs to load module by alias (this requires
scanning through module _bodies_).

At the first attempt to load a module by alias modprobe
will try to generate modules.dep.bb file in order to speed up
future loads by alias. Failure to do so (read-only /lib/modules,
etc) is not reported, and future modprobes will be slow too.

NB: modules.dep.bb file format is not compatible
with modules.dep file as created/used by standard module tools.

Additional module parameters can be stored in
/etc/modules/$module_name files.

Apart from modprobe, other utilities are also provided:
- insmod is an alias to modprobe
- rmmod is an alias to modprobe -r
- depmod generates modules.dep.bb

As of 2008-07, this code is experimental. It is 14kb smaller
than "non-small" modutils.
>>>
  config FEATURE_MODPROBE_SMALL_OPTIONS_ON_CMDLINE boolean {
   prompt "Accept module options on modprobe command line" if [PLATFORM_LINUX && MODPROBE_SMALL]
   default [y] if [PLATFORM_LINUX && MODPROBE_SMALL]
  <<<Allow insmod and modprobe take module options from command line.
>>>
  }
  config FEATURE_MODPROBE_SMALL_CHECK_ALREADY_LOADED boolean {
   prompt "Skip loading of already loaded modules" if [PLATFORM_LINUX && MODPROBE_SMALL]
   default [y] if [PLATFORM_LINUX && MODPROBE_SMALL]
  <<<Check if the module is already loaded.
>>>
  }
  config INSMOD boolean {
   prompt "insmod" if [PLATFORM_LINUX && !MODPROBE_SMALL]
   default [n] if [PLATFORM_LINUX && !MODPROBE_SMALL]
  <<<insmod is used to load specified modules in the running kernel.
>>>
  }
  config RMMOD boolean {
   prompt "rmmod" if [PLATFORM_LINUX && !MODPROBE_SMALL]
   default [n] if [PLATFORM_LINUX && !MODPROBE_SMALL]
  <<<rmmod is used to unload specified modules from the kernel.
>>>
  }
  config LSMOD boolean {
   prompt "lsmod" if [PLATFORM_LINUX && !MODPROBE_SMALL]
   default [n] if [PLATFORM_LINUX && !MODPROBE_SMALL]
  <<<lsmod is used to display a list of loaded modules.
>>>
   config FEATURE_LSMOD_PRETTY_2_6_OUTPUT boolean {
    prompt "Pretty output" if [PLATFORM_LINUX && LSMOD]
    default [n] if [PLATFORM_LINUX && LSMOD]
   <<<This option makes output format of lsmod adjusted to
the format of module-init-tools for Linux kernel 2.6.
Increases size somewhat.
>>>
   }
  }
  config MODPROBE boolean {
   prompt "modprobe" if [PLATFORM_LINUX && !MODPROBE_SMALL]
   default [n] if [PLATFORM_LINUX && !MODPROBE_SMALL]
  <<<Handle the loading of modules, and their dependencies on a high
level.
>>>
   config FEATURE_MODPROBE_BLACKLIST boolean {
    prompt "Blacklist support" if [PLATFORM_LINUX && MODPROBE]
    default [n] if [PLATFORM_LINUX && MODPROBE]
   <<<Say 'y' here to enable support for the 'blacklist' command in
modprobe.conf. This prevents the alias resolver to resolve
blacklisted modules. This is useful if you want to prevent your
hardware autodetection scripts to load modules like evdev, frame
buffer drivers etc.
>>>
   }
  }
  config DEPMOD boolean {
   prompt "depmod" if [PLATFORM_LINUX && !MODPROBE_SMALL]
   default [n] if [PLATFORM_LINUX && !MODPROBE_SMALL]
  <<<depmod generates modules.dep (and potentially modules.alias
and modules.symbols) that contain dependency information
for modprobe.
>>>
  }
 }
 config FEATURE_2_4_MODULES boolean {
  prompt "Support version 2.2/2.4 Linux kernels" if [PLATFORM_LINUX && (INSMOD || RMMOD || LSMOD)]
  default [n] if [PLATFORM_LINUX && (INSMOD || RMMOD || LSMOD)]
 <<<Support module loading for 2.2.x and 2.4.x Linux kernels.
This increases size considerably. Say N unless you plan
to run ancient kernels.
>>>
 }
 config FEATURE_INSMOD_TRY_MMAP boolean {
  prompt "Try to load module from a mmap'ed area" if [PLATFORM_LINUX && (INSMOD || MODPROBE_SMALL)]
  default [n] if [PLATFORM_LINUX && (INSMOD || MODPROBE_SMALL)]
 <<<This option causes module loading code to try to mmap
module first. If it does not work (for example,
it does not work for compressed modules), module will be read
(and unpacked if needed) into a memory block allocated by malloc.

The only case when mmap works but malloc does not is when
you are trying to load a big module on a very memory-constrained
machine. Malloc will momentarily need 2x as much memory as mmap.

Choosing N saves about 250 bytes of code (on 32-bit x86).
>>>
 }
 config FEATURE_INSMOD_VERSION_CHECKING boolean {
  prompt "Enable module version checking" if [PLATFORM_LINUX && FEATURE_2_4_MODULES && (INSMOD || MODPROBE)]
  default [n] if [PLATFORM_LINUX && FEATURE_2_4_MODULES && (INSMOD || MODPROBE)]
 <<<Support checking of versions for modules. This is used to
ensure that the kernel and module are made for each other.
>>>
 }
 config FEATURE_INSMOD_KSYMOOPS_SYMBOLS boolean {
  prompt "Add module symbols to kernel symbol table" if [PLATFORM_LINUX && FEATURE_2_4_MODULES && (INSMOD || MODPROBE)]
  default [n] if [PLATFORM_LINUX && FEATURE_2_4_MODULES && (INSMOD || MODPROBE)]
 <<<By adding module symbols to the kernel symbol table, Oops messages
occuring within kernel modules can be properly debugged. By enabling
this feature, module symbols will always be added to the kernel symbol
table for proper debugging support. If you are not interested in
Oops messages from kernel modules, say N.
>>>
 }
 config FEATURE_INSMOD_LOADINKMEM boolean {
  prompt "In kernel memory optimization (uClinux only)" if [PLATFORM_LINUX && FEATURE_2_4_MODULES && (INSMOD || MODPROBE)]
  default [n] if [PLATFORM_LINUX && FEATURE_2_4_MODULES && (INSMOD || MODPROBE)]
 <<<This is a special uClinux only memory optimization that lets insmod
load the specified kernel module directly into kernel space, reducing
memory usage by preventing the need for two copies of the module
being loaded into memory.
>>>
 }
 config FEATURE_INSMOD_LOAD_MAP boolean {
  prompt "Enable insmod load map (-m) option" if [PLATFORM_LINUX && FEATURE_2_4_MODULES && INSMOD]
  default [n] if [PLATFORM_LINUX && FEATURE_2_4_MODULES && INSMOD]
 <<<Enabling this, one would be able to get a load map
output on stdout. This makes kernel module debugging
easier.
If you don't plan to debug kernel modules, you
don't need this option.
>>>
  config FEATURE_INSMOD_LOAD_MAP_FULL boolean {
   prompt "Symbols in load map" if [PLATFORM_LINUX && FEATURE_INSMOD_LOAD_MAP && !MODPROBE_SMALL]
   default [y] if [PLATFORM_LINUX && FEATURE_INSMOD_LOAD_MAP && !MODPROBE_SMALL]
  <<<Without this option, -m will only output section
load map. With this option, -m will also output
symbols load map.
>>>
  }
 }
 config FEATURE_CHECK_TAINTED_MODULE boolean {
  prompt "Support tainted module checking with new kernels" if [PLATFORM_LINUX && (LSMOD || FEATURE_2_4_MODULES) && !MODPROBE_SMALL]
  default [y] if [PLATFORM_LINUX && (LSMOD || FEATURE_2_4_MODULES) && !MODPROBE_SMALL]
 <<<Support checking for tainted modules. These are usually binary
only modules that will make the linux-kernel list ignore your
support request.
This option is required to support GPLONLY modules.
>>>
 }
 config FEATURE_MODUTILS_ALIAS boolean {
  prompt "Support for module.aliases file" if [PLATFORM_LINUX && (DEPMOD || MODPROBE)]
  default [y] if [PLATFORM_LINUX && (DEPMOD || MODPROBE)]
 <<<Generate and parse modules.alias containing aliases for bus
identifiers:
  alias pcmcia:m*c*f03fn*pfn*pa*pb*pc*pd* parport_cs

and aliases for logical modules names e.g.:
  alias padlock_aes aes
  alias aes_i586 aes
  alias aes_generic aes

Say Y if unsure.
>>>
 }
 config FEATURE_MODUTILS_SYMBOLS boolean {
  prompt "Support for module.symbols file" if [PLATFORM_LINUX && (DEPMOD || MODPROBE)]
  default [y] if [PLATFORM_LINUX && (DEPMOD || MODPROBE)]
 <<<Generate and parse modules.symbols containing aliases for
symbol_request() kernel calls, such as:
  alias symbol:usb_sg_init usbcore

Say Y if unsure.
>>>
 }
 config DEFAULT_MODULES_DIR string {
  prompt "Default directory containing modules" if [PLATFORM_LINUX && (DEPMOD || MODPROBE || MODPROBE_SMALL || MODINFO)]
  default ["/lib/modules"] if [PLATFORM_LINUX && (DEPMOD || MODPROBE || MODPROBE_SMALL || MODINFO)]
 <<<Directory that contains kernel modules.
Defaults to "/lib/modules"
>>>
 }
 config DEFAULT_DEPMOD_FILE string {
  prompt "Default name of modules.dep" if [PLATFORM_LINUX && (DEPMOD || MODPROBE || MODPROBE_SMALL || MODINFO)]
  default ["modules.dep"] if [PLATFORM_LINUX && (DEPMOD || MODPROBE || MODPROBE_SMALL || MODINFO)]
 <<<Filename that contains kernel modules dependencies.
Defaults to "modules.dep"
>>>
 }
}
menu "Linux System Utilities" {
<<<>>>
 config BLOCKDEV boolean {
  prompt "blockdev" if []
  default [y] if []
 <<<Performs some ioctls with block devices.>>>
 }
 config REV boolean {
  prompt "rev" if []
  default [y] if []
 <<<Reverse lines of a file or files.
>>>
 }
 config ACPID boolean {
  prompt "acpid" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<acpid listens to ACPI events coming either in textual form from
/proc/acpi/event (though it is marked deprecated it is still widely
used and _is_ a standard) or in binary form from specified evdevs
(just use /dev/input/event*).

It parses the event to retrieve ACTION and a possible PARAMETER.
It then spawns /etc/acpi/<ACTION>[/<PARAMETER>] either via run-parts
(if the resulting path is a directory) or directly as an executable.

N.B. acpid relies on run-parts so have the latter installed.
>>>
  config FEATURE_ACPID_COMPAT boolean {
   prompt "Accept and ignore redundant options" if [ACPID]
   default [y] if [ACPID]
  <<<Accept and ignore compatibility options -g -m -s -S -v.
>>>
  }
 }
 config BLKID boolean {
  prompt "blkid" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
  select VOLUMEID if [PLATFORM_LINUX]
 <<<Lists labels and UUIDs of all filesystems.
WARNING:
With all submodules selected, it will add ~8k to busybox.
>>>
 }
 config DMESG boolean {
  prompt "dmesg" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<dmesg is used to examine or control the kernel ring buffer. When the
Linux kernel prints messages to the system log, they are stored in
the kernel ring buffer. You can use dmesg to print the kernel's ring
buffer, clear the kernel ring buffer, change the size of the kernel
ring buffer, and change the priority level at which kernel messages
are also logged to the system console. Enable this option if you
wish to enable the 'dmesg' utility.
>>>
  config FEATURE_DMESG_PRETTY boolean {
   prompt "Pretty dmesg output" if [DMESG]
   default [y] if [DMESG]
  <<<If you wish to scrub the syslog level from the output, say 'Y' here.
The syslog level is a string prefixed to every line with the form
"<#>".

With this option you will see:
  # dmesg
  Linux version 2.6.17.4 .....
  BIOS-provided physical RAM map:
   BIOS-e820: 0000000000000000 - 000000000009f000 (usable)

Without this option you will see:
  # dmesg
  <5>Linux version 2.6.17.4 .....
  <6>BIOS-provided physical RAM map:
  <6> BIOS-e820: 0000000000000000 - 000000000009f000 (usable)
>>>
  }
 }
 config FBSET boolean {
  prompt "fbset" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<fbset is used to show or change the settings of a Linux frame buffer
device. The frame buffer device provides a simple and unique
interface to access a graphics display. Enable this option
if you wish to enable the 'fbset' utility.
>>>
  config FEATURE_FBSET_FANCY boolean {
   prompt "Turn on extra fbset options" if [FBSET]
   default [y] if [FBSET]
  <<<This option enables extended fbset options, allowing one to set the
framebuffer size, color depth, etc. interface to access a graphics
display. Enable this option if you wish to enable extended fbset
options.
>>>
  }
  config FEATURE_FBSET_READMODE boolean {
   prompt "Turn on fbset readmode support" if [FBSET]
   default [y] if [FBSET]
  <<<This option allows fbset to read the video mode database stored by
default as /etc/fb.modes, which can be used to set frame buffer
device to pre-defined video modes.
>>>
  }
 }
 config FDFLUSH boolean {
  prompt "fdflush" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<fdflush is only needed when changing media on slightly-broken
removable media drives. It is used to make Linux believe that a
hardware disk-change switch has been actuated, which causes Linux to
forget anything it has cached from the previous media. If you have
such a slightly-broken drive, you will need to run fdflush every time
you change a disk. Most people have working hardware and can safely
leave this disabled.
>>>
 }
 config FDFORMAT boolean {
  prompt "fdformat" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<fdformat is used to low-level format a floppy disk.
>>>
 }
 config FDISK boolean {
  prompt "fdisk" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<The fdisk utility is used to divide hard disks into one or more
logical disks, which are generally called partitions. This utility
can be used to list and edit the set of partitions or BSD style
'disk slices' that are defined on a hard drive.
>>>
  config FDISK_SUPPORT_LARGE_DISKS boolean {
   prompt "Support over 4GB disks" if [FDISK]
   default [y] if [FDISK]
  <<<Enable this option to support large disks > 4GB.
>>>
  }
  config FEATURE_FDISK_WRITABLE boolean {
   prompt "Write support" if [FDISK]
   default [y] if [FDISK]
  <<<Enabling this option allows you to create or change a partition table
and write those changes out to disk. If you leave this option
disabled, you will only be able to view the partition table.
>>>
   config FEATURE_AIX_LABEL boolean {
    prompt "Support AIX disklabels" if [FDISK && FEATURE_FDISK_WRITABLE]
    default [n] if [FDISK && FEATURE_FDISK_WRITABLE]
   <<<Enabling this option allows you to create or change AIX disklabels.
Most people can safely leave this option disabled.
>>>
   }
   config FEATURE_SGI_LABEL boolean {
    prompt "Support SGI disklabels" if [FDISK && FEATURE_FDISK_WRITABLE]
    default [n] if [FDISK && FEATURE_FDISK_WRITABLE]
   <<<Enabling this option allows you to create or change SGI disklabels.
Most people can safely leave this option disabled.
>>>
   }
   config FEATURE_SUN_LABEL boolean {
    prompt "Support SUN disklabels" if [FDISK && FEATURE_FDISK_WRITABLE]
    default [n] if [FDISK && FEATURE_FDISK_WRITABLE]
   <<<Enabling this option allows you to create or change SUN disklabels.
Most people can safely leave this option disabled.
>>>
   }
   config FEATURE_OSF_LABEL boolean {
    prompt "Support BSD disklabels" if [FDISK && FEATURE_FDISK_WRITABLE]
    default [n] if [FDISK && FEATURE_FDISK_WRITABLE]
   <<<Enabling this option allows you to create or change BSD disklabels
and define and edit BSD disk slices.
>>>
   }
   config FEATURE_GPT_LABEL boolean {
    prompt "Support GPT disklabels" if [FDISK && FEATURE_FDISK_WRITABLE]
    default [n] if [FDISK && FEATURE_FDISK_WRITABLE]
   <<<Enabling this option allows you to view GUID Partition Table
disklabels.
>>>
   }
   config FEATURE_FDISK_ADVANCED boolean {
    prompt "Support expert mode" if [FDISK && FEATURE_FDISK_WRITABLE]
    default [y] if [FDISK && FEATURE_FDISK_WRITABLE]
   <<<Enabling this option allows you to do terribly unsafe things like
define arbitrary drive geometry, move the beginning of data in a
partition, and similarly evil things. Unless you have a very good
reason you would be wise to leave this disabled.
>>>
   }
  }
 }
 config FINDFS boolean {
  prompt "findfs" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
  select VOLUMEID if [PLATFORM_LINUX]
 <<<Prints the name of a filesystem with given label or UUID.
WARNING:
With all submodules selected, it will add ~8k to busybox.
>>>
 }
 config FLOCK boolean {
  prompt "flock" if []
  default [y] if []
 <<<Manage locks from shell scripts
>>>
 }
 config FREERAMDISK boolean {
  prompt "freeramdisk" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Linux allows you to create ramdisks. This utility allows you to
delete them and completely free all memory that was used for the
ramdisk. For example, if you boot Linux into a ramdisk and later
pivot_root, you may want to free the memory that is allocated to the
ramdisk. If you have no use for freeing memory from a ramdisk, leave
this disabled.
>>>
 }
 config FSCK_MINIX boolean {
  prompt "fsck_minix" if []
  default [y] if []
 <<<The minix filesystem is a nice, small, compact, read-write filesystem
with little overhead. It is not a journaling filesystem however and
can experience corruption if it is not properly unmounted or if the
power goes off in the middle of a write. This utility allows you to
check for and attempt to repair any corruption that occurs to a minix
filesystem.
>>>
 }
 config MKFS_EXT2 boolean {
  prompt "mkfs_ext2" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Utility to create EXT2 filesystems.
>>>
 }
 config MKFS_MINIX boolean {
  prompt "mkfs_minix" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<The minix filesystem is a nice, small, compact, read-write filesystem
with little overhead. If you wish to be able to create minix
filesystems this utility will do the job for you.
>>>
 }
 config FEATURE_MINIX2 boolean {
  prompt "Support Minix fs v2 (fsck_minix/mkfs_minix)" if [FSCK_MINIX || MKFS_MINIX]
  default [y] if [FSCK_MINIX || MKFS_MINIX]
 <<<If you wish to be able to create version 2 minix filesystems, enable
this. If you enabled 'mkfs_minix' then you almost certainly want to
be using the version 2 filesystem support.
>>>
 }
 config MKFS_REISER boolean {
  prompt "mkfs_reiser" if [PLATFORM_LINUX]
  default [n] if [PLATFORM_LINUX]
 <<<Utility to create ReiserFS filesystems.
Note: this applet needs a lot of testing and polishing.
>>>
 }
 config MKFS_VFAT boolean {
  prompt "mkfs_vfat" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Utility to create FAT32 filesystems.
>>>
 }
 config GETOPT boolean {
  prompt "getopt" if []
  default [y] if []
 <<<The getopt utility is used to break up (parse) options in command
lines to make it easy to write complex shell scripts that also check
for legal (and illegal) options. If you want to write horribly
complex shell scripts, or use some horribly complex shell script
written by others, this utility may be for you. Most people will
wisely leave this disabled.
>>>
  config FEATURE_GETOPT_LONG boolean {
   prompt "Support option -l" if [GETOPT]
   default [y] if [GETOPT && LONG_OPTS]
  <<<Enable support for long options (option -l).
>>>
  }
 }
 config HEXDUMP boolean {
  prompt "hexdump" if []
  default [y] if []
 <<<The hexdump utility is used to display binary data in a readable
way that is comparable to the output from most hex editors.
>>>
  config FEATURE_HEXDUMP_REVERSE boolean {
   prompt "Support -R, reverse of 'hexdump -Cv'" if [HEXDUMP]
   default [y] if [HEXDUMP]
  <<<The hexdump utility is used to display binary data in an ascii
readable way. This option creates binary data from an ascii input.
NB: this option is non-standard. It's unwise to use it in scripts
aimed to be portable.
>>>
  }
  config HD boolean {
   prompt "hd" if [HEXDUMP]
   default [y] if [HEXDUMP]
  <<<hd is an alias to hexdump -C.
>>>
  }
 }
 config HWCLOCK boolean {
  prompt "hwclock" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<The hwclock utility is used to read and set the hardware clock
on a system. This is primarily used to set the current time on
shutdown in the hardware clock, so the hardware will keep the
correct time when Linux is _not_ running.
>>>
  config FEATURE_HWCLOCK_LONG_OPTIONS boolean {
   prompt "Support long options (--hctosys,...)" if [HWCLOCK && LONG_OPTS]
   default [y] if [HWCLOCK && LONG_OPTS]
  <<<By default, the hwclock utility only uses short options. If you
are overly fond of its long options, such as --hctosys, --utc, etc)
then enable this option.
>>>
  }
  config FEATURE_HWCLOCK_ADJTIME_FHS boolean {
   prompt "Use FHS /var/lib/hwclock/adjtime" if [HWCLOCK]
   default [n] if [HWCLOCK]
  <<<Starting with FHS 2.3, the adjtime state file is supposed to exist
at /var/lib/hwclock/adjtime instead of /etc/adjtime. If you wish
to use the FHS behavior, answer Y here, otherwise answer N for the
classic /etc/adjtime path.

pathname.com/fhs/pub/fhs-2.3.html#VARLIBHWCLOCKSTATEDIRECTORYFORHWCLO
>>>
  }
 }
 config IPCRM boolean {
  prompt "ipcrm" if []
  default [y] if []
  select FEATURE_SUID if []
 <<<The ipcrm utility allows the removal of System V interprocess
communication (IPC) objects and the associated data structures
from the system.
>>>
 }
 config IPCS boolean {
  prompt "ipcs" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
  select FEATURE_SUID if [PLATFORM_LINUX]
 <<<The ipcs utility is used to provide information on the currently
allocated System V interprocess (IPC) objects in the system.
>>>
 }
 config LOSETUP boolean {
  prompt "losetup" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<losetup is used to associate or detach a loop device with a regular
file or block device, and to query the status of a loop device. This
version does not currently support enabling data encryption.
>>>
 }
 config LSPCI boolean {
  prompt "lspci" if []
  default [y] if []
 <<<lspci is a utility for displaying information about PCI buses in the
system and devices connected to them.

This version uses sysfs (/sys/bus/pci/devices) only.
>>>
 }
 config LSUSB boolean {
  prompt "lsusb" if []
  default [y] if []
 <<<lsusb is a utility for displaying information about USB buses in the
system and devices connected to them.

This version uses sysfs (/sys/bus/usb/devices) only.
>>>
 }
 config MDEV boolean {
  prompt "mdev" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<mdev is a mini-udev implementation for dynamically creating device
nodes in the /dev directory.

For more information, please see docs/mdev.txt
>>>
  config FEATURE_MDEV_CONF boolean {
   prompt "Support /etc/mdev.conf" if [MDEV]
   default [y] if [MDEV]
  <<<Add support for the mdev config file to control ownership and
permissions of the device nodes.

For more information, please see docs/mdev.txt
>>>
   config FEATURE_MDEV_RENAME boolean {
    prompt "Support subdirs/symlinks" if [FEATURE_MDEV_CONF]
    default [y] if [FEATURE_MDEV_CONF]
   <<<Add support for renaming devices and creating symlinks.

For more information, please see docs/mdev.txt
>>>
    config FEATURE_MDEV_RENAME_REGEXP boolean {
     prompt "Support regular expressions substitutions when renaming device" if [FEATURE_MDEV_RENAME]
     default [y] if [FEATURE_MDEV_RENAME]
    <<<Add support for regular expressions substitutions when renaming
device.
>>>
    }
   }
   config FEATURE_MDEV_EXEC boolean {
    prompt "Support command execution at device addition/removal" if [FEATURE_MDEV_CONF]
    default [y] if [FEATURE_MDEV_CONF]
   <<<This adds support for an optional field to /etc/mdev.conf for
executing commands when devices are created/removed.

For more information, please see docs/mdev.txt
>>>
   }
  }
  config FEATURE_MDEV_LOAD_FIRMWARE boolean {
   prompt "Support loading of firmwares" if [MDEV]
   default [y] if [MDEV]
  <<<Some devices need to load firmware before they can be usable.

These devices will request userspace look up the files in
/lib/firmware/ and if it exists, send it to the kernel for
loading into the hardware.
>>>
  }
 }
 config MKSWAP boolean {
  prompt "mkswap" if []
  default [y] if []
 <<<The mkswap utility is used to configure a file or disk partition as
Linux swap space. This allows Linux to use the entire file or
partition as if it were additional RAM, which can greatly increase
the capability of low-memory machines. This additional memory is
much slower than real RAM, but can be very helpful at preventing your
applications being killed by the Linux out of memory (OOM) killer.
Once you have created swap space using 'mkswap' you need to enable
the swap space using the 'swapon' utility.
>>>
  config FEATURE_MKSWAP_UUID boolean {
   prompt "UUID support" if [MKSWAP]
   default [y] if [MKSWAP]
  <<<Generate swap spaces with universally unique identifiers.
>>>
  }
 }
 config MORE boolean {
  prompt "more" if []
  default [y] if []
 <<<more is a simple utility which allows you to read text one screen
sized page at a time. If you want to read text that is larger than
the screen, and you are using anything faster than a 300 baud modem,
you will probably find this utility very helpful. If you don't have
any need to reading text files, you can leave this disabled.
>>>
 }
 config MOUNT boolean {
  prompt "mount" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<All files and filesystems in Unix are arranged into one big directory
tree. The 'mount' utility is used to graft a filesystem onto a
particular part of the tree. A filesystem can either live on a block
device, or it can be accessible over the network, as is the case with
NFS filesystems. Most people using BusyBox will also want to enable
the 'mount' utility.
>>>
  config FEATURE_MOUNT_FAKE boolean {
   prompt "Support option -f" if [MOUNT]
   default [y] if [MOUNT]
  <<<Enable support for faking a file system mount.
>>>
  }
  config FEATURE_MOUNT_VERBOSE boolean {
   prompt "Support option -v" if [MOUNT]
   default [y] if [MOUNT]
  <<<Enable multi-level -v[vv...] verbose messages. Useful if you
debug mount problems and want to see what is exactly passed
to the kernel.
>>>
  }
  config FEATURE_MOUNT_HELPERS boolean {
   prompt "Support mount helpers" if [MOUNT]
   default [n] if [MOUNT]
  <<<Enable mounting of virtual file systems via external helpers.
E.g. "mount obexfs#-b00.11.22.33.44.55 /mnt" will in effect call
"obexfs -b00.11.22.33.44.55 /mnt"
Also "mount -t sometype [-o opts] fs /mnt" will try
"sometype [-o opts] fs /mnt" if simple mount syscall fails.
The idea is to use such virtual filesystems in /etc/fstab.
>>>
  }
  config FEATURE_MOUNT_LABEL boolean {
   prompt "Support specifying devices by label or UUID" if [MOUNT]
   default [y] if [MOUNT]
   select VOLUMEID if [MOUNT]
  <<<This allows for specifying a device by label or uuid, rather than by
name. This feature utilizes the same functionality as blkid/findfs.
This also enables label or uuid support for swapon.
>>>
  }
  config FEATURE_MOUNT_NFS boolean {
   prompt "Support mounting NFS file systems" if [MOUNT]
   default [y] if [MOUNT]
   select FEATURE_HAVE_RPC if [MOUNT]
   select FEATURE_SYSLOG if [MOUNT]
  <<<Enable mounting of NFS file systems.
>>>
  }
  config FEATURE_MOUNT_CIFS boolean {
   prompt "Support mounting CIFS/SMB file systems" if [MOUNT]
   default [y] if [MOUNT]
  <<<Enable support for samba mounts.
>>>
  }
  config FEATURE_MOUNT_FLAGS boolean {
   prompt "Support lots of -o flags in mount" if [MOUNT]
   default [y] if [MOUNT]
  <<<Without this, mount only supports ro/rw/remount. With this, it
supports nosuid, suid, dev, nodev, exec, noexec, sync, async, atime,
noatime, diratime, nodiratime, loud, bind, move, shared, slave,
private, unbindable, rshared, rslave, rprivate, and runbindable.
>>>
  }
  config FEATURE_MOUNT_FSTAB boolean {
   prompt "Support /etc/fstab and -a" if [MOUNT]
   default [y] if [MOUNT]
  <<<Support mount all and looking for files in /etc/fstab.
>>>
  }
 }
 config PIVOT_ROOT boolean {
  prompt "pivot_root" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<The pivot_root utility swaps the mount points for the root filesystem
with some other mounted filesystem. This allows you to do all sorts
of wild and crazy things with your Linux system and is far more
powerful than 'chroot'.

Note: This is for initrd in linux 2.4. Under initramfs (introduced
in linux 2.6) use switch_root instead.
>>>
 }
 config RDATE boolean {
  prompt "rdate" if []
  default [y] if []
 <<<The rdate utility allows you to synchronize the date and time of your
system clock with the date and time of a remote networked system using
the RFC868 protocol, which is built into the inetd daemon on most
systems.
>>>
 }
 config RDEV boolean {
  prompt "rdev" if []
  default [y] if []
 <<<Print the device node associated with the filesystem mounted at '/'.
>>>
 }
 config READPROFILE boolean {
  prompt "readprofile" if []
  default [y] if []
 <<<This allows you to parse /proc/profile for basic profiling.
>>>
 }
 config RTCWAKE boolean {
  prompt "rtcwake" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Enter a system sleep state until specified wakeup time.
>>>
 }
 config SCRIPT boolean {
  prompt "script" if []
  default [y] if []
 <<<The script makes typescript of terminal session.
>>>
 }
 config SCRIPTREPLAY boolean {
  prompt "scriptreplay" if []
  default [y] if []
 <<<This program replays a typescript, using timing information
given by script -t.
>>>
 }
 config SETARCH boolean {
  prompt "setarch" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<The linux32 utility is used to create a 32bit environment for the
specified program (usually a shell). It only makes sense to have
this util on a system that supports both 64bit and 32bit userland
(like amd64/x86, ppc64/ppc, sparc64/sparc, etc...).
>>>
 }
 config SWAPONOFF boolean {
  prompt "swaponoff" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<This option enables both the 'swapon' and the 'swapoff' utilities.
Once you have created some swap space using 'mkswap', you also need
to enable your swap space with the 'swapon' utility. The 'swapoff'
utility is used, typically at system shutdown, to disable any swap
space. If you are not using any swap space, you can leave this
option disabled.
>>>
  config FEATURE_SWAPON_PRI boolean {
   prompt "Support priority option -p" if [SWAPONOFF]
   default [y] if [SWAPONOFF]
  <<<Enable support for setting swap device priority in swapon.
>>>
  }
 }
 config SWITCH_ROOT boolean {
  prompt "switch_root" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<The switch_root utility is used from initramfs to select a new
root device. Under initramfs, you have to use this instead of
pivot_root. (Stop reading here if you don't care why.)

Booting with initramfs extracts a gzipped cpio archive into rootfs
(which is a variant of ramfs/tmpfs). Because rootfs can't be moved
or unmounted*, pivot_root will not work from initramfs. Instead,
switch_root deletes everything out of rootfs (including itself),
does a mount --move that overmounts rootfs with the new root, and
then execs the specified init program.

* Because the Linux kernel uses rootfs internally as the starting
and ending point for searching through the kernel's doubly linked
list of active mount points. That's why.
>>>
 }
 config UMOUNT boolean {
  prompt "umount" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<When you want to remove a mounted filesystem from its current mount
point, for example when you are shutting down the system, the
'umount' utility is the tool to use. If you enabled the 'mount'
utility, you almost certainly also want to enable 'umount'.
>>>
  config FEATURE_UMOUNT_ALL boolean {
   prompt "Support option -a" if [UMOUNT]
   default [y] if [UMOUNT]
  <<<Support -a option to unmount all currently mounted filesystems.
>>>
  }
 }
 config FEATURE_MOUNT_LOOP boolean {
  prompt "Support loopback mounts" if [MOUNT || UMOUNT]
  default [y] if [MOUNT || UMOUNT]
 <<<Enabling this feature allows automatic mounting of files (containing
filesystem images) via the linux kernel's loopback devices.
The mount command will detect you are trying to mount a file instead
of a block device, and transparently associate the file with a
loopback device. The umount command will also free that loopback
device.

You can still use the 'losetup' utility (to manually associate files
with loop devices) if you need to do something advanced, such as
specify an offset or cryptographic options to the loopback device.
(If you don't want umount to free the loop device, use "umount -D".)
>>>
  config FEATURE_MOUNT_LOOP_CREATE boolean {
   prompt "Create new loopback devices if needed" if [FEATURE_MOUNT_LOOP]
   default [y] if [FEATURE_MOUNT_LOOP]
  <<<Linux kernels >= 2.6.24 support unlimited loopback devices. They are
allocated for use when trying to use a loop device. The loop device
must however exist.

This feature lets mount to try to create next /dev/loopN device
if it does not find a free one.
>>>
  }
 }
 config FEATURE_MTAB_SUPPORT boolean {
  prompt "Support for the old /etc/mtab file" if [MOUNT || UMOUNT]
  default [n] if [MOUNT || UMOUNT]
  select FEATURE_MOUNT_FAKE if [MOUNT || UMOUNT]
 <<<Historically, Unix systems kept track of the currently mounted
partitions in the file "/etc/mtab". These days, the kernel exports
the list of currently mounted partitions in "/proc/mounts", rendering
the old mtab file obsolete. (In modern systems, /etc/mtab should be
a symlink to /proc/mounts.)

The only reason to have mount maintain an /etc/mtab file itself is if
your stripped-down embedded system does not have a /proc directory.
If you must use this, keep in mind it's inherently brittle (for
example a mount under chroot won't update it), can't handle modern
features like separate per-process filesystem namespaces, requires
that your /etc directory be writable, tends to get easily confused
by --bind or --move mounts, won't update if you rename a directory
that contains a mount point, and so on. (In brief: avoid.)

About the only reason to use this is if you've removed /proc from
your kernel.
>>>
 }
 config VOLUMEID boolean {
  default [n] if []
 <<<>>>
 }
 menu "Filesystem/Volume identification" {
  depends on [VOLUMEID]
 <<<>>>
  config FEATURE_VOLUMEID_EXT boolean {
   prompt "Ext filesystem" if [VOLUMEID]
   default [y] if [VOLUMEID]
  <<<TODO
>>>
  }
  config FEATURE_VOLUMEID_BTRFS boolean {
   prompt "btrfs filesystem" if [VOLUMEID]
   default [y] if [VOLUMEID]
  <<<TODO
>>>
  }
  config FEATURE_VOLUMEID_REISERFS boolean {
   prompt "Reiser filesystem" if [VOLUMEID]
   default [y] if [VOLUMEID]
  <<<TODO
>>>
  }
  config FEATURE_VOLUMEID_FAT boolean {
   prompt "fat filesystem" if [VOLUMEID]
   default [y] if [VOLUMEID]
  <<<TODO
>>>
  }
  config FEATURE_VOLUMEID_HFS boolean {
   prompt "hfs filesystem" if [VOLUMEID]
   default [y] if [VOLUMEID]
  <<<TODO
>>>
  }
  config FEATURE_VOLUMEID_JFS boolean {
   prompt "jfs filesystem" if [VOLUMEID]
   default [y] if [VOLUMEID]
  <<<TODO
>>>
  }
  config FEATURE_VOLUMEID_XFS boolean {
   prompt "xfs filesystem" if [VOLUMEID]
   default [y] if [VOLUMEID]
  <<<TODO
>>>
  }
  config FEATURE_VOLUMEID_NTFS boolean {
   prompt "ntfs filesystem" if [VOLUMEID]
   default [y] if [VOLUMEID]
  <<<TODO
>>>
  }
  config FEATURE_VOLUMEID_ISO9660 boolean {
   prompt "iso9660 filesystem" if [VOLUMEID]
   default [y] if [VOLUMEID]
  <<<TODO
>>>
  }
  config FEATURE_VOLUMEID_UDF boolean {
   prompt "udf filesystem" if [VOLUMEID]
   default [y] if [VOLUMEID]
  <<<TODO
>>>
  }
  config FEATURE_VOLUMEID_LUKS boolean {
   prompt "luks filesystem" if [VOLUMEID]
   default [y] if [VOLUMEID]
  <<<TODO
>>>
  }
  config FEATURE_VOLUMEID_LINUXSWAP boolean {
   prompt "linux swap filesystem" if [VOLUMEID]
   default [y] if [VOLUMEID]
  <<<TODO
>>>
  }
  config FEATURE_VOLUMEID_CRAMFS boolean {
   prompt "cramfs filesystem" if [VOLUMEID]
   default [y] if [VOLUMEID]
  <<<TODO
>>>
  }
  config FEATURE_VOLUMEID_ROMFS boolean {
   prompt "romfs filesystem" if [VOLUMEID]
   default [y] if [VOLUMEID]
  <<<TODO
>>>
  }
  config FEATURE_VOLUMEID_SYSV boolean {
   prompt "sysv filesystem" if [VOLUMEID]
   default [y] if [VOLUMEID]
  <<<TODO
>>>
  }
  config FEATURE_VOLUMEID_OCFS2 boolean {
   prompt "ocfs2 filesystem" if [VOLUMEID]
   default [y] if [VOLUMEID]
  <<<TODO
>>>
  }
  config FEATURE_VOLUMEID_LINUXRAID boolean {
   prompt "linuxraid" if [VOLUMEID]
   default [y] if [VOLUMEID]
  <<<TODO
>>>
  }
 }
}
menu "Miscellaneous Utilities" {
<<<>>>
 config CONSPY boolean {
  prompt "conspy" if [PLATFORM_LINUX]
  default [n] if [PLATFORM_LINUX]
 <<<A text-mode VNC like program for Linux virtual terminals.
example:  conspy NUM      shared access to console num
or        conspy -nd NUM  screenshot of console num
or        conspy -cs NUM  poor man's GNU screen like>>>
 }
 config NANDWRITE boolean {
  prompt "nandwrite" if [PLATFORM_LINUX]
  default [n] if [PLATFORM_LINUX]
 <<<Write to the specified MTD device, with bad blocks awareness
>>>
 }
 config NANDDUMP boolean {
  prompt "nanddump" if [PLATFORM_LINUX]
  default [n] if [PLATFORM_LINUX]
 <<<Dump the content of raw NAND chip>>>
 }
 config UBIATTACH boolean {
  prompt "ubiattach" if [PLATFORM_LINUX]
  default [n] if [PLATFORM_LINUX]
 <<<Attach MTD device to an UBI device.
>>>
 }
 config UBIDETACH boolean {
  prompt "ubidetach" if [PLATFORM_LINUX]
  default [n] if [PLATFORM_LINUX]
 <<<Detach MTD device from an UBI device.
>>>
 }
 config ADJTIMEX boolean {
  prompt "adjtimex" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Adjtimex reads and optionally sets adjustment parameters for
the Linux clock adjustment algorithm.
>>>
 }
 config BBCONFIG boolean {
  prompt "bbconfig" if []
  default [n] if []
 <<<The bbconfig applet will print the config file with which
busybox was built.
>>>
  config FEATURE_COMPRESS_BBCONFIG boolean {
   prompt "Compress bbconfig data" if [BBCONFIG]
   default [y] if [BBCONFIG]
  <<<Store bbconfig data in compressed form, uncompress them on-the-fly
before output.

If you have a really tiny busybox with few applets enabled (and
bunzip2 isn't one of them), the overhead of the decompressor might
be noticeable. Also, if you run executables directly from ROM
and have very little memory, this might not be a win. Otherwise,
you probably want this.
>>>
  }
 }
 config BEEP boolean {
  prompt "beep" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<The beep applets beeps in a given freq/Hz.
>>>
  config FEATURE_BEEP_FREQ integer {
   prompt "default frequency" if [BEEP]
   range [0 2147483647] if [BEEP]
   default [4000] if [BEEP]
  <<<Frequency for default beep.
>>>
  }
  config FEATURE_BEEP_LENGTH_MS integer {
   prompt "default length" if [BEEP]
   range [0 2147483647] if [BEEP]
   default [30] if [BEEP]
  <<<Length in ms for default beep.
>>>
  }
 }
 config CHAT boolean {
  prompt "chat" if []
  default [y] if []
 <<<Simple chat utility.
>>>
  config FEATURE_CHAT_NOFAIL boolean {
   prompt "Enable NOFAIL expect strings" if [CHAT]
   default [y] if [CHAT]
  <<<When enabled expect strings which are started with a dash trigger
no-fail mode. That is when expectation is not met within timeout
the script is not terminated but sends next SEND string and waits
for next EXPECT string. This allows to compose far more flexible
scripts.
>>>
  }
  config FEATURE_CHAT_TTY_HIFI boolean {
   prompt "Force STDIN to be a TTY" if [CHAT]
   default [n] if [CHAT]
  <<<Original chat always treats STDIN as a TTY device and sets for it
so-called raw mode. This option turns on such behaviour.
>>>
  }
  config FEATURE_CHAT_IMPLICIT_CR boolean {
   prompt "Enable implicit Carriage Return" if [CHAT]
   default [y] if [CHAT]
  <<<When enabled make chat to terminate all SEND strings with a "\r"
unless "\c" is met anywhere in the string.
>>>
  }
  config FEATURE_CHAT_SWALLOW_OPTS boolean {
   prompt "Swallow options" if [CHAT]
   default [y] if [CHAT]
  <<<Busybox chat require no options. To make it not fail when used
in place of original chat (which has a bunch of options) turn
this on.
>>>
  }
  config FEATURE_CHAT_SEND_ESCAPES boolean {
   prompt "Support weird SEND escapes" if [CHAT]
   default [y] if [CHAT]
  <<<Original chat uses some escape sequences in SEND arguments which
are not sent to device but rather performs special actions.
E.g. "\K" means to send a break sequence to device.
"\d" delays execution for a second, "\p" -- for a 1/100 of second.
Before turning this option on think twice: do you really need them?
>>>
  }
  config FEATURE_CHAT_VAR_ABORT_LEN boolean {
   prompt "Support variable-length ABORT conditions" if [CHAT]
   default [y] if [CHAT]
  <<<Original chat uses fixed 50-bytes length ABORT conditions. Say N here.
>>>
  }
  config FEATURE_CHAT_CLR_ABORT boolean {
   prompt "Support revoking of ABORT conditions" if [CHAT]
   default [y] if [CHAT]
  <<<Support CLR_ABORT directive.
>>>
  }
 }
 config CHRT boolean {
  prompt "chrt" if []
  default [y] if []
 <<<manipulate real-time attributes of a process.
This requires sched_{g,s}etparam support in your libc.
>>>
 }
 config CROND boolean {
  prompt "crond" if []
  default [y] if []
  select FEATURE_SYSLOG if []
 <<<Crond is a background daemon that parses individual crontab
files and executes commands on behalf of the users in question.
This is a port of dcron from slackware. It uses files of the
format /var/spool/cron/crontabs/<username> files, for example:
    $ cat /var/spool/cron/crontabs/root
    # Run daily cron jobs at 4:40 every day:
    40 4 * * * /etc/cron/daily > /dev/null 2>&1
>>>
  config FEATURE_CROND_D boolean {
   prompt "Support option -d to redirect output to stderr" if [CROND]
   default [y] if [CROND]
  <<<-d sets loglevel to 0 (most verbose) and directs all output to stderr.
>>>
  }
  config FEATURE_CROND_CALL_SENDMAIL boolean {
   prompt "Report command output via email (using sendmail)" if [CROND]
   default [y] if [CROND]
  <<<Command output will be sent to corresponding user via email.
>>>
  }
  config FEATURE_CROND_DIR string {
   prompt "crond spool directory" if [CROND || CRONTAB]
   default ["/var/spool/cron"] if [CROND || CRONTAB]
  <<<Location of crond spool.
>>>
  }
 }
 config CRONTAB boolean {
  prompt "crontab" if []
  default [y] if []
  select FEATURE_SUID if []
 <<<Crontab manipulates the crontab for a particular user. Only
the superuser may specify a different user and/or crontab directory.
Note that Busybox binary must be setuid root for this applet to
work properly.
>>>
 }
 config DC boolean {
  prompt "dc" if []
  default [y] if []
 <<<Dc is a reverse-polish desk calculator which supports unlimited
precision arithmetic.
>>>
  config FEATURE_DC_LIBM boolean {
   prompt "Enable power and exp functions (requires libm)" if [DC]
   default [y] if [DC]
  <<<Enable power and exp functions.
NOTE: This will require libm to be present for linking.
>>>
  }
 }
 config DEVFSD boolean {
  prompt "devfsd (obsolete)" if [PLATFORM_LINUX]
  default [n] if [PLATFORM_LINUX]
  select FEATURE_SYSLOG if [PLATFORM_LINUX]
 <<<This is deprecated and should NOT be used anymore.
Use linux >= 2.6 (optionally with hotplug) and mdev instead!
See docs/mdev.txt for detailed instructions on how to use mdev
instead.

Provides compatibility with old device names on a devfs systems.
You should set it to true if you have devfs enabled.
The following keywords in devsfd.conf are supported:
"CLEAR_CONFIG", "INCLUDE", "OPTIONAL_INCLUDE", "RESTORE",
"PERMISSIONS", "EXECUTE", "COPY", "IGNORE",
"MKOLDCOMPAT", "MKNEWCOMPAT","RMOLDCOMPAT", "RMNEWCOMPAT".

But only if they are written UPPERCASE!!!!!!!!
>>>
  config DEVFSD_MODLOAD boolean {
   prompt "Adds support for MODLOAD keyword in devsfd.conf" if [DEVFSD]
   default [y] if [DEVFSD]
  <<<This actually doesn't work with busybox modutils but needs
the external modutils.
>>>
  }
  config DEVFSD_FG_NP boolean {
   prompt "Enables the -fg and -np options" if [DEVFSD]
   default [y] if [DEVFSD]
  <<<-fg  Run the daemon in the foreground.
-np  Exit after parsing the configuration file.
     Do not poll for events.
>>>
  }
  config DEVFSD_VERBOSE boolean {
   prompt "Increases logging (and size)" if [DEVFSD]
   default [y] if [DEVFSD]
  <<<Increases logging to stderr or syslog.
>>>
  }
 }
 config FEATURE_DEVFS boolean {
  prompt "Use devfs names for all devices (obsolete)" if [PLATFORM_LINUX]
  default [n] if [PLATFORM_LINUX]
 <<<This is obsolete and should NOT be used anymore.
Use linux >= 2.6 (optionally with hotplug) and mdev instead!

For legacy systems -- if there is no way around devfsd -- this
tells busybox to look for names like /dev/loop/0 instead of
/dev/loop0. If your /dev directory has normal names instead of
devfs names, you don't want this.
>>>
 }
 config DEVMEM boolean {
  prompt "devmem" if []
  default [y] if []
 <<<devmem is a small program that reads and writes from physical
memory using /dev/mem.
>>>
 }
 config EJECT boolean {
  prompt "eject" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Used to eject cdroms. (defaults to /dev/cdrom)
>>>
  config FEATURE_EJECT_SCSI boolean {
   prompt "SCSI support" if [EJECT]
   default [y] if [EJECT]
  <<<Add the -s option to eject, this allows to eject SCSI-Devices and
usb-storage devices.
>>>
  }
 }
 config FBSPLASH boolean {
  prompt "fbsplash" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Shows splash image and progress bar on framebuffer device.
Can be used during boot phase of an embedded device. ~2kb.
Usage:
- use kernel option 'vga=xxx' or otherwise enable fb device.
- put somewhere fbsplash.cfg file and an image in .ppm format.
- $ setsid fbsplash [params] &
  -c: hide cursor
  -d /dev/fbN: framebuffer device (if not /dev/fb0)
  -s path_to_image_file (can be "-" for stdin)
  -i path_to_cfg_file (can be "-" for stdin)
  -f path_to_fifo (can be "-" for stdin)
- if you want to run it only in presence of kernel parameter:
  grep -q "fbsplash=on" </proc/cmdline && setsid fbsplash [params] &
- commands for fifo:
  "NN" (ASCII decimal number) - percentage to show on progress bar
  "exit" - well you guessed it
>>>
 }
 config FLASHCP boolean {
  prompt "flashcp" if []
  default [n] if []
 <<<The flashcp binary, inspired by mtd-utils as of git head 5eceb74f7.
This utility is used to copy images into a MTD device.
>>>
 }
 config FLASH_LOCK boolean {
  prompt "flash_lock" if []
  default [n] if []
 <<<The flash_lock binary from mtd-utils as of git head 5ec0c10d0. This
utility locks part or all of the flash device.
>>>
 }
 config FLASH_UNLOCK boolean {
  prompt "flash_unlock" if []
  default [n] if []
 <<<The flash_unlock binary from mtd-utils as of git head 5ec0c10d0. This
utility unlocks part or all of the flash device.
>>>
 }
 config FLASH_ERASEALL boolean {
  prompt "flash_eraseall" if []
  default [n] if []
 <<<The flash_eraseall binary from mtd-utils as of git head c4c6a59eb.
This utility is used to erase the whole MTD device.
>>>
 }
 config IONICE boolean {
  prompt "ionice" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Set/set program io scheduling class and priority
Requires kernel >= 2.6.13
>>>
 }
 config INOTIFYD boolean {
  prompt "inotifyd" if []
  default [n] if []
 <<<Simple inotify daemon. Reports filesystem changes. Requires
kernel >= 2.6.13
>>>
 }
 config LAST boolean {
  prompt "last" if [FEATURE_WTMP]
  default [y] if [FEATURE_WTMP]
 <<<'last' displays a list of the last users that logged into the system.
>>>
  choice boolean {
   prompt "Choose last implementation" if [LAST]
   default [FEATURE_LAST_FANCY] if [LAST]
  <<<>>>
   config FEATURE_LAST_SMALL boolean {
    prompt "small" if [<choice>]
   <<<This is a small version of last with just the basic set of
features.
>>>
   }
   config FEATURE_LAST_FANCY boolean {
    prompt "huge" if [<choice>]
   <<<'last' displays detailed information about the last users that
logged into the system (mimics sysvinit last). +900 bytes.>>>
   }
  }
 }
 config LESS boolean {
  prompt "less" if []
  default [y] if []
 <<<'less' is a pager, meaning that it displays text files. It possesses
a wide array of features, and is an improvement over 'more'.
>>>
  config FEATURE_LESS_MAXLINES integer {
   prompt "Max number of input lines less will try to eat" if [LESS]
   default [9999999] if [LESS]
  <<<>>>
  }
  config FEATURE_LESS_BRACKETS boolean {
   prompt "Enable bracket searching" if [LESS]
   default [y] if [LESS]
  <<<This option adds the capability to search for matching left and right
brackets, facilitating programming.
>>>
  }
  config FEATURE_LESS_FLAGS boolean {
   prompt "Enable extra flags" if [LESS]
   default [y] if [LESS]
  <<<The extra flags provided do the following:

The -M flag enables a more sophisticated status line.
The -m flag enables a simpler status line with a percentage.
>>>
  }
  config FEATURE_LESS_MARKS boolean {
   prompt "Enable marks" if [LESS]
   default [y] if [LESS]
  <<<Marks enable positions in a file to be stored for easy reference.
>>>
  }
  config FEATURE_LESS_REGEXP boolean {
   prompt "Enable regular expressions" if [LESS]
   default [y] if [LESS]
  <<<Enable regular expressions, allowing complex file searches.
>>>
  }
  config FEATURE_LESS_WINCH boolean {
   prompt "Enable automatic resizing on window size changes" if [LESS]
   default [y] if [LESS]
  <<<Makes less track window size changes.
>>>
  }
  config FEATURE_LESS_DASHCMD boolean {
   prompt "Enable flag changes ('-' command)" if [LESS]
   default [y] if [LESS]
  <<<This enables the ability to change command-line flags within
less itself ('-' keyboard command).
>>>
   config FEATURE_LESS_LINENUMS boolean {
    prompt "Enable dynamic switching of line numbers" if [FEATURE_LESS_DASHCMD]
    default [y] if [FEATURE_LESS_DASHCMD]
   <<<Enables "-N" command.
>>>
   }
  }
 }
 config HDPARM boolean {
  prompt "hdparm" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Get/Set hard drive parameters. Primarily intended for ATA
drives. Adds about 13k (or around 30k if you enable the
FEATURE_HDPARM_GET_IDENTITY option)....
>>>
  config FEATURE_HDPARM_GET_IDENTITY boolean {
   prompt "Support obtaining detailed information directly from drives" if [HDPARM]
   default [y] if [HDPARM]
  <<<Enables the -I and -i options to obtain detailed information
directly from drives about their capabilities and supported ATA
feature set. If no device name is specified, hdparm will read
identify data from stdin. Enabling this option will add about 16k...
>>>
  }
  config FEATURE_HDPARM_HDIO_SCAN_HWIF boolean {
   prompt "Register an IDE interface (DANGEROUS)" if [HDPARM]
   default [y] if [HDPARM]
  <<<Enables the 'hdparm -R' option to register an IDE interface.
This is dangerous stuff, so you should probably say N.
>>>
  }
  config FEATURE_HDPARM_HDIO_UNREGISTER_HWIF boolean {
   prompt "Un-register an IDE interface (DANGEROUS)" if [HDPARM]
   default [y] if [HDPARM]
  <<<Enables the 'hdparm -U' option to un-register an IDE interface.
This is dangerous stuff, so you should probably say N.
>>>
  }
  config FEATURE_HDPARM_HDIO_DRIVE_RESET boolean {
   prompt "Perform device reset (DANGEROUS)" if [HDPARM]
   default [y] if [HDPARM]
  <<<Enables the 'hdparm -w' option to perform a device reset.
This is dangerous stuff, so you should probably say N.
>>>
  }
  config FEATURE_HDPARM_HDIO_TRISTATE_HWIF boolean {
   prompt "Tristate device for hotswap (DANGEROUS)" if [HDPARM]
   default [y] if [HDPARM]
  <<<Enables the 'hdparm -x' option to tristate device for hotswap,
and the '-b' option to get/set bus state. This is dangerous
stuff, so you should probably say N.
>>>
  }
  config FEATURE_HDPARM_HDIO_GETSET_DMA boolean {
   prompt "Get/set using_dma flag" if [HDPARM]
   default [y] if [HDPARM]
  <<<Enables the 'hdparm -d' option to get/set using_dma flag.
>>>
  }
 }
 config MAKEDEVS boolean {
  prompt "makedevs" if []
  default [y] if []
 <<<'makedevs' is a utility used to create a batch of devices with
one command.

There are two choices for command line behaviour, the interface
as used by LEAF/Linux Router Project, or a device table file.

'leaf' is traditionally what busybox follows, it allows multiple
devices of a particluar type to be created per command.
e.g. /dev/hda[0-9]
Device properties are passed as command line arguments.

'table' reads device properties from a file or stdin, allowing
a batch of unrelated devices to be made with one command.
User/group names are allowed as an alternative to uid/gid.
>>>
  choice boolean {
   prompt "Choose makedevs behaviour" if [MAKEDEVS]
   default [FEATURE_MAKEDEVS_TABLE] if [MAKEDEVS]
  <<<>>>
   config FEATURE_MAKEDEVS_LEAF boolean {
    prompt "leaf" if [<choice>]
   <<<>>>
   }
   config FEATURE_MAKEDEVS_TABLE boolean {
    prompt "table" if [<choice>]
   <<<>>>
   }
  }
 }
 config MAN boolean {
  prompt "man" if []
  default [y] if []
 <<<Format and display manual pages.
>>>
 }
 config MICROCOM boolean {
  prompt "microcom" if []
  default [y] if []
 <<<The poor man's minicom utility for chatting with serial port devices.
>>>
 }
 config MOUNTPOINT boolean {
  prompt "mountpoint" if []
  default [y] if []
 <<<mountpoint checks if the directory is a mountpoint.
>>>
 }
 config MT boolean {
  prompt "mt" if []
  default [y] if []
 <<<mt is used to control tape devices. You can use the mt utility
to advance or rewind a tape past a specified number of archive
files on the tape.
>>>
 }
 config RAIDAUTORUN boolean {
  prompt "raidautorun" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<raidautorun tells the kernel md driver to
search and start RAID arrays.
>>>
 }
 config READAHEAD boolean {
  prompt "readahead" if [LFS && PLATFORM_LINUX]
  default [y] if [LFS && PLATFORM_LINUX]
 <<<Preload the files listed on the command line into RAM cache so that
subsequent reads on these files will not block on disk I/O.

This applet just calls the readahead(2) system call on each file.
It is mainly useful in system startup scripts to preload files
or executables before they are used. When used at the right time
(in particular when a CPU bound process is running) it can
significantly speed up system startup.

As readahead(2) blocks until each file has been read, it is best to
run this applet as a background job.
>>>
 }
 config RFKILL boolean {
  prompt "rfkill" if [PLATFORM_LINUX]
  default [n] if [PLATFORM_LINUX]
 <<<Enable/disable wireless devices.

rfkill list : list all wireless devices
rfkill list bluetooth : list all bluetooth devices
rfkill list 1 : list device corresponding to the given index
rfkill block|unblock wlan : block/unblock all wlan(wifi) devices
>>>
 }
 config RUNLEVEL boolean {
  prompt "runlevel" if []
  default [y] if []
 <<<find the current and previous system runlevel.

This applet uses utmp but does not rely on busybox supporing
utmp on purpose. It is used by e.g. emdebian via /etc/init.d/rc.
>>>
 }
 config RX boolean {
  prompt "rx" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Receive files using the Xmodem protocol.
>>>
 }
 config SETSID boolean {
  prompt "setsid" if []
  default [y] if []
 <<<setsid runs a program in a new session
>>>
 }
 config STRINGS boolean {
  prompt "strings" if []
  default [y] if []
 <<<strings prints the printable character sequences for each file
specified.
>>>
 }
 config TASKSET boolean {
  prompt "taskset" if []
  default [n] if []
 <<<Retrieve or set a processes's CPU affinity.
This requires sched_{g,s}etaffinity support in your libc.
>>>
  config FEATURE_TASKSET_FANCY boolean {
   prompt "Fancy output" if [TASKSET]
   default [y] if [TASKSET]
  <<<Add code for fancy output. This merely silences a compiler-warning
and adds about 135 Bytes. May be needed for machines with alot
of CPUs.
>>>
  }
 }
 config TIME boolean {
  prompt "time" if []
  default [y] if []
 <<<The time command runs the specified program with the given arguments.
When the command finishes, time writes a message to standard output
giving timing statistics about this program run.
>>>
 }
 config TIMEOUT boolean {
  prompt "timeout" if []
  default [y] if []
 <<<Runs a program and watches it. If it does not terminate in
specified number of seconds, it is sent a signal.
>>>
 }
 config TTYSIZE boolean {
  prompt "ttysize" if []
  default [y] if []
 <<<A replacement for "stty size". Unlike stty, can report only width,
only height, or both, in any order. It also does not complain on
error, but returns default 80x24.
Usage in shell scripts: width=`ttysize w`.
>>>
 }
 config VOLNAME boolean {
  prompt "volname" if []
  default [y] if []
 <<<Prints a CD-ROM volume name.
>>>
 }
 config WALL boolean {
  prompt "wall" if []
  default [y] if []
 <<<Write a message to all users that are logged in.
>>>
 }
 config WATCHDOG boolean {
  prompt "watchdog" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<The watchdog utility is used with hardware or software watchdog
device drivers. It opens the specified watchdog device special file
and periodically writes a magic character to the device. If the
watchdog applet ever fails to write the magic character within a
certain amount of time, the watchdog device assumes the system has
hung, and will cause the hardware to reboot.
>>>
 }
}
menu "Networking Utilities" {
<<<>>>
 config NBDCLIENT boolean {
  prompt "nbd-client" if []
  default [y] if []
 <<<Network block device client>>>
 }
 config NC boolean {
  prompt "nc" if []
  default [y] if []
 <<<A simple Unix utility which reads and writes data across network
connections.
>>>
  config NC_SERVER boolean {
   prompt "Netcat server options (-l)" if [NC]
   default [y] if [NC]
  <<<Allow netcat to act as a server.
>>>
  }
  config NC_EXTRA boolean {
   prompt "Netcat extensions (-eiw and filename)" if [NC]
   default [y] if [NC]
  <<<Add -e (support for executing the rest of the command line after
making or receiving a successful connection), -i (delay interval for
lines sent), -w (timeout for initial connection).
>>>
  }
  config NC_110_COMPAT boolean {
   prompt "Netcat 1.10 compatibility (+2.5k)" if [NC]
   default [n] if [NC]
  <<<This option makes nc closely follow original nc-1.10.
The code is about 2.5k bigger. It enables
-s ADDR, -n, -u, -v, -o FILE, -z options, but loses
busybox-specific extensions: -f FILE and -ll.
>>>
  }
 }
 config FEATURE_IPV6 boolean {
  prompt "Enable IPv6 support" if []
  default [y] if []
 <<<Enable IPv6 support in busybox.
This adds IPv6 support in the networking applets.
>>>
 }
 config FEATURE_UNIX_LOCAL boolean {
  prompt "Enable Unix domain socket support (usually not needed)" if []
  default [n] if []
 <<<Enable Unix domain socket support in all busybox networking
applets.  Address of the form local:/path/to/unix/socket
will be recognized.

This extension is almost never used in real world usage.
You most likely want to say N.
>>>
 }
 config FEATURE_PREFER_IPV4_ADDRESS boolean {
  prompt "Prefer IPv4 addresses from DNS queries" if [FEATURE_IPV6]
  default [y] if [FEATURE_IPV6]
 <<<Use IPv4 address of network host if it has one.

If this option is off, the first returned address will be used.
This may cause problems when your DNS server is IPv6-capable and
is returning IPv6 host addresses too. If IPv6 address
precedes IPv4 one in DNS reply, busybox network applets
(e.g. wget) will use IPv6 address. On an IPv6-incapable host
or network applets will fail to connect to the host
using IPv6 address.
>>>
 }
 config VERBOSE_RESOLUTION_ERRORS boolean {
  prompt "Verbose resolution errors" if []
  default [n] if []
 <<<Enable if you are not satisfied with simplistic
"can't resolve 'hostname.com'" and want to know more.
This may increase size of your executable a bit.
>>>
 }
 config ARP boolean {
  prompt "arp" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Manipulate the system ARP cache.
>>>
 }
 config ARPING boolean {
  prompt "arping" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Ping hosts by ARP packets.
>>>
 }
 config BRCTL boolean {
  prompt "brctl" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Manage ethernet bridges.
Supports addbr/delbr and addif/delif.
>>>
  config FEATURE_BRCTL_FANCY boolean {
   prompt "Fancy options" if [BRCTL]
   default [y] if [BRCTL]
  <<<Add support for extended option like:
  setageing, setfd, sethello, setmaxage,
  setpathcost, setportprio, setbridgeprio,
  stp
This adds about 600 bytes.
>>>
   config FEATURE_BRCTL_SHOW boolean {
    prompt "Support show, showmac and showstp" if [BRCTL && FEATURE_BRCTL_FANCY]
    default [y] if [BRCTL && FEATURE_BRCTL_FANCY]
   <<<Add support for option which prints the current config:
  showmacs, showstp, show
>>>
   }
  }
 }
 config DNSD boolean {
  prompt "dnsd" if []
  default [y] if []
 <<<Small and static DNS server daemon.
>>>
 }
 config ETHER_WAKE boolean {
  prompt "ether-wake" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Send a magic packet to wake up sleeping machines.
>>>
 }
 config FAKEIDENTD boolean {
  prompt "fakeidentd" if []
  default [y] if []
  select FEATURE_SYSLOG if []
 <<<fakeidentd listens on the ident port and returns a predefined
fake value on any query.
>>>
 }
 config FTPD boolean {
  prompt "ftpd" if []
  default [y] if []
 <<<simple FTP daemon. You have to run it via inetd.
>>>
  config FEATURE_FTP_WRITE boolean {
   prompt "Enable upload commands" if [FTPD]
   default [y] if [FTPD]
  <<<Enable all kinds of FTP upload commands (-w option)
>>>
  }
  config FEATURE_FTPD_ACCEPT_BROKEN_LIST boolean {
   prompt "Enable workaround for RFC-violating clients" if [FTPD]
   default [y] if [FTPD]
  <<<Some ftp clients (among them KDE's Konqueror) issue illegal
"LIST -l" requests. This option works around such problems.
It might prevent you from listing files starting with "-" and
it increases the code size by ~40 bytes.
Most other ftp servers seem to behave similar to this.
>>>
  }
 }
 config FTPGET boolean {
  prompt "ftpget" if []
  default [y] if []
 <<<Retrieve a remote file via FTP.
>>>
 }
 config FTPPUT boolean {
  prompt "ftpput" if []
  default [y] if []
 <<<Store a remote file via FTP.
>>>
  config FEATURE_FTPGETPUT_LONG_OPTIONS boolean {
   prompt "Enable long options in ftpget/ftpput" if [LONG_OPTS && (FTPGET || FTPPUT)]
   default [y] if [LONG_OPTS && (FTPGET || FTPPUT)]
  <<<Support long options for the ftpget/ftpput applet.
>>>
  }
 }
 config HOSTNAME boolean {
  prompt "hostname" if []
  default [y] if []
 <<<Show or set the system's host name.
>>>
 }
 config HTTPD boolean {
  prompt "httpd" if []
  default [y] if []
 <<<Serve web pages via an HTTP server.
>>>
  config FEATURE_HTTPD_RANGES boolean {
   prompt "Support 'Ranges:' header" if [HTTPD]
   default [y] if [HTTPD]
  <<<Makes httpd emit "Accept-Ranges: bytes" header and understand
"Range: bytes=NNN-[MMM]" header. Allows for resuming interrupted
downloads, seeking in multimedia players etc.
>>>
  }
  config FEATURE_HTTPD_USE_SENDFILE boolean {
   prompt "Use sendfile system call" if [HTTPD]
   default [y] if [HTTPD]
  <<<When enabled, httpd will use the kernel sendfile() function
instead of read/write loop.
>>>
  }
  config FEATURE_HTTPD_SETUID boolean {
   prompt "Enable -u <user> option" if [HTTPD]
   default [y] if [HTTPD]
  <<<This option allows the server to run as a specific user
rather than defaulting to the user that starts the server.
Use of this option requires special privileges to change to a
different user.
>>>
  }
  config FEATURE_HTTPD_BASIC_AUTH boolean {
   prompt "Enable Basic http Authentication" if [HTTPD]
   default [y] if [HTTPD]
  <<<Utilizes password settings from /etc/httpd.conf for basic
authentication on a per url basis.
>>>
   config FEATURE_HTTPD_AUTH_MD5 boolean {
    prompt "Support MD5 crypted passwords for http Authentication" if [FEATURE_HTTPD_BASIC_AUTH]
    default [y] if [FEATURE_HTTPD_BASIC_AUTH]
   <<<Enables basic per URL authentication from /etc/httpd.conf
using md5 passwords.
>>>
   }
  }
  config FEATURE_HTTPD_CGI boolean {
   prompt "Support Common Gateway Interface (CGI)" if [HTTPD]
   default [y] if [HTTPD]
  <<<This option allows scripts and executables to be invoked
when specific URLs are requested.
>>>
   config FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR boolean {
    prompt "Support for running scripts through an interpreter" if [FEATURE_HTTPD_CGI]
    default [y] if [FEATURE_HTTPD_CGI]
   <<<This option enables support for running scripts through an
interpreter. Turn this on if you want PHP scripts to work
properly. You need to supply an additional line in your httpd
config file:
*.php:/path/to/your/php
>>>
   }
   config FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV boolean {
    prompt "Set REMOTE_PORT environment variable for CGI" if [FEATURE_HTTPD_CGI]
    default [y] if [FEATURE_HTTPD_CGI]
   <<<Use of this option can assist scripts in generating
references that contain a unique port number.
>>>
   }
  }
  config FEATURE_HTTPD_ENCODE_URL_STR boolean {
   prompt "Enable -e option (useful for CGIs written as shell scripts)" if [HTTPD]
   default [y] if [HTTPD]
  <<<This option allows html encoding of arbitrary strings for display
by the browser. Output goes to stdout.
For example, httpd -e "<Hello World>" produces
"&#60Hello&#32World&#62".
>>>
  }
  config FEATURE_HTTPD_ERROR_PAGES boolean {
   prompt "Support for custom error pages" if [HTTPD]
   default [y] if [HTTPD]
  <<<This option allows you to define custom error pages in
the configuration file instead of the default HTTP status
error pages. For instance, if you add the line:
      E404:/path/e404.html
in the config file, the server will respond the specified
'/path/e404.html' file instead of the terse '404 NOT FOUND'
message.
>>>
  }
  config FEATURE_HTTPD_PROXY boolean {
   prompt "Support for reverse proxy" if [HTTPD]
   default [y] if [HTTPD]
  <<<This option allows you to define URLs that will be forwarded
to another HTTP server. To setup add the following line to the
configuration file
      P:/url/:http://hostname[:port]/new/path/
Then a request to /url/myfile will be forwarded to
http://hostname[:port]/new/path/myfile.
>>>
  }
  config FEATURE_HTTPD_GZIP boolean {
   prompt "Support for GZIP content encoding" if [HTTPD]
   default [y] if [HTTPD]
  <<<Makes httpd send files using GZIP content encoding if the
client supports it and a pre-compressed <file>.gz exists.
>>>
  }
 }
 config IFCONFIG boolean {
  prompt "ifconfig" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Ifconfig is used to configure the kernel-resident network interfaces.
>>>
  config FEATURE_IFCONFIG_STATUS boolean {
   prompt "Enable status reporting output (+7k)" if [IFCONFIG]
   default [y] if [IFCONFIG]
  <<<If ifconfig is called with no arguments it will display the status
of the currently active interfaces.
>>>
  }
  config FEATURE_IFCONFIG_SLIP boolean {
   prompt "Enable slip-specific options \"keepalive\" and \"outfill\"" if [IFCONFIG]
   default [y] if [IFCONFIG]
  <<<Allow "keepalive" and "outfill" support for SLIP. If you're not
planning on using serial lines, leave this unchecked.
>>>
  }
  config FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ boolean {
   prompt "Enable options \"mem_start\", \"io_addr\", and \"irq\"" if [IFCONFIG]
   default [y] if [IFCONFIG]
  <<<Allow the start address for shared memory, start address for I/O,
and/or the interrupt line used by the specified device.
>>>
  }
  config FEATURE_IFCONFIG_HW boolean {
   prompt "Enable option \"hw\" (ether only)" if [IFCONFIG]
   default [y] if [IFCONFIG]
  <<<Set the hardware address of this interface, if the device driver
supports  this  operation. Currently, we only support the 'ether'
class.
>>>
  }
  config FEATURE_IFCONFIG_BROADCAST_PLUS boolean {
   prompt "Set the broadcast automatically" if [IFCONFIG]
   default [y] if [IFCONFIG]
  <<<Setting this will make ifconfig attempt to find the broadcast
automatically if the value '+' is used.
>>>
  }
 }
 config IFENSLAVE boolean {
  prompt "ifenslave" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Userspace application to bind several interfaces
to a logical interface (use with kernel bonding driver).
>>>
 }
 config IFPLUGD boolean {
  prompt "ifplugd" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Network interface plug detection daemon.
>>>
 }
 config IFUPDOWN boolean {
  prompt "ifupdown" if []
  default [y] if []
 <<<Activate or deactivate the specified interfaces. This applet makes
use of either "ifconfig" and "route" or the "ip" command to actually
configure network interfaces. Therefore, you will probably also want
to enable either IFCONFIG and ROUTE, or enable
FEATURE_IFUPDOWN_IP and the various IP options. Of
course you could use non-busybox versions of these programs, so
against my better judgement (since this will surely result in plenty
of support questions on the mailing list), I do not force you to
enable these additional options. It is up to you to supply either
"ifconfig", "route" and "run-parts" or the "ip" command, either
via busybox or via standalone utilities.
>>>
  config IFUPDOWN_IFSTATE_PATH string {
   prompt "Absolute path to ifstate file" if [IFUPDOWN]
   default ["/var/run/ifstate"] if [IFUPDOWN]
  <<<ifupdown keeps state information in a file called ifstate.
Typically it is located in /var/run/ifstate, however
some distributions tend to put it in other places
(debian, for example, uses /etc/network/run/ifstate).
This config option defines location of ifstate.
>>>
  }
  config FEATURE_IFUPDOWN_IP boolean {
   prompt "Use ip applet" if [IFUPDOWN]
   default [y] if [IFUPDOWN]
  <<<Use the iproute "ip" command to implement "ifup" and "ifdown", rather
than the default of using the older 'ifconfig' and 'route' utilities.
>>>
   config FEATURE_IFUPDOWN_IP_BUILTIN boolean {
    prompt "Use busybox ip applet" if [FEATURE_IFUPDOWN_IP && PLATFORM_LINUX]
    default [y] if [FEATURE_IFUPDOWN_IP && PLATFORM_LINUX]
    select IP if [FEATURE_IFUPDOWN_IP && PLATFORM_LINUX]
    select FEATURE_IP_ADDRESS if [FEATURE_IFUPDOWN_IP && PLATFORM_LINUX]
    select FEATURE_IP_LINK if [FEATURE_IFUPDOWN_IP && PLATFORM_LINUX]
    select FEATURE_IP_ROUTE if [FEATURE_IFUPDOWN_IP && PLATFORM_LINUX]
   <<<Use the busybox iproute "ip" applet to implement "ifupdown".

If left disabled, you must install the full-blown iproute2
utility or the  "ifup" and "ifdown" applets will not work.
>>>
   }
   config FEATURE_IFUPDOWN_IFCONFIG_BUILTIN boolean {
    prompt "Use busybox ifconfig and route applets" if [IFUPDOWN && !FEATURE_IFUPDOWN_IP]
    default [n] if [IFUPDOWN && !FEATURE_IFUPDOWN_IP]
    select IFCONFIG if [IFUPDOWN && !FEATURE_IFUPDOWN_IP]
    select ROUTE if [IFUPDOWN && !FEATURE_IFUPDOWN_IP]
   <<<Use the busybox iproute "ifconfig" and "route" applets to
implement the "ifup" and "ifdown" utilities.

If left disabled, you must install the full-blown ifconfig
and route utilities, or the  "ifup" and "ifdown" applets will not
work.
>>>
   }
  }
  config FEATURE_IFUPDOWN_IPV4 boolean {
   prompt "Support for IPv4" if [IFUPDOWN]
   default [y] if [IFUPDOWN]
  <<<If you want ifup/ifdown to talk IPv4, leave this on.
>>>
  }
  config FEATURE_IFUPDOWN_IPV6 boolean {
   prompt "Support for IPv6" if [IFUPDOWN && FEATURE_IPV6]
   default [y] if [IFUPDOWN && FEATURE_IPV6]
  <<<If you need support for IPv6, turn this option on.
>>>
  }
  config FEATURE_IFUPDOWN_MAPPING boolean {
   prompt "Enable mapping support" if [IFUPDOWN]
   default [y] if [IFUPDOWN]
  <<<This enables support for the "mapping" stanza, unless you have
a weird network setup you don't need it.
>>>
  }
  config FEATURE_IFUPDOWN_EXTERNAL_DHCP boolean {
   prompt "Support for external dhcp clients" if [IFUPDOWN]
   default [n] if [IFUPDOWN]
  <<<This enables support for the external dhcp clients. Clients are
tried in the following order: dhcpcd, dhclient, pump and udhcpc.
Otherwise, if udhcpc applet is enabled, it is used.
Otherwise, ifup/ifdown will have no support for DHCP.
>>>
  }
 }
 config INETD boolean {
  prompt "inetd" if []
  default [y] if []
  select FEATURE_SYSLOG if []
 <<<Internet superserver daemon
>>>
  config FEATURE_INETD_SUPPORT_BUILTIN_ECHO boolean {
   prompt "Support echo service" if [INETD]
   default [y] if [INETD]
  <<<Echo received data internal inetd service
>>>
  }
  config FEATURE_INETD_SUPPORT_BUILTIN_DISCARD boolean {
   prompt "Support discard service" if [INETD]
   default [y] if [INETD]
  <<<Internet /dev/null internal inetd service
>>>
  }
  config FEATURE_INETD_SUPPORT_BUILTIN_TIME boolean {
   prompt "Support time service" if [INETD]
   default [y] if [INETD]
  <<<Return 32 bit time since 1900 internal inetd service
>>>
  }
  config FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME boolean {
   prompt "Support daytime service" if [INETD]
   default [y] if [INETD]
  <<<Return human-readable time internal inetd service
>>>
  }
  config FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN boolean {
   prompt "Support chargen service" if [INETD]
   default [y] if [INETD]
  <<<Familiar character generator internal inetd service
>>>
  }
  config FEATURE_INETD_RPC boolean {
   prompt "Support RPC services" if [INETD]
   default [y] if [INETD]
   select FEATURE_HAVE_RPC if [INETD]
  <<<Support Sun-RPC based services
>>>
  }
 }
 config IP boolean {
  prompt "ip" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<The "ip" applet is a TCP/IP interface configuration and routing
utility. You generally don't need "ip" to use busybox with
TCP/IP.
>>>
  config FEATURE_IP_ADDRESS boolean {
   prompt "ip address" if [IP]
   default [y] if [IP]
  <<<Address manipulation support for the "ip" applet.
>>>
  }
  config FEATURE_IP_LINK boolean {
   prompt "ip link" if [IP]
   default [y] if [IP]
  <<<Configure network devices with "ip".
>>>
  }
  config FEATURE_IP_ROUTE boolean {
   prompt "ip route" if [IP]
   default [y] if [IP]
  <<<Add support for routing table management to "ip".
>>>
  }
  config FEATURE_IP_TUNNEL boolean {
   prompt "ip tunnel" if [IP]
   default [y] if [IP]
  <<<Add support for tunneling commands to "ip".
>>>
  }
  config FEATURE_IP_RULE boolean {
   prompt "ip rule" if [IP]
   default [y] if [IP]
  <<<Add support for rule commands to "ip".
>>>
  }
  config FEATURE_IP_SHORT_FORMS boolean {
   prompt "Support short forms of ip commands" if [IP]
   default [y] if [IP]
  <<<Also support short-form of ip <OBJECT> commands:
ip addr   -> ipaddr
ip link   -> iplink
ip route  -> iproute
ip tunnel -> iptunnel
ip rule   -> iprule

Say N unless you desparately need the short form of the ip
object commands.
>>>
  }
  config FEATURE_IP_RARE_PROTOCOLS boolean {
   prompt "Support displaying rarely used link types" if [IP]
   default [n] if [IP]
  <<<If you are not going to use links of type "frad", "econet",
"bif" etc, you probably don't need to enable this.
Ethernet, wireless, infrared, ppp/slip, ip tunnelling
link types are supported without this option selected.
>>>
  }
 }
 config IPADDR boolean {
  default [y] if [FEATURE_IP_SHORT_FORMS && FEATURE_IP_ADDRESS]
 <<<>>>
 }
 config IPLINK boolean {
  default [y] if [FEATURE_IP_SHORT_FORMS && FEATURE_IP_LINK]
 <<<>>>
 }
 config IPROUTE boolean {
  default [y] if [FEATURE_IP_SHORT_FORMS && FEATURE_IP_ROUTE]
 <<<>>>
 }
 config IPTUNNEL boolean {
  default [y] if [FEATURE_IP_SHORT_FORMS && FEATURE_IP_TUNNEL]
 <<<>>>
 }
 config IPRULE boolean {
  default [y] if [FEATURE_IP_SHORT_FORMS && FEATURE_IP_RULE]
 <<<>>>
 }
 config IPCALC boolean {
  prompt "ipcalc" if []
  default [y] if []
 <<<ipcalc takes an IP address and netmask and calculates the
resulting broadcast, network, and host range.
>>>
  config FEATURE_IPCALC_FANCY boolean {
   prompt "Fancy IPCALC, more options, adds 1 kbyte" if [IPCALC]
   default [y] if [IPCALC]
  <<<Adds the options hostname, prefix and silent to the output of
"ipcalc".
>>>
  }
  config FEATURE_IPCALC_LONG_OPTIONS boolean {
   prompt "Enable long options" if [IPCALC && LONG_OPTS]
   default [y] if [IPCALC && LONG_OPTS]
  <<<Support long options for the ipcalc applet.
>>>
  }
 }
 config NAMEIF boolean {
  prompt "nameif" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
  select FEATURE_SYSLOG if [PLATFORM_LINUX]
 <<<nameif is used to rename network interface by its MAC address.
Renamed interfaces MUST be in the down state.
It is possible to use a file (default: /etc/mactab)
with list of new interface names and MACs.
Maximum interface name length: IFNAMSIZ = 16
File fields are separated by space or tab.
File format:
# Comment
new_interface_name    XX:XX:XX:XX:XX:XX
>>>
  config FEATURE_NAMEIF_EXTENDED boolean {
   prompt "Extended nameif" if [NAMEIF]
   default [y] if [NAMEIF]
  <<<This extends the nameif syntax to support the bus_info and driver
checks. The syntax is compatible to the normal nameif.
File format:
  new_interface_name  driver=asix bus=usb-0000:00:08.2-3
  new_interface_name  bus=usb-0000:00:08.2-3 00:80:C8:38:91:B5
  new_interface_name  mac=00:80:C8:38:91:B5
  new_interface_name  00:80:C8:38:91:B5
>>>
  }
 }
 config NETSTAT boolean {
  prompt "netstat" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<netstat prints information about the Linux networking subsystem.
>>>
  config FEATURE_NETSTAT_WIDE boolean {
   prompt "Enable wide netstat output" if [NETSTAT]
   default [y] if [NETSTAT]
  <<<Add support for wide columns. Useful when displaying IPv6 addresses
(-W option).
>>>
  }
  config FEATURE_NETSTAT_PRG boolean {
   prompt "Enable PID/Program name output" if [NETSTAT]
   default [y] if [NETSTAT]
  <<<Add support for -p flag to print out PID and program name.
+700 bytes of code.
>>>
  }
 }
 config NSLOOKUP boolean {
  prompt "nslookup" if []
  default [y] if []
 <<<nslookup is a tool to query Internet name servers.
>>>
 }
 config NTPD boolean {
  prompt "ntpd" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<The NTP client/server daemon.
>>>
  config FEATURE_NTPD_SERVER boolean {
   prompt "Make ntpd usable as a NTP server" if [NTPD]
   default [y] if [NTPD]
  <<<Make ntpd usable as a NTP server. If you disable this option
ntpd will be usable only as a NTP client.
>>>
  }
 }
 config PING boolean {
  prompt "ping" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<ping uses the ICMP protocol's mandatory ECHO_REQUEST datagram to
elicit an ICMP ECHO_RESPONSE from a host or gateway.
>>>
  config PING6 boolean {
   prompt "ping6" if [FEATURE_IPV6 && PING]
   default [y] if [FEATURE_IPV6 && PING]
  <<<This will give you a ping that can talk IPv6.
>>>
  }
  config FEATURE_FANCY_PING boolean {
   prompt "Enable fancy ping output" if [PING]
   default [y] if [PING]
  <<<Make the output from the ping applet include statistics, and at the
same time provide full support for ICMP packets.
>>>
  }
 }
 config PSCAN boolean {
  prompt "pscan" if []
  default [y] if []
 <<<Simple network port scanner.
>>>
 }
 config ROUTE boolean {
  prompt "route" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Route displays or manipulates the kernel's IP routing tables.
>>>
 }
 config SLATTACH boolean {
  prompt "slattach" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<slattach is a small utility to attach network interfaces to serial
lines.
>>>
 }
 config TCPSVD boolean {
  prompt "tcpsvd" if []
  default [y] if []
 <<<tcpsvd listens on a TCP port and runs a program for each new
connection.
>>>
 }
 config TELNET boolean {
  prompt "telnet" if []
  default [y] if []
 <<<Telnet is an interface to the TELNET protocol, but is also commonly
used to test other simple protocols.
>>>
  config FEATURE_TELNET_TTYPE boolean {
   prompt "Pass TERM type to remote host" if [TELNET]
   default [y] if [TELNET]
  <<<Setting this option will forward the TERM environment variable to the
remote host you are connecting to. This is useful to make sure that
things like ANSI colors and other control sequences behave.
>>>
  }
  config FEATURE_TELNET_AUTOLOGIN boolean {
   prompt "Pass USER type to remote host" if [TELNET]
   default [y] if [TELNET]
  <<<Setting this option will forward the USER environment variable to the
remote host you are connecting to. This is useful when you need to
log into a machine without telling the username (autologin). This
option enables `-a' and `-l USER' arguments.
>>>
  }
 }
 config TELNETD boolean {
  prompt "telnetd" if []
  default [y] if []
  select FEATURE_SYSLOG if []
 <<<A daemon for the TELNET protocol, allowing you to log onto the host
running the daemon. Please keep in mind that the TELNET protocol
sends passwords in plain text. If you can't afford the space for an
SSH daemon and you trust your network, you may say 'y' here. As a
more secure alternative, you should seriously consider installing the
very small Dropbear SSH daemon instead:
      http://matt.ucc.asn.au/dropbear/dropbear.html

Note that for busybox telnetd to work you need several things:
First of all, your kernel needs:
        UNIX98_PTYS=y
        DEVPTS_FS=y

Next, you need a /dev/pts directory on your root filesystem:

        $ ls -ld /dev/pts
        drwxr-xr-x  2 root root 0 Sep 23 13:21 /dev/pts/

Next you need the pseudo terminal master multiplexer /dev/ptmx:

        $ ls -la /dev/ptmx
        crw-rw-rw-  1 root tty 5, 2 Sep 23 13:55 /dev/ptmx

Any /dev/ttyp[0-9]* files you may have can be removed.
Next, you need to mount the devpts filesystem on /dev/pts using:

        mount -t devpts devpts /dev/pts

You need to be sure that busybox has LOGIN and
FEATURE_SUID enabled. And finally, you should make
certain that Busybox has been installed setuid root:

      chown root.root /bin/busybox
      chmod 4755 /bin/busybox

with all that done, telnetd _should_ work....

>>>
  config FEATURE_TELNETD_STANDALONE boolean {
   prompt "Support standalone telnetd (not inetd only)" if [TELNETD]
   default [y] if [TELNETD]
  <<<Selecting this will make telnetd able to run standalone.
>>>
   config FEATURE_TELNETD_INETD_WAIT boolean {
    prompt "Support -w SEC option (inetd wait mode)" if [FEATURE_TELNETD_STANDALONE]
    default [y] if [FEATURE_TELNETD_STANDALONE]
   <<<This option allows you to run telnetd in "inet wait" mode.
Example inetd.conf line (note "wait", not usual "nowait"):

telnet stream tcp wait root /bin/telnetd telnetd -w10

In this example, inetd passes _listening_ socket_ as fd 0
to telnetd when connection appears.
telnetd will wait for connections until all existing
connections are closed, and no new connections
appear during 10 seconds. Then it exits, and inetd continues
to listen for new connections.

This option is rarely used. "tcp nowait" is much more usual
way of running tcp services, including telnetd.
You most probably want to say N here.
>>>
   }
  }
 }
 config TFTP boolean {
  prompt "tftp" if []
  default [y] if []
 <<<This enables the Trivial File Transfer Protocol client program. TFTP
is usually used for simple, small transfers such as a root image
for a network-enabled bootloader.
>>>
 }
 config TFTPD boolean {
  prompt "tftpd" if []
  default [y] if []
 <<<This enables the Trivial File Transfer Protocol server program.
It expects that stdin is a datagram socket and a packet
is already pending on it. It will exit after one transfer.
In other words: it should be run from inetd in nowait mode,
or from udpsvd. Example: "udpsvd -E 0 69 tftpd DIR"
>>>
  config FEATURE_TFTP_GET boolean {
   prompt "Enable 'tftp get' and/or tftpd upload code" if [TFTP || TFTPD]
   default [y] if [TFTP || TFTPD]
  <<<Add support for the GET command within the TFTP client. This allows
a client to retrieve a file from a TFTP server.
Also enable upload support in tftpd, if tftpd is selected.

Note: this option does _not_ make tftpd capable of download
(the usual operation people need from it)!
>>>
  }
  config FEATURE_TFTP_PUT boolean {
   prompt "Enable 'tftp put' and/or tftpd download code" if [TFTP || TFTPD]
   default [y] if [TFTP || TFTPD]
  <<<Add support for the PUT command within the TFTP client. This allows
a client to transfer a file to a TFTP server.
Also enable download support in tftpd, if tftpd is selected.
>>>
  }
  config FEATURE_TFTP_BLOCKSIZE boolean {
   prompt "Enable 'blksize' and 'tsize' protocol options" if [TFTP || TFTPD]
   default [y] if [TFTP || TFTPD]
  <<<Allow tftp to specify block size, and tftpd to understand
"blksize" and "tsize" options.
>>>
   config FEATURE_TFTP_PROGRESS_BAR boolean {
    prompt "Enable tftp progress meter" if [TFTP && FEATURE_TFTP_BLOCKSIZE]
    default [y] if [TFTP && FEATURE_TFTP_BLOCKSIZE]
   <<<Show progress bar.
>>>
   }
  }
  config TFTP_DEBUG boolean {
   prompt "Enable debug" if [TFTP || TFTPD]
   default [n] if [TFTP || TFTPD]
  <<<Make tftp[d] print debugging messages on stderr.
This is useful if you are diagnosing a bug in tftp[d].
>>>
  }
 }
 config TRACEROUTE boolean {
  prompt "traceroute" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Utility to trace the route of IP packets.
>>>
  config TRACEROUTE6 boolean {
   prompt "traceroute6" if [FEATURE_IPV6 && TRACEROUTE]
   default [y] if [FEATURE_IPV6 && TRACEROUTE]
  <<<Utility to trace the route of IPv6 packets.
>>>
  }
  config FEATURE_TRACEROUTE_VERBOSE boolean {
   prompt "Enable verbose output" if [TRACEROUTE]
   default [y] if [TRACEROUTE]
  <<<Add some verbosity to traceroute. This includes among other things
hostnames and ICMP response types.
>>>
  }
  config FEATURE_TRACEROUTE_SOURCE_ROUTE boolean {
   prompt "Enable loose source route" if [TRACEROUTE]
   default [n] if [TRACEROUTE]
  <<<Add option to specify a loose source route gateway
(8 maximum).
>>>
  }
  config FEATURE_TRACEROUTE_USE_ICMP boolean {
   prompt "Use ICMP instead of UDP" if [TRACEROUTE]
   default [n] if [TRACEROUTE]
  <<<Add option -I to use ICMP ECHO instead of UDP datagrams.
>>>
  }
 }
 config TUNCTL boolean {
  prompt "tunctl" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<tunctl creates or deletes tun devices.
>>>
  config FEATURE_TUNCTL_UG boolean {
   prompt "Support owner:group assignment" if [TUNCTL]
   default [y] if [TUNCTL]
  <<<Allow to specify owner and group of newly created interface.
340 bytes of pure bloat. Say no here.
>>>
  }
 }
 config UDHCPD boolean {
  prompt "udhcp server (udhcpd)" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<udhcpd is a DHCP server geared primarily toward embedded systems,
while striving to be fully functional and RFC compliant.
>>>
  config DHCPRELAY boolean {
   prompt "dhcprelay" if [UDHCPD]
   default [y] if [UDHCPD]
  <<<dhcprelay listens for dhcp requests on one or more interfaces
and forwards these requests to a different interface or dhcp
server.
>>>
  }
  config DUMPLEASES boolean {
   prompt "Lease display utility (dumpleases)" if [UDHCPD]
   default [y] if [UDHCPD]
  <<<dumpleases displays the leases written out by the udhcpd server.
Lease times are stored in the file by time remaining in lease, or
by the absolute time that it expires in seconds from epoch.
>>>
  }
  config FEATURE_UDHCPD_WRITE_LEASES_EARLY boolean {
   prompt "Rewrite the lease file at every new acknowledge" if [UDHCPD]
   default [y] if [UDHCPD]
  <<<If selected, udhcpd will write a new file with leases every
time a new lease has been accepted, thus eliminating the need
to send SIGUSR1 for the initial writing or updating. Any timed
rewriting remains undisturbed
>>>
  }
  config DHCPD_LEASES_FILE string {
   prompt "Absolute path to lease file" if [UDHCPD]
   default ["/var/lib/misc/udhcpd.leases"] if [UDHCPD]
  <<<udhcpd stores addresses in a lease file. This is the absolute path
of the file. Normally it is safe to leave it untouched.
>>>
  }
 }
 config UDHCPC boolean {
  prompt "udhcp client (udhcpc)" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<udhcpc is a DHCP client geared primarily toward embedded systems,
while striving to be fully functional and RFC compliant.

The udhcp client negotiates a lease with the DHCP server and
runs a script when a lease is obtained or lost.
>>>
  config FEATURE_UDHCPC_ARPING boolean {
   prompt "Verify that the offered address is free, using ARP ping" if [UDHCPC]
   default [y] if [UDHCPC]
  <<<If selected, udhcpc will send ARP probes and make sure
the offered address is really not in use by anyone. The client
will DHCPDECLINE the offer if the address is in use,
and restart the discover process.
>>>
  }
 }
 config FEATURE_UDHCP_PORT boolean {
  prompt "Enable '-P port' option for udhcpd and udhcpc" if [UDHCPD || UDHCPC]
  default [y] if [UDHCPD || UDHCPC]
 <<<At the cost of ~300 bytes, enables -P port option.
This feature is typically not needed.
>>>
 }
 config UDHCP_DEBUG integer {
  prompt "Maximum verbosity level for udhcp applets (0..9)" if [UDHCPD || UDHCPC || DHCPRELAY]
  default [9] if [UDHCPD || UDHCPC || DHCPRELAY]
  range [0 9] if [UDHCPD || UDHCPC || DHCPRELAY]
 <<<Verbosity can be increased with multiple -v options.
This option controls how high it can be cranked up.

Bigger values result in bigger code. Levels above 1
are very verbose and useful for debugging only.
>>>
 }
 config FEATURE_UDHCP_RFC3397 boolean {
  prompt "Support for RFC3397 domain search (experimental)" if [UDHCPD || UDHCPC]
  default [y] if [UDHCPD || UDHCPC]
 <<<If selected, both client and server will support passing of domain
search lists via option 119, specified in RFC 3397,
and SIP servers option 120, specified in RFC 3361.
>>>
 }
 config UDHCPC_DEFAULT_SCRIPT string {
  prompt "Absolute path to config script" if [UDHCPC]
  default ["/usr/share/udhcpc/default.script"] if [UDHCPC]
 <<<This script is called after udhcpc receives an answer. See
examples/udhcp for a working example. Normally it is safe
to leave this untouched.
>>>
 }
 config UDHCPC_SLACK_FOR_BUGGY_SERVERS integer {
  prompt "DHCP options slack buffer size" if [UDHCPD || UDHCPC]
  default [80] if [UDHCPD || UDHCPC]
  range [0 924] if [UDHCPD || UDHCPC]
 <<<Some buggy DHCP servers send DHCP offer packets with option
field larger than we expect (which might also be considered a
buffer overflow attempt). These packets are normally discarded.
If circumstances beyond your control force you to support such
servers, this may help. The upper limit (924) makes dhcpc accept
even 1500 byte packets (maximum-sized ethernet packets).

This option does not make dhcp[cd] emit non-standard
sized packets.

Known buggy DHCP servers:
3Com OfficeConnect Remote 812 ADSL Router:
  seems to confuse maximum allowed UDP packet size with
  maximum size of entire IP packet, and sends packets which are
  28 bytes too large.
Seednet (ISP) VDSL: sends packets 2 bytes too large.
>>>
 }
 config IFUPDOWN_UDHCPC_CMD_OPTIONS string {
  prompt "ifup udhcpc command line options" if [IFUPDOWN && UDHCPC]
  default ["-R -n"] if [IFUPDOWN && UDHCPC]
 <<<Command line options to pass to udhcpc from ifup.
Intended to alter options not available in /etc/network/interfaces.
(IE: --syslog --background etc...)
>>>
 }
 config UDPSVD boolean {
  prompt "udpsvd" if []
  default [y] if []
 <<<udpsvd listens on an UDP port and runs a program for each new
connection.
>>>
 }
 config VCONFIG boolean {
  prompt "vconfig" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<Creates, removes, and configures VLAN interfaces
>>>
 }
 config WGET boolean {
  prompt "wget" if []
  default [y] if []
 <<<wget is a utility for non-interactive download of files from HTTP,
HTTPS, and FTP servers.
>>>
  config FEATURE_WGET_STATUSBAR boolean {
   prompt "Enable a nifty process meter (+2k)" if [WGET]
   default [y] if [WGET]
  <<<Enable the transfer progress bar for wget transfers.
>>>
  }
  config FEATURE_WGET_AUTHENTICATION boolean {
   prompt "Enable HTTP authentication" if [WGET]
   default [y] if [WGET]
  <<<Support authenticated HTTP transfers.
>>>
  }
  config FEATURE_WGET_LONG_OPTIONS boolean {
   prompt "Enable long options" if [WGET && LONG_OPTS]
   default [y] if [WGET && LONG_OPTS]
  <<<Support long options for the wget applet.
>>>
  }
  config FEATURE_WGET_TIMEOUT boolean {
   prompt "Enable read timeout option -T SEC" if [WGET]
   default [y] if [WGET]
  <<<Supports network read timeout for wget, so that wget will give
up and timeout when reading network data, through the -T command
line option.  Currently only network data read timeout is
supported (i.e., timeout is not applied to the DNS nor TCP
connection initialization).  When FEATURE_WGET_LONG_OPTIONS is
also enabled, the --timeout option will work in addition to -T.
>>>
  }
 }
 config ZCIP boolean {
  prompt "zcip" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
  select FEATURE_SYSLOG if [PLATFORM_LINUX]
 <<<ZCIP provides ZeroConf IPv4 address selection, according to RFC 3927.
It's a daemon that allocates and defends a dynamically assigned
address on the 169.254/16 network, requiring no system administrator.

See http://www.zeroconf.org for further details, and "zcip.script"
in the busybox examples.
>>>
 }
}
menu "Print Utilities" {
<<<>>>
 config LPD boolean {
  prompt "lpd" if []
  default [y] if []
 <<<lpd is a print spooling daemon.
>>>
 }
 config LPR boolean {
  prompt "lpr" if []
  default [y] if []
 <<<lpr sends files (or standard input) to a print spooling daemon.
>>>
 }
 config LPQ boolean {
  prompt "lpq" if []
  default [y] if []
 <<<lpq is a print spool queue examination and manipulation program.
>>>
 }
}
menu "Mail Utilities" {
<<<>>>
 config MAKEMIME boolean {
  prompt "makemime" if []
  default [y] if []
 <<<Create MIME-formatted messages.
>>>
  config FEATURE_MIME_CHARSET string {
   prompt "Default charset" if [MAKEMIME || REFORMIME || SENDMAIL]
   default ["us-ascii"] if [MAKEMIME || REFORMIME || SENDMAIL]
  <<<Default charset of the message.
>>>
  }
 }
 config POPMAILDIR boolean {
  prompt "popmaildir" if []
  default [y] if []
 <<<Simple yet powerful POP3 mail popper. Delivers content
of remote mailboxes to local Maildir.
>>>
  config FEATURE_POPMAILDIR_DELIVERY boolean {
   prompt "Allow message filters and custom delivery program" if [POPMAILDIR]
   default [y] if [POPMAILDIR]
  <<<Allow to use a custom program to filter the content
of the message before actual delivery (-F "prog [args...]").
Allow to use a custom program for message actual delivery
(-M "prog [args...]").
>>>
  }
 }
 config REFORMIME boolean {
  prompt "reformime" if []
  default [y] if []
 <<<Parse MIME-formatted messages.
>>>
  config FEATURE_REFORMIME_COMPAT boolean {
   prompt "Accept and ignore options other than -x and -X" if [REFORMIME]
   default [y] if [REFORMIME]
  <<<Accept (for compatibility only) and ignore options
other than -x and -X.
>>>
  }
 }
 config SENDMAIL boolean {
  prompt "sendmail" if []
  default [y] if []
 <<<Barebones sendmail.
>>>
 }
}
menu "Process Utilities" {
<<<>>>
 config IOSTAT boolean {
  prompt "iostat" if []
  default [y] if []
 <<<Report CPU and I/O statistics>>>
 }
 config MPSTAT boolean {
  prompt "mpstat" if []
  default [y] if []
 <<<Per-processor statistics>>>
 }
 config PMAP boolean {
  prompt "pmap" if []
  default [y] if []
 <<<Display processes' memory mappings.>>>
 }
 config POWERTOP boolean {
  prompt "powertop" if []
  default [y] if []
 <<<Analyze power consumption on Intel-based laptops>>>
 }
 config SMEMCAP boolean {
  prompt "smemcap" if []
  default [y] if []
 <<<smemcap is a tool for capturing process data for smem,
a memory usage statistic tool.
>>>
 }
 config FREE boolean {
  prompt "free" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<free displays the total amount of free and used physical and swap
memory in the system, as well as the buffers used by the kernel.
The shared memory column should be ignored; it is obsolete.
>>>
 }
 config FUSER boolean {
  prompt "fuser" if []
  default [y] if []
 <<<fuser lists all PIDs (Process IDs) that currently have a given
file open. fuser can also list all PIDs that have a given network
(TCP or UDP) port open.
>>>
 }
 config KILL boolean {
  prompt "kill" if []
  default [y] if []
 <<<The command kill sends the specified signal to the specified
process or process group. If no signal is specified, the TERM
signal is sent.
>>>
  config KILLALL boolean {
   prompt "killall" if [KILL]
   default [y] if [KILL]
  <<<killall sends a signal to all processes running any of the
specified commands. If no signal name is specified, SIGTERM is
sent.
>>>
  }
  config KILLALL5 boolean {
   prompt "killall5" if [KILL]
   default [y] if [KILL]
  <<<>>>
  }
 }
 config NMETER boolean {
  prompt "nmeter" if []
  default [y] if []
 <<<Prints selected system stats continuously, one line per update.
>>>
 }
 config PGREP boolean {
  prompt "pgrep" if []
  default [y] if []
 <<<Look for processes by name.
>>>
 }
 config PIDOF boolean {
  prompt "pidof" if []
  default [y] if []
 <<<Pidof finds the process id's (pids) of the named programs. It prints
those id's on the standard output.
>>>
  config FEATURE_PIDOF_SINGLE boolean {
   prompt "Enable argument for single shot (-s)" if [PIDOF]
   default [y] if [PIDOF]
  <<<Support argument '-s' for returning only the first pid found.
>>>
  }
  config FEATURE_PIDOF_OMIT boolean {
   prompt "Enable argument for omitting pids (-o)" if [PIDOF]
   default [y] if [PIDOF]
  <<<Support argument '-o' for omitting the given pids in output.
The special pid %PPID can be used to name the parent process
of the pidof, in other words the calling shell or shell script.
>>>
  }
 }
 config PKILL boolean {
  prompt "pkill" if []
  default [y] if []
 <<<Send signals to processes by name.
>>>
 }
 config PS boolean {
  prompt "ps" if []
  default [y] if []
 <<<ps gives a snapshot of the current processes.
>>>
  config FEATURE_PS_WIDE boolean {
   prompt "Enable wide output option (-w)" if [PS]
   default [y] if [PS]
  <<<Support argument 'w' for wide output.
If given once, 132 chars are printed, and if given more
than once, the length is unlimited.
>>>
  }
  config FEATURE_PS_TIME boolean {
   prompt "Enable time and elapsed time output" if [PS && DESKTOP && PLATFORM_LINUX]
   default [y] if [PS && DESKTOP && PLATFORM_LINUX]
  <<<Support -o time and -o etime output specifiers.
>>>
  }
  config FEATURE_PS_ADDITIONAL_COLUMNS boolean {
   prompt "Enable additional ps columns" if [PS && DESKTOP]
   default [y] if [PS && DESKTOP]
  <<<Support -o rgroup, -o ruser, -o nice output specifiers.
>>>
  }
 }
 config FEATURE_PS_UNUSUAL_SYSTEMS boolean {
  prompt "Support Linux prior to 2.4.0 and non-ELF systems" if [FEATURE_PS_TIME]
  default [n] if [FEATURE_PS_TIME]
 <<<Include support for measuring HZ on old kernels and non-ELF systems
(if you are on Linux 2.4.0+ and use ELF, you don't need this)
>>>
 }
 config RENICE boolean {
  prompt "renice" if []
  default [y] if []
 <<<Renice alters the scheduling priority of one or more running
processes.
>>>
 }
 config BB_SYSCTL boolean {
  prompt "sysctl" if []
  default [y] if []
 <<<Configure kernel parameters at runtime.
>>>
 }
 config TOP boolean {
  prompt "top" if []
  default [y] if []
 <<<The top program provides a dynamic real-time view of a running
system.
>>>
  config FEATURE_TOP_CPU_USAGE_PERCENTAGE boolean {
   prompt "Show CPU per-process usage percentage" if [TOP]
   default [y] if [TOP]
  <<<Make top display CPU usage for each process.
This adds about 2k.
>>>
   config FEATURE_TOP_CPU_GLOBAL_PERCENTS boolean {
    prompt "Show CPU global usage percentage" if [FEATURE_TOP_CPU_USAGE_PERCENTAGE]
    default [y] if [FEATURE_TOP_CPU_USAGE_PERCENTAGE]
   <<<Makes top display "CPU: NN% usr NN% sys..." line.
This adds about 0.5k.
>>>
    config FEATURE_TOP_SMP_CPU boolean {
     prompt "SMP CPU usage display ('c' key)" if [FEATURE_TOP_CPU_GLOBAL_PERCENTS]
     default [y] if [FEATURE_TOP_CPU_GLOBAL_PERCENTS]
    <<<Allow 'c' key to switch between individual/cumulative CPU stats
This adds about 0.5k.
>>>
    }
   }
   config FEATURE_TOP_DECIMALS boolean {
    prompt "Show 1/10th of a percent in CPU/mem statistics" if [FEATURE_TOP_CPU_USAGE_PERCENTAGE]
    default [y] if [FEATURE_TOP_CPU_USAGE_PERCENTAGE]
   <<<Show 1/10th of a percent in CPU/mem statistics.
This adds about 0.3k.
>>>
   }
  }
  config FEATURE_TOP_SMP_PROCESS boolean {
   prompt "Show CPU process runs on ('j' field)" if [TOP]
   default [y] if [TOP]
  <<<Show CPU where process was last found running on.
This is the 'j' field.
>>>
  }
  config FEATURE_TOPMEM boolean {
   prompt "Topmem command ('s' key)" if [TOP]
   default [y] if [TOP]
  <<<Enable 's' in top (gives lots of memory info).
>>>
  }
  config FEATURE_SHOW_THREADS boolean {
   prompt "Support for showing threads in ps/top" if [PS || TOP]
   default [y] if [PS || TOP]
  <<<Enables ps -T option and 'h' command in top
>>>
  }
 }
 config UPTIME boolean {
  prompt "uptime" if [PLATFORM_LINUX]
  default [y] if [PLATFORM_LINUX]
 <<<uptime gives a one line display of the current time, how long
the system has been running, how many users are currently logged
on, and the system load averages for the past 1, 5, and 15 minutes.
>>>
 }
 config WATCH boolean {
  prompt "watch" if []
  default [y] if []
 <<<watch is used to execute a program periodically, showing
output to the screen.
>>>
 }
}
menu "Runit Utilities" {
<<<>>>
 config RUNSV boolean {
  prompt "runsv" if []
  default [y] if []
 <<<runsv starts and monitors a service and optionally an appendant log
service.
>>>
 }
 config RUNSVDIR boolean {
  prompt "runsvdir" if []
  default [y] if []
 <<<runsvdir starts a runsv process for each subdirectory, or symlink to
a directory, in the services directory dir, up to a limit of 1000
subdirectories, and restarts a runsv process if it terminates.
>>>
  config FEATURE_RUNSVDIR_LOG boolean {
   prompt "Enable scrolling argument log" if [RUNSVDIR]
   default [n] if [RUNSVDIR]
  <<<Enable feature where second parameter of runsvdir holds last error
message (viewable via top/ps). Otherwise (feature is off
or no parameter), error messages go to stderr only.
>>>
  }
 }
 config SV boolean {
  prompt "sv" if []
  default [y] if []
 <<<sv reports the current status and controls the state of services
monitored by the runsv supervisor.
>>>
  config SV_DEFAULT_SERVICE_DIR string {
   prompt "Default directory for services" if [SV]
   default ["/var/service"] if [SV]
  <<<Default directory for services.
Defaults to "/var/service"
>>>
  }
 }
 config SVLOGD boolean {
  prompt "svlogd" if []
  default [y] if []
 <<<svlogd continuously reads log data from its standard input, optionally
filters log messages, and writes the data to one or more automatically
rotated logs.
>>>
 }
 config CHPST boolean {
  prompt "chpst" if []
  default [y] if []
 <<<chpst changes the process state according to the given options, and
execs specified program.
>>>
 }
 config SETUIDGID boolean {
  prompt "setuidgid" if []
  default [y] if []
 <<<Sets soft resource limits as specified by options
>>>
 }
 config ENVUIDGID boolean {
  prompt "envuidgid" if []
  default [y] if []
 <<<Sets $UID to account's uid and $GID to account's gid
>>>
 }
 config ENVDIR boolean {
  prompt "envdir" if []
  default [y] if []
 <<<Sets various environment variables as specified by files
in the given directory
>>>
 }
 config SOFTLIMIT boolean {
  prompt "softlimit" if []
  default [y] if []
 <<<Sets soft resource limits as specified by options
>>>
 }
}
menu "SELinux Utilities" {
 depends on [SELINUX]
<<<>>>
 config CHCON boolean {
  prompt "chcon" if [SELINUX]
  default [n] if [SELINUX]
 <<<Enable support to change the security context of file.
>>>
  config FEATURE_CHCON_LONG_OPTIONS boolean {
   prompt "Enable long options" if [SELINUX && CHCON && LONG_OPTS]
   default [y] if [SELINUX && CHCON && LONG_OPTS]
  <<<Support long options for the chcon applet.
>>>
  }
 }
 config GETENFORCE boolean {
  prompt "getenforce" if [SELINUX]
  default [n] if [SELINUX]
 <<<Enable support to get the current mode of SELinux.
>>>
 }
 config GETSEBOOL boolean {
  prompt "getsebool" if [SELINUX]
  default [n] if [SELINUX]
 <<<Enable support to get SELinux boolean values.
>>>
 }
 config LOAD_POLICY boolean {
  prompt "load_policy" if [SELINUX]
  default [n] if [SELINUX]
 <<<Enable support to load SELinux policy.
>>>
 }
 config MATCHPATHCON boolean {
  prompt "matchpathcon" if [SELINUX]
  default [n] if [SELINUX]
 <<<Enable support to get default security context of the
specified path from the file contexts configuration.
>>>
 }
 config RESTORECON boolean {
  prompt "restorecon" if [SELINUX]
  default [n] if [SELINUX]
 <<<Enable support to relabel files. The feature is almost
the same as setfiles, but usage is a little different.
>>>
 }
 config RUNCON boolean {
  prompt "runcon" if [SELINUX]
  default [n] if [SELINUX]
 <<<Enable support to run command in speficied security context.
>>>
  config FEATURE_RUNCON_LONG_OPTIONS boolean {
   prompt "Enable long options" if [SELINUX && RUNCON && LONG_OPTS]
   default [y] if [SELINUX && RUNCON && LONG_OPTS]
  <<<Support long options for the runcon applet.
>>>
  }
 }
 config SELINUXENABLED boolean {
  prompt "selinuxenabled" if [SELINUX]
  default [n] if [SELINUX]
 <<<Enable support for this command to be used within shell scripts
to determine if selinux is enabled.
>>>
 }
 config SETENFORCE boolean {
  prompt "setenforce" if [SELINUX]
  default [n] if [SELINUX]
 <<<Enable support to modify the mode SELinux is running in.
>>>
 }
 config SETFILES boolean {
  prompt "setfiles" if [SELINUX]
  default [n] if [SELINUX]
 <<<Enable support to modify to relabel files.
Notice: If you built libselinux with -D_FILE_OFFSET_BITS=64,
(It is default in libselinux's Makefile), you _must_ enable
CONFIG_LFS.
>>>
  config FEATURE_SETFILES_CHECK_OPTION boolean {
   prompt "Enable check option" if [SELINUX && SETFILES]
   default [n] if [SELINUX && SETFILES]
  <<<Support "-c" option (check the validity of the contexts against
the specified binary policy) for setfiles. Requires libsepol.
>>>
  }
 }
 config SETSEBOOL boolean {
  prompt "setsebool" if [SELINUX]
  default [n] if [SELINUX]
 <<<Enable support for change boolean.
semanage and -P option is not supported yet.
>>>
 }
 config SESTATUS boolean {
  prompt "sestatus" if [SELINUX]
  default [n] if [SELINUX]
 <<<Displays the status of SELinux.
>>>
 }
}
menu "Shells" {
<<<>>>
 config ASH boolean {
  prompt "ash" if [!NOMMU]
  default [y] if [!NOMMU]
 <<<Tha 'ash' shell adds about 60k in the default configuration and is
the most complete and most pedantically correct shell included with
busybox. This shell is actually a derivative of the Debian 'dash'
shell (by Herbert Xu), which was created by porting the 'ash' shell
(written by Kenneth Almquist) from NetBSD.
>>>
  config ASH_BASH_COMPAT boolean {
   prompt "bash-compatible extensions" if [ASH]
   default [y] if [ASH]
  <<<Enable bash-compatible extensions.
>>>
  }
  config ASH_JOB_CONTROL boolean {
   prompt "Job control" if [ASH]
   default [y] if [ASH]
  <<<Enable job control in the ash shell.
>>>
  }
  config ASH_ALIAS boolean {
   prompt "alias support" if [ASH]
   default [y] if [ASH]
  <<<Enable alias support in the ash shell.
>>>
  }
  config ASH_GETOPTS boolean {
   prompt "Builtin getopt to parse positional parameters" if [ASH]
   default [y] if [ASH]
  <<<Enable getopts builtin in the ash shell.
>>>
  }
  config ASH_BUILTIN_ECHO boolean {
   prompt "Builtin version of 'echo'" if [ASH]
   default [y] if [ASH]
  <<<Enable support for echo, builtin to ash.
>>>
  }
  config ASH_BUILTIN_PRINTF boolean {
   prompt "Builtin version of 'printf'" if [ASH]
   default [y] if [ASH]
  <<<Enable support for printf, builtin to ash.
>>>
  }
  config ASH_BUILTIN_TEST boolean {
   prompt "Builtin version of 'test'" if [ASH]
   default [y] if [ASH]
  <<<Enable support for test, builtin to ash.
>>>
  }
  config ASH_CMDCMD boolean {
   prompt "'command' command to override shell builtins" if [ASH]
   default [y] if [ASH]
  <<<Enable support for the ash 'command' builtin, which allows
you to run the specified command with the specified arguments,
even when there is an ash builtin command with the same name.
>>>
  }
  config ASH_MAIL boolean {
   prompt "Check for new mail on interactive shells" if [ASH]
   default [n] if [ASH]
  <<<Enable "check for new mail" in the ash shell.
>>>
  }
  config ASH_OPTIMIZE_FOR_SIZE boolean {
   prompt "Optimize for size instead of speed" if [ASH]
   default [y] if [ASH]
  <<<Compile ash for reduced size at the price of speed.
>>>
  }
  config ASH_RANDOM_SUPPORT boolean {
   prompt "Pseudorandom generator and $RANDOM variable" if [ASH]
   default [y] if [ASH]
  <<<Enable pseudorandom generator and dynamic variable "$RANDOM".
Each read of "$RANDOM" will generate a new pseudorandom value.
You can reset the generator by using a specified start value.
After "unset RANDOM" the generator will switch off and this
variable will no longer have special treatment.
>>>
  }
  config ASH_EXPAND_PRMT boolean {
   prompt "Expand prompt string" if [ASH]
   default [y] if [ASH]
  <<<"PS#" may contain volatile content, such as backquote commands.
This option recreates the prompt string from the environment
variable each time it is displayed.
>>>
  }
 }
 config CTTYHACK boolean {
  prompt "cttyhack" if []
  default [y] if []
 <<<One common problem reported on the mailing list is "can't access tty;
job control turned off" error message which typically appears when
one tries to use shell with stdin/stdout opened to /dev/console.
This device is special - it cannot be a controlling tty.

Proper solution is to use correct device instead of /dev/console.

cttyhack provides "quick and dirty" solution to this problem.
It analyzes stdin with various ioctls, trying to determine whether
it is a /dev/ttyN or /dev/ttySN (virtual terminal or serial line).
If it detects one, it closes stdin/out/err and reopens that device.
Then it executes given program. Opening the device will make
that device a controlling tty. This may require cttyhack
to be a session leader.

Example for /etc/inittab (for busybox init):

::respawn:/bin/cttyhack /bin/sh

Starting an interactive shell from boot shell script:

setsid cttyhack sh

Giving controlling tty to shell running with PID 1:

# exec cttyhack sh

Without cttyhack, you need to know exact tty name,
and do something like this:

# exec setsid sh -c 'exec sh </dev/tty1 >/dev/tty1 2>&1'
>>>
 }
 config HUSH boolean {
  prompt "hush" if []
  default [y] if []
 <<<hush is a small shell (25k). It handles the normal flow control
constructs such as if/then/elif/else/fi, for/in/do/done, while loops,
case/esac. Redirections, here documents, $((arithmetic))
and functions are supported.

It will compile and work on no-mmu systems.

It does not handle select, aliases, tilde expansion,
&>file and >&file redirection of stdout+stderr.
>>>
  config HUSH_BASH_COMPAT boolean {
   prompt "bash-compatible extensions" if [HUSH]
   default [y] if [HUSH]
  <<<Enable bash-compatible extensions.
>>>
   config HUSH_BRACE_EXPANSION boolean {
    prompt "Brace expansion" if [HUSH_BASH_COMPAT]
    default [y] if [HUSH_BASH_COMPAT]
   <<<Enable {abc,def} extension.
>>>
   }
  }
  config HUSH_HELP boolean {
   prompt "help builtin" if [HUSH]
   default [y] if [HUSH]
  <<<Enable help builtin in hush. Code size + ~1 kbyte.
>>>
  }
  config HUSH_INTERACTIVE boolean {
   prompt "Interactive mode" if [HUSH]
   default [y] if [HUSH]
  <<<Enable interactive mode (prompt and command editing).
Without this, hush simply reads and executes commands
from stdin just like a shell script from a file.
No prompt, no PS1/PS2 magic shell variables.
>>>
   config HUSH_SAVEHISTORY boolean {
    prompt "Save command history to .hush_history" if [HUSH_INTERACTIVE && FEATURE_EDITING_SAVEHISTORY]
    default [y] if [HUSH_INTERACTIVE && FEATURE_EDITING_SAVEHISTORY]
   <<<Enable history saving in hush.
>>>
   }
   config HUSH_JOB boolean {
    prompt "Job control" if [HUSH_INTERACTIVE]
    default [y] if [HUSH_INTERACTIVE]
   <<<Enable job control: Ctrl-Z backgrounds, Ctrl-C interrupts current
command (not entire shell), fg/bg builtins work. Without this option,
"cmd &" still works by simply spawning a process and immediately
prompting for next command (or executing next command in a script),
but no separate process group is formed.
>>>
   }
  }
  config HUSH_TICK boolean {
   prompt "Process substitution" if [HUSH]
   default [y] if [HUSH]
  <<<Enable process substitution `command` and $(command) in hush.
>>>
  }
  config HUSH_IF boolean {
   prompt "Support if/then/elif/else/fi" if [HUSH]
   default [y] if [HUSH]
  <<<Enable if/then/elif/else/fi in hush.
>>>
  }
  config HUSH_LOOPS boolean {
   prompt "Support for, while and until loops" if [HUSH]
   default [y] if [HUSH]
  <<<Enable for, while and until loops in hush.
>>>
  }
  config HUSH_CASE boolean {
   prompt "Support case ... esac statement" if [HUSH]
   default [y] if [HUSH]
  <<<Enable case ... esac statement in hush. +400 bytes.
>>>
  }
  config HUSH_FUNCTIONS boolean {
   prompt "Support funcname() { commands; } syntax" if [HUSH]
   default [y] if [HUSH]
  <<<Enable support for shell functions in hush. +800 bytes.
>>>
   config HUSH_LOCAL boolean {
    prompt "Support local builtin" if [HUSH_FUNCTIONS]
    default [y] if [HUSH_FUNCTIONS]
   <<<Enable support for local variables in functions.
>>>
   }
  }
  config HUSH_RANDOM_SUPPORT boolean {
   prompt "Pseudorandom generator and $RANDOM variable" if [HUSH]
   default [y] if [HUSH]
  <<<Enable pseudorandom generator and dynamic variable "$RANDOM".
Each read of "$RANDOM" will generate a new pseudorandom value.
>>>
  }
  config HUSH_EXPORT_N boolean {
   prompt "Support 'export -n' option" if [HUSH]
   default [y] if [HUSH]
  <<<export -n unexports variables. It is a bash extension.
>>>
  }
  config HUSH_MODE_X boolean {
   prompt "Support 'hush -x' option and 'set -x' command" if [HUSH]
   default [y] if [HUSH]
  <<<This instructs hush to print commands before execution.
Adds ~300 bytes.
>>>
  }
 }
 config MSH boolean {
  prompt "msh (deprecated: aliased to hush)" if []
  default [n] if []
  select HUSH if []
 <<<msh is deprecated and will be removed, please migrate to hush.

>>>
 }
 choice boolean {
  prompt "Choose which shell is aliased to 'sh' name" if []
  default [FEATURE_SH_IS_ASH] if []
 <<<Choose which shell you want to be executed by 'sh' alias.
The ash shell is the most bash compatible and full featured one.
>>>
  config FEATURE_SH_IS_ASH boolean {
   prompt "ash" if [<choice> && ASH && !NOMMU]
  <<<>>>
  }
  config FEATURE_SH_IS_HUSH boolean {
   prompt "hush" if [<choice> && HUSH]
  <<<>>>
  }
  config FEATURE_SH_IS_NONE boolean {
   prompt "none" if [<choice>]
  <<<>>>
  }
 }
 choice boolean {
  prompt "Choose which shell is aliased to 'bash' name" if []
  default [FEATURE_BASH_IS_NONE] if []
 <<<Choose which shell you want to be executed by 'bash' alias.
The ash shell is the most bash compatible and full featured one.

Note that selecting this option does not switch on any bash
compatibility code. It merely makes it possible to install
/bin/bash (sym)link and run scripts which start with
#!/bin/bash line.

Many systems use it in scripts which use bash-specific features,
even simple ones like $RANDOM. Without this option, busybox
can't be used for running them because it won't recongnize
"bash" as a supported applet name.
>>>
  config FEATURE_BASH_IS_ASH boolean {
   prompt "ash" if [<choice> && ASH && !NOMMU]
  <<<>>>
  }
  config FEATURE_BASH_IS_HUSH boolean {
   prompt "hush" if [<choice> && HUSH]
  <<<>>>
  }
  config FEATURE_BASH_IS_NONE boolean {
   prompt "none" if [<choice>]
  <<<>>>
  }
 }
 config SH_MATH_SUPPORT boolean {
  prompt "POSIX math support" if [ASH || HUSH]
  default [y] if [ASH || HUSH]
 <<<Enable math support in the shell via $((...)) syntax.
>>>
  config SH_MATH_SUPPORT_64 boolean {
   prompt "Extend POSIX math support to 64 bit" if [SH_MATH_SUPPORT]
   default [y] if [SH_MATH_SUPPORT]
  <<<Enable 64-bit math support in the shell. This will make the shell
slightly larger, but will allow computation with very large numbers.
This is not in POSIX, so do not rely on this in portable code.
>>>
  }
 }
 config FEATURE_SH_EXTRA_QUIET boolean {
  prompt "Hide message on interactive shell startup" if [HUSH || ASH]
  default [y] if [HUSH || ASH]
 <<<Remove the busybox introduction when starting a shell.
>>>
 }
 config FEATURE_SH_STANDALONE boolean {
  prompt "Standalone shell" if [(HUSH || ASH) && FEATURE_PREFER_APPLETS]
  default [n] if [(HUSH || ASH) && FEATURE_PREFER_APPLETS]
 <<<This option causes busybox shells to use busybox applets
in preference to executables in the PATH whenever possible. For
example, entering the command 'ifconfig' into the shell would cause
busybox to use the ifconfig busybox applet. Specifying the fully
qualified executable name, such as '/sbin/ifconfig' will still
execute the /sbin/ifconfig executable on the filesystem. This option
is generally used when creating a statically linked version of busybox
for use as a rescue shell, in the event that you screw up your system.

This is implemented by re-execing /proc/self/exe (typically)
with right parameters. Some selected applets ("NOFORK" applets)
can even be executed without creating new process.
Instead, busybox will call <applet>_main() internally.

However, this causes problems in chroot jails without mounted /proc
and with ps/top (command name can be shown as 'exe' for applets
started this way).>>>
 }
 config FEATURE_SH_NOFORK boolean {
  prompt "Run 'nofork' applets directly" if [(HUSH || ASH) && FEATURE_PREFER_APPLETS]
  default [n] if [(HUSH || ASH) && FEATURE_PREFER_APPLETS]
 <<<This option causes busybox shells [currently only ash]
to not execute typical fork/exec/wait sequence, but call <applet>_main
directly, if possible. (Sometimes it is not possible: for example,
this is not possible in pipes).

This will be done only for some applets (those which are marked
NOFORK in include/applets.h).

This may significantly speed up some shell scripts.

This feature is relatively new. Use with care.
>>>
 }
}
menu "System Logging Utilities" {
<<<>>>
 config SYSLOGD boolean {
  prompt "syslogd" if []
  default [y] if []
 <<<The syslogd utility is used to record logs of all the
significant events that occur on a system. Every
message that is logged records the date and time of the
event, and will generally also record the name of the
application that generated the message. When used in
conjunction with klogd, messages from the Linux kernel
can also be recorded. This is terribly useful,
especially for finding what happened when something goes
wrong. And something almost always will go wrong if
you wait long enough....
>>>
  config FEATURE_ROTATE_LOGFILE boolean {
   prompt "Rotate message files" if [SYSLOGD]
   default [y] if [SYSLOGD]
  <<<This enables syslogd to rotate the message files
on his own. No need to use an external rotatescript.
>>>
  }
  config FEATURE_REMOTE_LOG boolean {
   prompt "Remote Log support" if [SYSLOGD]
   default [y] if [SYSLOGD]
  <<<When you enable this feature, the syslogd utility can
be used to send system log messages to another system
connected via a network. This allows the remote
machine to log all the system messages, which can be
terribly useful for reducing the number of serial
cables you use. It can also be a very good security
measure to prevent system logs from being tampered with
by an intruder.
>>>
  }
  config FEATURE_SYSLOGD_DUP boolean {
   prompt "Support -D (drop dups) option" if [SYSLOGD]
   default [y] if [SYSLOGD]
  <<<Option -D instructs syslogd to drop consecutive messages
which are totally the same.
>>>
  }
  config FEATURE_SYSLOGD_READ_BUFFER_SIZE integer {
   prompt "Read buffer size in bytes" if [SYSLOGD]
   default [256] if [SYSLOGD]
   range [256 20000] if [SYSLOGD]
  <<<This option sets the size of the syslog read buffer.
Actual memory usage increases around five times the
change done here.
>>>
  }
  config FEATURE_IPC_SYSLOG boolean {
   prompt "Circular Buffer support" if [SYSLOGD]
   default [y] if [SYSLOGD]
  <<<When you enable this feature, the syslogd utility will
use a circular buffer to record system log messages.
When the buffer is filled it will continue to overwrite
the oldest messages. This can be very useful for
systems with little or no permanent storage, since
otherwise system logs can eventually fill up your
entire filesystem, which may cause your system to
break badly.
>>>
   config FEATURE_IPC_SYSLOG_BUFFER_SIZE integer {
    prompt "Circular buffer size in Kbytes (minimum 4KB)" if [FEATURE_IPC_SYSLOG]
    default [16] if [FEATURE_IPC_SYSLOG]
    range [4 2147483647] if [FEATURE_IPC_SYSLOG]
   <<<This option sets the size of the circular buffer
used to record system log messages.
>>>
   }
   config LOGREAD boolean {
    prompt "logread" if [FEATURE_IPC_SYSLOG]
    default [y] if [FEATURE_IPC_SYSLOG]
   <<<If you enabled Circular Buffer support, you almost
certainly want to enable this feature as well. This
utility will allow you to read the messages that are
stored in the syslogd circular buffer.
>>>
    config FEATURE_LOGREAD_REDUCED_LOCKING boolean {
     prompt "Double buffering" if [LOGREAD]
     default [y] if [LOGREAD]
    <<<'logread' ouput to slow serial terminals can have
side effects on syslog because of the semaphore.
This option make logread to double buffer copy
from circular buffer, minimizing semaphore
contention at some minor memory expense.
>>>
    }
   }
  }
 }
 config KLOGD boolean {
  prompt "klogd" if []
  default [y] if []
 <<<klogd is a utility which intercepts and logs all
messages from the Linux kernel and sends the messages
out to the 'syslogd' utility so they can be logged. If
you wish to record the messages produced by the kernel,
you should enable this option.
>>>
  config FEATURE_KLOGD_KLOGCTL boolean {
   prompt "Use the klogctl() interface" if [KLOGD && PLATFORM_LINUX]
   default [y] if [KLOGD && PLATFORM_LINUX]
  <<<The klogd applet supports two interfaces for reading
kernel messages. Linux provides the klogctl() interface
which allows reading messages from the kernel ring buffer
independently from the file system.

If you answer 'N' here, klogd will use the more portable
approach of reading them from /proc or a device node.
However, this method requires the file to be available.

If in doubt, say 'Y'.
>>>
  }
 }
 config LOGGER boolean {
  prompt "logger" if []
  default [y] if []
  select FEATURE_SYSLOG if []
 <<<The logger utility allows you to send arbitrary text
messages to the system log (i.e. the 'syslogd' utility) so
they can be logged. This is generally used to help locate
problems that occur within programs and scripts.
>>>
 }
}
!!!Success!!!
